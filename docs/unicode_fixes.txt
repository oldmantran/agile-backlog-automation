Unicode Fix Suggestions
==============================

File: X:\Programs\agile-backlog-automation\unified_api_server.py
================================================================
  Line 99: 📋
    Current: logger.info(f"📋 Set active job: {job_id}")
    Fixed:   logger.info(f"[CONFIG] Set active job: {job_id}")

  Line 126: 🔧
    Current: logger.info("🔧 SSE progress streaming ready")
    Fixed:   logger.info("[TOOL] SSE progress streaming ready")

  Line 482: 🔍
    Current: logger.info(f"🔍 Request received at: {datetime.now().isoformat()}")
    Fixed:   logger.info(f"[SEARCH] Request received at: {datetime.now().isoformat()}")

  Line 483: 🔍
    Current: logger.info(f"🔍 Include test artifacts: {project_data.includeTestArtifacts}")
    Fixed:   logger.info(f"[SEARCH] Include test artifacts: {project_data.includeTestArtifacts}")

  Line 525: ✅
    Current: logger.info(f"✅ Background task added for job: {job_id}")
    Fixed:   logger.info(f"[SUCCESS] Background task added for job: {job_id}")

  Line 536: 📤
    Current: logger.info(f"📤 Returning response: {response_data}")
    Fixed:   logger.info(f"[REQUEST] Returning response: {response_data}")

  Line 608: 🔍
    Current: logger.info(f"🔍 Request received at: {datetime.now().isoformat()}")
    Fixed:   logger.info(f"[SEARCH] Request received at: {datetime.now().isoformat()}")

  Line 609: 🔍
    Current: logger.info(f"🔍 Background tasks object: {background_tasks}")
    Fixed:   logger.info(f"[SEARCH] Background tasks object: {background_tasks}")

  Line 615: ❌
    Current: logger.error(f"❌ Project file not found: {project_file}")
    Fixed:   logger.error(f"[ERROR] Project file not found: {project_file}")

  Line 621: 📋
    Current: logger.info(f"📋 Project info loaded: {project_info.get('id', 'unknown')}")
    Fixed:   logger.info(f"[CONFIG] Project info loaded: {project_info.get('id', 'unknown')}")

  Line 643: ✅
    Current: logger.info(f"✅ Background task added for job: {job_id}")
    Fixed:   logger.info(f"[SUCCESS] Background task added for job: {job_id}")

  Line 647: 📤
    Current: logger.info(f"📤 Returning response: {response_data}")
    Fixed:   logger.info(f"[REQUEST] Returning response: {response_data}")

  Line 648: 📤
    Current: logger.info(f"📤 Response timestamp: {datetime.now().isoformat()}")
    Fixed:   logger.info(f"[REQUEST] Response timestamp: {datetime.now().isoformat()}")

  Line 657: ❌
    Current: logger.error(f"❌ {error_msg}")
    Fixed:   logger.error(f"[ERROR] {error_msg}")

  Line 683: 📊
    Current: logger.info(f"📊 Progress update for job {job_id}: {active_jobs[job_id].get('progress', 0)}% → {current_progress}%")
    Fixed:   logger.info(f"[STATS] Progress update for job {job_id}: {active_jobs[job_id].get('progress', 0)}% → {current_progress}%")

  Line 685: 📊
    Current: logger.info(f"📊 Initial status for job {job_id}: {current_progress}%")
    Fixed:   logger.info(f"[STATS] Initial status for job {job_id}: {current_progress}%")

  Line 799: ❌
    Current: logger.error(f"❌ Project file not found: {project_file}")
    Fixed:   logger.error(f"[ERROR] Project file not found: {project_file}")

  Line 810: ❌
    Current: logger.error(f"❌ No backlog found for project: {project_id}")
    Fixed:   logger.error(f"[ERROR] No backlog found for project: {project_id}")

  Line 845: ✅
    Current: logger.info(f"✅ Background task added for test generation job: {job_id}")
    Fixed:   logger.info(f"[SUCCESS] Background task added for test generation job: {job_id}")

  Line 859: ❌
    Current: logger.error(f"❌ {error_msg}")
    Fixed:   logger.error(f"[ERROR] {error_msg}")

  Line 1087: 🔄
    Current: logger.info(f"🔄 Starting threaded backlog generation for job {job_id}")
    Fixed:   logger.info(f"[RETRY] Starting threaded backlog generation for job {job_id}")

  Line 1093: ✅
    Current: logger.info(f"✅ Threaded backlog generation completed for job {job_id}")
    Fixed:   logger.info(f"[SUCCESS] Threaded backlog generation completed for job {job_id}")

  Line 1097: ❌
    Current: logger.error(f"❌ {error_msg}")
    Fixed:   logger.error(f"[ERROR] {error_msg}")

  Line 1163: 🔍
    Current: logger.info(f"🔍 Azure DevOps Configuration Analysis for job {job_id}:")
    Fixed:   logger.info(f"[SEARCH] Azure DevOps Configuration Analysis for job {job_id}:")

  Line 1184: ❌
    Current: logger.warning(f"❌ Azure integration enabled but missing required fields for job {job_id}")
    Fixed:   logger.warning(f"[ERROR] Azure integration enabled but missing required fields for job {job_id}")

  Line 1190: ✅
    Current: logger.info(f"✅ Auto-enabling Azure integration for job {job_id} (all required fields present)")
    Fixed:   logger.info(f"[SUCCESS] Auto-enabling Azure integration for job {job_id} (all required fields present)")

  Line 1193: ❌
    Current: logger.warning(f"❌ Cannot auto-enable Azure integration for job {job_id} (missing required fields)")
    Fixed:   logger.warning(f"[ERROR] Cannot auto-enable Azure integration for job {job_id} (missing required fields)")

  Line 1199: 🔧
    Current: logger.info(f"🔧 Using user ID for settings: {current_user_id}")
    Fixed:   logger.info(f"[TOOL] Using user ID for settings: {current_user_id}")

  Line 1203: 🔧
    Current: logger.info(f"🔧 Initializing WorkflowSupervisor for job {job_id} with Azure config:")
    Fixed:   logger.info(f"[TOOL] Initializing WorkflowSupervisor for job {job_id} with Azure config:")

  Line 1229: 🔧
    Current: logger.info(f"🔧 Initializing WorkflowSupervisor without Azure DevOps integration for job {job_id}")
    Fixed:   logger.info(f"[TOOL] Initializing WorkflowSupervisor without Azure DevOps integration for job {job_id}")

  Line 1249: ✅
    Current: logger.info(f"✅ WorkflowSupervisor initialized successfully for job {job_id}")
    Fixed:   logger.info(f"[SUCCESS] WorkflowSupervisor initialized successfully for job {job_id}")

  Line 1256: ❌
    Current: logger.error(f"❌ {error_msg}")
    Fixed:   logger.error(f"[ERROR] {error_msg}")

  Line 1260: 🔄
    Current: logger.info(f"🔄 Azure DevOps validation failed, retrying without Azure integration for job {job_id}")
    Fixed:   logger.info(f"[RETRY] Azure DevOps validation failed, retrying without Azure integration for job {job_id}")

  Line 1279: ✅
    Current: logger.info(f"✅ WorkflowSupervisor initialized successfully without Azure DevOps for job {job_id}")
    Fixed:   logger.info(f"[SUCCESS] WorkflowSupervisor initialized successfully without Azure DevOps for job {job_id}")

  Line 1282: ❌
    Current: logger.error(f"❌ {error_msg}")
    Fixed:   logger.error(f"[ERROR] {error_msg}")

  Line 1299: 📊
    Current: logger.info(f"📊 Progress update for job {job_id}: {progress}% - {action}")
    Fixed:   logger.info(f"[STATS] Progress update for job {job_id}: {progress}% - {action}")

  Line 1345: 🔧
    Current: logger.info(f"🔧 includeTestArtifacts flag: {include_test_artifacts}")
    Fixed:   logger.info(f"[TOOL] includeTestArtifacts flag: {include_test_artifacts}")

  Line 1363: ✅
    Current: logger.info(f"✅ Workflow execution completed for job {job_id}")
    Fixed:   logger.info(f"[SUCCESS] Workflow execution completed for job {job_id}")

  Line 1394: 📋
    Current: logger.info(f"📋 Backend log automatically saved to: {log_file}")
    Fixed:   logger.info(f"[CONFIG] Backend log automatically saved to: {log_file}")

  Line 1431: 📊
    Current: logger.info(f"📊 Test generation progress for job {job_id}: {progress}% - {action}")
    Fixed:   logger.info(f"[STATS] Test generation progress for job {job_id}: {progress}% - {action}")

  Line 1482: ✅
    Current: logger.info(f"✅ Saved test-enhanced backlog to {test_backlog_file}")
    Fixed:   logger.info(f"[SUCCESS] Saved test-enhanced backlog to {test_backlog_file}")

  Line 1488: 🔄
    Current: logger.info("🔄 Test artifact upload to Azure DevOps not yet implemented")
    Fixed:   logger.info("[RETRY] Test artifact upload to Azure DevOps not yet implemented")

  Line 1498: ✅
    Current: logger.info(f"✅ Test artifact generation completed for job {job_id}")
    Fixed:   logger.info(f"[SUCCESS] Test artifact generation completed for job {job_id}")

  Line 1626: ❌
    Current: logger.error("❌ Test log message - ERROR level")
    Fixed:   logger.error("[ERROR] Test log message - ERROR level")


File: X:\Programs\agile-backlog-automation\agents\developer_agent_old.py
========================================================================
  Line 445: 📋
    Current: print(f"📋 Created {len(fallback_tasks)} fallback tasks for: {title}")
    Fixed:   print(f"[CONFIG] Created {len(fallback_tasks)} fallback tasks for: {title}")

  Line 611: ✅
    Current: print(f"✅ Updated work item {work_item_id} with {estimated_points} story points")
    Fixed:   print(f"[SUCCESS] Updated work item {work_item_id} with {estimated_points} story points")

  Line 614: ❌
    Current: print(f"❌ Failed to update story points for work item {work_item_id}: {e}")
    Fixed:   print(f"[ERROR] Failed to update story points for work item {work_item_id}: {e}")

  Line 623: 📊
    Current: print(f"📊 Estimated {estimated_points} story points for user story: {user_story.get('title', 'Unknown')}")
    Fixed:   print(f"[STATS] Estimated {estimated_points} story points for user story: {user_story.get('title', 'Unknown')}")

  Line 651: ✅
    Current: print(f"✅ Created task: {task_data['title']}")
    Fixed:   print(f"[SUCCESS] Created task: {task_data['title']}")

  Line 653: ❌
    Current: print(f"❌ Failed to create task: {task_data['title']}")
    Fixed:   print(f"[ERROR] Failed to create task: {task_data['title']}")

  Line 655: 📋
    Current: print(f"📋 Decomposed user story {work_item_id} into {len(created_tasks)} tasks")
    Fixed:   print(f"[CONFIG] Decomposed user story {work_item_id} into {len(created_tasks)} tasks")

  Line 659: ❌
    Current: print(f"❌ Failed to decompose user story {work_item_id}: {e}")
    Fixed:   print(f"[ERROR] Failed to decompose user story {work_item_id}: {e}")

  Line 670: ✅
    Current: print(f"✅ Updated work item {work_item_id} field {field_path}")
    Fixed:   print(f"[SUCCESS] Updated work item {work_item_id} field {field_path}")

  Line 673: ❌
    Current: print(f"❌ Failed to update work item {work_item_id} field {field_path}: {e}")
    Fixed:   print(f"[ERROR] Failed to update work item {work_item_id} field {field_path}: {e}")


File: X:\Programs\agile-backlog-automation\agents\epic_strategist.py
====================================================================
  Line 101: 🔧
    Current: print(f"🔧 [EpicStrategist] Limited output from {len(epics)} to {len(limited_epics)} epics (configuration limit)")
    Fixed:   print(f"[TOOL] [EpicStrategist] Limited output from {len(epics)} to {len(limited_epics)} epics (configuration limit)")

  Line 127: 🔍
    Current: print(f"\n🔍 Starting quality assessment for {len(epics)} epics...")
    Fixed:   print(f"\n[SEARCH] Starting quality assessment for {len(epics)} epics...")


File: X:\Programs\agile-backlog-automation\agents\feature_decomposer_agent.py
=============================================================================
  Line 447: 🔍
    Current: print(f"🔍 Regex found {len(matches)} potential JSON arrays")
    Fixed:   print(f"[SEARCH] Regex found {len(matches)} potential JSON arrays")

  Line 449: 🔍
    Current: print(f"🔍 Array {i+1}: {len(match)} chars, starts with: {match[:100]}...")
    Fixed:   print(f"[SEARCH] Array {i+1}: {len(match)} chars, starts with: {match[:100]}...")

  Line 455: ❌
    Current: print(f"❌ Array {i+1} failed JSON validation: {e}")
    Fixed:   print(f"[ERROR] Array {i+1} failed JSON validation: {e}")

  Line 463: ❌
    Current: print(f"❌ Array {i+1} still invalid after cleaning")
    Fixed:   print(f"[ERROR] Array {i+1} still invalid after cleaning")

  Line 482: 🔍
    Current: print("🔍 Using fallback bracket matching...")
    Fixed:   print("[SEARCH] Using fallback bracket matching...")


File: X:\Programs\agile-backlog-automation\agents\qa_lead_agent.py
==================================================================
  Line 512: ✅
    Current: self.logger.info(f"✅ Corrected area path for test case {test_case_id}: '{current_area_path}' → '{correct_area_path}'")
    Fixed:   self.logger.info(f"[SUCCESS] Corrected area path for test case {test_case_id}: '{current_area_path}' → '{correct_area_path}'")

  Line 516: ❌
    Current: self.logger.error(f"❌ Failed to correct area path for test case {test_case_id}: {e}")
    Fixed:   self.logger.error(f"[ERROR] Failed to correct area path for test case {test_case_id}: {e}")

  Line 557: ❌
    Current: self.logger.error(f"❌ Failed to assign orphaned test case {test_case_id}: {e}")
    Fixed:   self.logger.error(f"[ERROR] Failed to assign orphaned test case {test_case_id}: {e}")


File: X:\Programs\agile-backlog-automation\agents\qa\test_suite_agent.py
========================================================================
  Line 338: ✅
    Current: self.logger.info(f"✅ Would assign test case {test_case_id} to suite '{suite_name}' for user story {parent_user_story_id}")
    Fixed:   self.logger.info(f"[SUCCESS] Would assign test case {test_case_id} to suite '{suite_name}' for user story {parent_user_story_id}")

  Line 343: ❌
    Current: self.logger.error(f"❌ Error assigning orphaned test case {test_case_id}: {e}")
    Fixed:   self.logger.error(f"[ERROR] Error assigning orphaned test case {test_case_id}: {e}")


File: X:\Programs\agile-backlog-automation\archive\debug_acceptance_criteria.py
===============================================================================
  Line 87: ✅
    Current: print(f"  ✅ Good: {len(criteria)} criteria")
    Fixed:   print(f"  [SUCCESS] Good: {len(criteria)} criteria")


File: X:\Programs\agile-backlog-automation\archive\domain_migration.py
======================================================================
  Line 26: 🔧
    Current: print("🔧 Creating domain management tables...")
    Fixed:   print("[TOOL] Creating domain management tables...")

  Line 30: 📦
    Current: print("📦 Migrating existing domain data...")
    Fixed:   print("[PACKAGE] Migrating existing domain data...")

  Line 38: ✅
    Current: print("✅ Domain migration completed successfully!")
    Fixed:   print("[SUCCESS] Domain migration completed successfully!")

  Line 42: ❌
    Current: print(f"❌ Migration failed: {e}")
    Fixed:   print(f"[ERROR] Migration failed: {e}")

  Line 167: ✅
    Current: print(f"✅ Migrated {len(extractor.industry_patterns)} domains with patterns, user types, and vocabulary")
    Fixed:   print(f"[SUCCESS] Migrated {len(extractor.industry_patterns)} domains with patterns, user types, and vocabulary")

  Line 322: ✅
    Current: print(f"✅ Migrated {len(existing_domains)} domains with patterns, user types, and vocabulary")
    Fixed:   print(f"[SUCCESS] Migrated {len(existing_domains)} domains with patterns, user types, and vocabulary")


File: X:\Programs\agile-backlog-automation\archive\restart_backend.py
=====================================================================
  Line 40: ✅
    Current: print(f"✅ Domains API working! Found {len(domains)} domains")
    Fixed:   print(f"[SUCCESS] Domains API working! Found {len(domains)} domains")

  Line 44: ❌
    Current: print(f"❌ API returned status {response.status_code}")
    Fixed:   print(f"[ERROR] API returned status {response.status_code}")

  Line 46: ❌
    Current: print(f"❌ Error testing API: {e}")
    Fixed:   print(f"[ERROR] Error testing API: {e}")


File: X:\Programs\agile-backlog-automation\archive\test_direct_llm.py
=====================================================================
  Line 102: ✅
    Current: ✅ Each epic directly supports the product vision above
    Fixed:   [SUCCESS] Each epic directly supports the product vision above

  Line 103: ✅
    Current: ✅ Epics address the specific target audience mentioned in the vision
    Fixed:   [SUCCESS] Epics address the specific target audience mentioned in the vision

  Line 104: ✅
    Current: ✅ Business objectives and KPIs from the vision are considered
    Fixed:   [SUCCESS] Business objectives and KPIs from the vision are considered

  Line 105: ✅
    Current: ✅ Domain-specific requirements are incorporated (not generic)
    Fixed:   [SUCCESS] Domain-specific requirements are incorporated (not generic)

  Line 106: ✅
    Current: ✅ Epics can be developed in parallel where possible
    Fixed:   [SUCCESS] Epics can be developed in parallel where possible

  Line 107: ✅
    Current: ✅ Business value is clearly articulated in vision context
    Fixed:   [SUCCESS] Business value is clearly articulated in vision context


File: X:\Programs\agile-backlog-automation\integrators\outbox_uploader.py
=========================================================================
  Line 107: ✅
    Current: self.logger.info(f"  ✅ Uploaded: {results['uploaded']}")
    Fixed:   self.logger.info(f"  [SUCCESS] Uploaded: {results['uploaded']}")

  Line 108: ❌
    Current: self.logger.info(f"  ❌ Failed: {results['failed']}")
    Fixed:   self.logger.info(f"  [ERROR] Failed: {results['failed']}")


File: X:\Programs\agile-backlog-automation\supervisor\main.py
=============================================================
  Line 168: ❌
    Current: print("\\n❌ Workflow interrupted by user")
    Fixed:   print("\\n[ERROR] Workflow interrupted by user")

  Line 172: ❌
    Current: print(f"❌ Workflow failed: {e}")
    Fixed:   print(f"[ERROR] Workflow failed: {e}")

  Line 207: ❌
    Current: print("❌ Product vision is required")
    Fixed:   print("[ERROR] Product vision is required")

  Line 234: ❌
    Current: print(f"❌ Failed to load input file: {e}")
    Fixed:   print(f"[ERROR] Failed to load input file: {e}")

  Line 265: ❌
    Current: print("❌ Invalid choice")
    Fixed:   print("[ERROR] Invalid choice")

  Line 268: 🔄
    Current: print(f"🔄 Resuming from stage: {resume_stage}")
    Fixed:   print(f"[RETRY] Resuming from stage: {resume_stage}")

  Line 273: ✅
    Current: print(f"\\n✅ Workflow completed successfully!")
    Fixed:   print(f"\\n[SUCCESS] Workflow completed successfully!")

  Line 278: ❌
    Current: print(f"❌ Failed to resume workflow: {e}")
    Fixed:   print(f"[ERROR] Failed to resume workflow: {e}")

  Line 298: ✅
    Current: print(f"\\n✅ Workflow completed successfully!")
    Fixed:   print(f"\\n[SUCCESS] Workflow completed successfully!")

  Line 308: ❌
    Current: print(f"\\n❌ Azure DevOps Integration Failed:")
    Fixed:   print(f"\\n[ERROR] Azure DevOps Integration Failed:")

  Line 317: 📊
    Current: print("\\n📊 Execution Summary:")
    Fixed:   print("\\n[STATS] Execution Summary:")


File: X:\Programs\agile-backlog-automation\supervisor\supervisor.py
===================================================================
  Line 420: ❌
    Current: self.logger.error(f"❌ [{stage_name}] Error ensuring model is loaded: {e}")
    Fixed:   self.logger.error(f"[ERROR] [{stage_name}] Error ensuring model is loaded: {e}")

  Line 826: ❌
    Current: self.logger.warning("❌ Azure integration stage skipped (integrate_azure=False)")
    Fixed:   self.logger.warning("[ERROR] Azure integration stage skipped (integrate_azure=False)")

  Line 1337: ✅
    Current: text = text.replace('✅', '[SUCCESS]')
    Fixed:   text = text.replace('[SUCCESS]', '[SUCCESS]')

  Line 1338: ❌
    Current: text = text.replace('❌', '[FAILED]')
    Fixed:   text = text.replace('[ERROR]', '[FAILED]')

  Line 1340: 📊
    Current: text = text.replace('📊', '[STATS]')
    Fixed:   text = text.replace('[STATS]', '[STATS]')

  Line 1341: 🔍
    Current: text = text.replace('🔍', '[SEARCH]')
    Fixed:   text = text.replace('[SEARCH]', '[SEARCH]')

  Line 1346: 🔧
    Current: text = text.replace('🔧', '[TOOL]')
    Fixed:   text = text.replace('[TOOL]', '[TOOL]')

  Line 1347: 📋
    Current: text = text.replace('📋', '[CHECKLIST]')
    Fixed:   text = text.replace('[CONFIG]', '[CHECKLIST]')

  Line 1353: 🔄
    Current: text = text.replace('🔄', '[REFRESH]')
    Fixed:   text = text.replace('[RETRY]', '[REFRESH]')

  Line 1358: ✅
    Current: text = text.replace('\u2705', '[SUCCESS]')    # ✅
    Fixed:   text = text.replace('\u2705', '[SUCCESS]')    # [SUCCESS]

  Line 1453: ❌
    Current: self.logger.warning("❌ Azure DevOps integration disabled (no Azure config provided)")
    Fixed:   self.logger.warning("[ERROR] Azure DevOps integration disabled (no Azure config provided)")

  Line 1464: ✅
    Current: self.logger.info(self._sanitize_unicode_for_logging("✅ Azure DevOps integrator is available"))
    Fixed:   self.logger.info(self._sanitize_unicode_for_logging("[SUCCESS] Azure DevOps integrator is available"))

  Line 2417: ✅
    Current: report_lines.append("✅ All features have test plans and all user stories have test cases")
    Fixed:   report_lines.append("[SUCCESS] All features have test plans and all user stories have test cases")


File: X:\Programs\agile-backlog-automation\tests\test_core_smoke.py
===================================================================
  Line 70: ✅
    Current: print("✅ SMOKE TEST PASSED: Product vision context flow working")
    Fixed:   print("[SUCCESS] SMOKE TEST PASSED: Product vision context flow working")

  Line 97: ✅
    Current: print("✅ SMOKE TEST PASSED: Agent prompt generation working")
    Fixed:   print("[SUCCESS] SMOKE TEST PASSED: Agent prompt generation working")

  Line 114: ✅
    Current: print("✅ SMOKE TEST PASSED: Template validation robust")
    Fixed:   print("[SUCCESS] SMOKE TEST PASSED: Template validation robust")

  Line 147: ✅
    Current: print("✅ SMOKE TEST PASSED: Workflow initialization working")
    Fixed:   print("[SUCCESS] SMOKE TEST PASSED: Workflow initialization working")


File: X:\Programs\agile-backlog-automation\tests\test_vision_integration.py
===========================================================================
  Line 89: ✅
    Current: print("✅ Step 1-4: Context flow validated")
    Fixed:   print("[SUCCESS] Step 1-4: Context flow validated")

  Line 106: ✅
    Current: print("✅ Step 5: Agent prompt generation validated")
    Fixed:   print("[SUCCESS] Step 5: Agent prompt generation validated")

  Line 130: ✅
    Current: print("✅ Step 6: Context preservation validated")
    Fixed:   print("[SUCCESS] Step 6: Context preservation validated")

  Line 158: ✅
    Current: print("✅ Template manager integration validated")
    Fixed:   print("[SUCCESS] Template manager integration validated")

  Line 210: ✅
    Current: print("✅ API server format compatibility validated")
    Fixed:   print("[SUCCESS] API server format compatibility validated")


File: X:\Programs\agile-backlog-automation\tools\analyze_and_suggest_test_case_organization.py
==============================================================================================
  Line 79: 🔧
    Current: log(f"🔧 Initialized Test Case Analyzer")
    Fixed:   log(f"[TOOL] Initialized Test Case Analyzer")

  Line 114: ❌
    Current: log(f"❌ Error querying {work_item_type}: {e}")
    Fixed:   log(f"[ERROR] Error querying {work_item_type}: {e}")

  Line 474: 📋
    Current: log(f"\n📋 Generating User Story suggestions for {len(suggested_test_cases)} test cases...")
    Fixed:   log(f"\n[CONFIG] Generating User Story suggestions for {len(suggested_test_cases)} test cases...")

  Line 497: ✅
    Current: log(f"\n✅ Successfully moved test cases:")
    Fixed:   log(f"\n[SUCCESS] Successfully moved test cases:")

  Line 503: ✅
    Current: log(f"\n✅ Analysis {'simulation' if dry_run else 'completed'} successfully!")
    Fixed:   log(f"\n[SUCCESS] Analysis {'simulation' if dry_run else 'completed'} successfully!")

  Line 506: ❌
    Current: log(f"❌ Error during analysis: {e}")
    Fixed:   log(f"[ERROR] Error during analysis: {e}")

  Line 536: ❌
    Current: log(f"❌ Fatal error: {e}")
    Fixed:   log(f"[ERROR] Fatal error: {e}")


File: X:\Programs\agile-backlog-automation\tools\analyze_sweep_report.py
========================================================================
  Line 15: 🔍
    Current: print("🔍 Backlog Sweeper Report Analysis")
    Fixed:   print("[SEARCH] Backlog Sweeper Report Analysis")

  Line 20: 📊
    Current: print(f"📊 Summary:")
    Fixed:   print(f"[STATS] Summary:")

  Line 43: 🚨
    Current: print("🚨 High Priority Issues by Type:")
    Fixed:   print("[ALERT] High Priority Issues by Type:")

  Line 48: 📋
    Current: print("📋 High Priority Issues by Work Item Type:")
    Fixed:   print("[CONFIG] High Priority Issues by Work Item Type:")

  Line 53: 🤖
    Current: print("🤖 High Priority Issues by Suggested Agent:")
    Fixed:   print("[AI] High Priority Issues by Suggested Agent:")

  Line 86: 🔧
    Current: print("   🔧 This suggests a hierarchy/linking problem rather than feature decomposition issues")
    Fixed:   print("   [TOOL] This suggests a hierarchy/linking problem rather than feature decomposition issues")

  Line 91: 🔧
    Current: print("   🔧 Consider if these should be assigned to QA Lead Agent instead")
    Fixed:   print("   [TOOL] Consider if these should be assigned to QA Lead Agent instead")

  Line 101: ❌
    Current: print(f"❌ Report file not found: {report_file}")
    Fixed:   print(f"[ERROR] Report file not found: {report_file}")

  Line 104: ❌
    Current: print(f"❌ Error analyzing report: {e}")
    Fixed:   print(f"[ERROR] Error analyzing report: {e}")


File: X:\Programs\agile-backlog-automation\tools\api_server.py
==============================================================
  Line 517: ❌
    Current: logger.error("❌ Test log message - ERROR level")
    Fixed:   logger.error("[ERROR] Test log message - ERROR level")


File: X:\Programs\agile-backlog-automation\tools\auto_cleanup_ado.py
====================================================================
  Line 52: ✅
    Current: print(f"✅ Found {len(work_items)} work items to delete")
    Fixed:   print(f"[SUCCESS] Found {len(work_items)} work items to delete")

  Line 71: 📋
    Current: print(f"\\n📋 Work items to delete:")
    Fixed:   print(f"\\n[CONFIG] Work items to delete:")

  Line 92: ✅
    Current: print(f"   ✅ Deleted work item #{work_item_id}")
    Fixed:   print(f"   [SUCCESS] Deleted work item #{work_item_id}")

  Line 95: ❌
    Current: print(f"   ❌ Failed to delete work item #{work_item_id}: {response.status_code} - {response.text}")
    Fixed:   print(f"   [ERROR] Failed to delete work item #{work_item_id}: {response.status_code} - {response.text}")

  Line 102: ❌
    Current: print(f"   ❌ Exception deleting work item #{work_item_id}: {e}")
    Fixed:   print(f"   [ERROR] Exception deleting work item #{work_item_id}: {e}")

  Line 110: ✅
    Current: print("\\n✅ All work items cleaned up successfully!")
    Fixed:   print("\\n[SUCCESS] All work items cleaned up successfully!")

  Line 115: ❌
    Current: print(f"❌ Failed to cleanup work items: {e}")
    Fixed:   print(f"[ERROR] Failed to cleanup work items: {e}")


File: X:\Programs\agile-backlog-automation\tools\bulk_delete_test_cases.py
==========================================================================
  Line 52: 🔧
    Current: print(f"🔧 Initialized Bulk Test Case Deleter (Backlog Automation Project)")
    Fixed:   print(f"[TOOL] Initialized Bulk Test Case Deleter (Backlog Automation Project)")

  Line 65: 🔍
    Current: print("🔍 Querying test cases via WIQL from DataVis area path within Backlog Automation project...")
    Fixed:   print("[SEARCH] Querying test cases via WIQL from DataVis area path within Backlog Automation project...")

  Line 80: 📋
    Current: print(f"📋 WIQL Query: {wiql_query}")
    Fixed:   print(f"[CONFIG] WIQL Query: {wiql_query}")

  Line 95: ✅
    Current: print(f"✅ Found {len(test_case_ids)} test cases")
    Fixed:   print(f"[SUCCESS] Found {len(test_case_ids)} test cases")

  Line 99: 📋
    Current: print(f"\n📋 ORIGINAL TEST CASE IDs FOUND:")
    Fixed:   print(f"\n[CONFIG] ORIGINAL TEST CASE IDs FOUND:")

  Line 108: ❌
    Current: print(f"❌ Error querying test cases: {e}")
    Fixed:   print(f"[ERROR] Error querying test cases: {e}")

  Line 131: ✅
    Current: print(f"  ✅ Successfully deleted test case {test_case_id} from Backlog Automation project")
    Fixed:   print(f"  [SUCCESS] Successfully deleted test case {test_case_id} from Backlog Automation project")

  Line 134: ❌
    Current: print(f"  ❌ Error deleting test case {test_case_id}: {response.status_code}")
    Fixed:   print(f"  [ERROR] Error deleting test case {test_case_id}: {response.status_code}")

  Line 139: ❌
    Current: print(f"  ❌ Error deleting test case {test_case_id}: {e}")
    Fixed:   print(f"  [ERROR] Error deleting test case {test_case_id}: {e}")

  Line 163: 📋
    Current: print(f"\n📋 Processing {i}/{len(test_case_ids)}: Test Case {test_case_id}")
    Fixed:   print(f"\n[CONFIG] Processing {i}/{len(test_case_ids)}: Test Case {test_case_id}")

  Line 176: ❌
    Current: print(f"  ❌ Exception: {e}")
    Fixed:   print(f"  [ERROR] Exception: {e}")

  Line 180: 📊
    Current: print("📊 BULK DELETION SUMMARY (Backlog Automation Project)")
    Fixed:   print("[STATS] BULK DELETION SUMMARY (Backlog Automation Project)")

  Line 187: ❌
    Current: print(f"\n❌ Errors encountered:")
    Fixed:   print(f"\n[ERROR] Errors encountered:")

  Line 211: ✅
    Current: print("✅ No test cases found to delete")
    Fixed:   print("[SUCCESS] No test cases found to delete")

  Line 215: 📋
    Current: print(f"📋 All test cases in DataVis area path will be deleted: {len(test_case_ids)}")
    Fixed:   print(f"[CONFIG] All test cases in DataVis area path will be deleted: {len(test_case_ids)}")

  Line 219: 🔍
    Current: print(f"\n🔍 TOP 5 WORK ITEM IDs FOR DELETION:")
    Fixed:   print(f"\n[SEARCH] TOP 5 WORK ITEM IDs FOR DELETION:")

  Line 234: ❌
    Current: print("❌ Deletion cancelled")
    Fixed:   print("[ERROR] Deletion cancelled")

  Line 255: ❌
    Current: print(f"❌ Error: {e}")
    Fixed:   print(f"[ERROR] Error: {e}")


File: X:\Programs\agile-backlog-automation\tools\bulk_delete_test_plans.py
==========================================================================
  Line 45: 🔧
    Current: print(f"🔧 Initialized Bulk Test Plan Deleter (Backlog Automation Project)")
    Fixed:   print(f"[TOOL] Initialized Bulk Test Plan Deleter (Backlog Automation Project)")

  Line 57: 🔍
    Current: print("🔍 Querying test plans via WIQL from Backlog Automation project...")
    Fixed:   print("[SEARCH] Querying test plans via WIQL from Backlog Automation project...")

  Line 64: 📋
    Current: print(f"📋 WIQL Query: {query}")
    Fixed:   print(f"[CONFIG] WIQL Query: {query}")

  Line 79: ✅
    Current: print(f"✅ Found {len(test_plan_ids)} test plans")
    Fixed:   print(f"[SUCCESS] Found {len(test_plan_ids)} test plans")

  Line 83: 📋
    Current: print(f"\n📋 ORIGINAL TEST PLAN IDs FOUND:")
    Fixed:   print(f"\n[CONFIG] ORIGINAL TEST PLAN IDs FOUND:")

  Line 92: ❌
    Current: print(f"❌ Error querying test plans: {e}")
    Fixed:   print(f"[ERROR] Error querying test plans: {e}")

  Line 115: ✅
    Current: print(f"  ✅ Successfully deleted test plan {test_plan_id} from Backlog Automation project")
    Fixed:   print(f"  [SUCCESS] Successfully deleted test plan {test_plan_id} from Backlog Automation project")

  Line 121: ❌
    Current: print(f"  ❌ Error deleting test plan {test_plan_id}: {response.status_code}")
    Fixed:   print(f"  [ERROR] Error deleting test plan {test_plan_id}: {response.status_code}")

  Line 126: ❌
    Current: print(f"  ❌ Error deleting test plan {test_plan_id}: {e}")
    Fixed:   print(f"  [ERROR] Error deleting test plan {test_plan_id}: {e}")

  Line 150: 📋
    Current: print(f"\n📋 Processing {i}/{len(test_plan_ids)}: Test Plan {test_plan_id}")
    Fixed:   print(f"\n[CONFIG] Processing {i}/{len(test_plan_ids)}: Test Plan {test_plan_id}")

  Line 162: ❌
    Current: print(f"  ❌ Exception: {e}")
    Fixed:   print(f"  [ERROR] Exception: {e}")

  Line 166: 📊
    Current: print("📊 BULK DELETION SUMMARY (Backlog Automation Project)")
    Fixed:   print("[STATS] BULK DELETION SUMMARY (Backlog Automation Project)")

  Line 173: ❌
    Current: print(f"\n❌ Errors encountered:")
    Fixed:   print(f"\n[ERROR] Errors encountered:")

  Line 197: ✅
    Current: print("✅ No test plans found to delete")
    Fixed:   print("[SUCCESS] No test plans found to delete")

  Line 201: 📋
    Current: print(f"📋 All test plans will be deleted: {len(test_plan_ids)}")
    Fixed:   print(f"[CONFIG] All test plans will be deleted: {len(test_plan_ids)}")

  Line 205: 🔍
    Current: print(f"\n🔍 TOP 5 WORK ITEM IDs FOR DELETION:")
    Fixed:   print(f"\n[SEARCH] TOP 5 WORK ITEM IDs FOR DELETION:")

  Line 216: ❌
    Current: print("❌ Deletion cancelled")
    Fixed:   print("[ERROR] Deletion cancelled")

  Line 237: ❌
    Current: print(f"❌ Error: {e}")
    Fixed:   print(f"[ERROR] Error: {e}")


File: X:\Programs\agile-backlog-automation\tools\check_ado_paths.py
===================================================================
  Line 15: 🔍
    Current: print("🔍 Checking Azure DevOps Area and Iteration Paths...")
    Fixed:   print("[SEARCH] Checking Azure DevOps Area and Iteration Paths...")

  Line 25: ❌
    Current: print("❌ Azure DevOps configuration incomplete")
    Fixed:   print("[ERROR] Azure DevOps configuration incomplete")

  Line 26: ✅❌
    Current: print(f"   Organization: {'✅' if org_url else '❌'}")
    Fixed:   print(f"   Organization: {'[SUCCESS]' if org_url else '[ERROR]'}")

  Line 27: ✅❌
    Current: print(f"   Project: {'✅' if project else '❌'}")
    Fixed:   print(f"   Project: {'[SUCCESS]' if project else '[ERROR]'}")

  Line 28: ✅❌
    Current: print(f"   PAT: {'✅' if pat else '❌'}")
    Fixed:   print(f"   PAT: {'[SUCCESS]' if pat else '[ERROR]'}")

  Line 40: ❌
    Current: print("❌ Integration not enabled")
    Fixed:   print("[ERROR] Integration not enabled")

  Line 64: ❌
    Current: print(f"❌ Failed to get area paths: {e}")
    Fixed:   print(f"[ERROR] Failed to get area paths: {e}")

  Line 87: ❌
    Current: print(f"❌ Failed to get iteration paths: {e}")
    Fixed:   print(f"[ERROR] Failed to get iteration paths: {e}")

  Line 119: ✅
    Current: print(f"✅ Epic created successfully without custom paths!")
    Fixed:   print(f"[SUCCESS] Epic created successfully without custom paths!")

  Line 124: ❌
    Current: print(f"❌ Epic creation failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Epic creation failed: {response.status_code}")

  Line 128: ❌
    Current: print(f"❌ Epic creation error: {e}")
    Fixed:   print(f"[ERROR] Epic creation error: {e}")


File: X:\Programs\agile-backlog-automation\tools\check_azure_config.py
======================================================================
  Line 15: 🔍
    Current: print("🔍 Checking Azure DevOps Configuration")
    Fixed:   print("[SEARCH] Checking Azure DevOps Configuration")

  Line 24: ✅❌
    Current: print(f"  AZURE_DEVOPS_PAT: {'✅ Set' if pat else '❌ Not set'}")
    Fixed:   print(f"  AZURE_DEVOPS_PAT: {'[SUCCESS] Set' if pat else '[ERROR] Not set'}")

  Line 25: ✅❌
    Current: print(f"  AZURE_DEVOPS_ORG: {'✅ Set' if org else '❌ Not set'}")
    Fixed:   print(f"  AZURE_DEVOPS_ORG: {'[SUCCESS] Set' if org else '[ERROR] Not set'}")

  Line 26: ✅❌
    Current: print(f"  AZURE_DEVOPS_PROJECT: {'✅ Set' if project else '❌ Not set'}")
    Fixed:   print(f"  AZURE_DEVOPS_PROJECT: {'[SUCCESS] Set' if project else '[ERROR] Not set'}")

  Line 33: ✅❌
    Current: print(f"  Organization URL: {'✅ Set' if azure_config.get('organization_url') else '❌ Not set'}")
    Fixed:   print(f"  Organization URL: {'[SUCCESS] Set' if azure_config.get('organization_url') else '[ERROR] Not set'}")

  Line 34: ✅❌
    Current: print(f"  Project: {'✅ Set' if azure_config.get('project') else '❌ Not set'}")
    Fixed:   print(f"  Project: {'[SUCCESS] Set' if azure_config.get('project') else '[ERROR] Not set'}")

  Line 35: ✅❌
    Current: print(f"  Area Path: {'✅ Set' if azure_config.get('area_path') else '❌ Not set'}")
    Fixed:   print(f"  Area Path: {'[SUCCESS] Set' if azure_config.get('area_path') else '[ERROR] Not set'}")

  Line 36: ✅❌
    Current: print(f"  Iteration Path: {'✅ Set' if azure_config.get('iteration_path') else '❌ Not set'}")
    Fixed:   print(f"  Iteration Path: {'[SUCCESS] Set' if azure_config.get('iteration_path') else '[ERROR] Not set'}")

  Line 38: ❌
    Current: print(f"  ❌ Error reading config: {e}")
    Fixed:   print(f"  [ERROR] Error reading config: {e}")

  Line 47: ✅
    Current: print("✅ Environment variables are configured")
    Fixed:   print("[SUCCESS] Environment variables are configured")

  Line 50: ❌
    Current: print("❌ Environment variables are missing")
    Fixed:   print("[ERROR] Environment variables are missing")


File: X:\Programs\agile-backlog-automation\tools\check_azure_integration.py
===========================================================================
  Line 12: 🔍
    Current: print("🔍 Checking Azure DevOps Integration Status")
    Fixed:   print("[SEARCH] Checking Azure DevOps Integration Status")

  Line 24: ❌
    Current: print("❌ No jobs found in database")
    Fixed:   print("[ERROR] No jobs found in database")

  Line 28: 📋
    Current: print(f"📋 Latest Job: {job_id}")
    Fixed:   print(f"[CONFIG] Latest Job: {job_id}")

  Line 35: 📊
    Current: print(f"\n📊 Job Summary:")
    Fixed:   print(f"\n[STATS] Job Summary:")

  Line 54: ❌
    Current: print(f"\n❌ No Azure DevOps integration data found")
    Fixed:   print(f"\n[ERROR] No Azure DevOps integration data found")

  Line 57: ❌
    Current: print(f"❌ Could not parse job summary JSON")
    Fixed:   print(f"[ERROR] Could not parse job summary JSON")

  Line 59: ❌
    Current: print(f"❌ No raw summary data found")
    Fixed:   print(f"[ERROR] No raw summary data found")

  Line 64: ❌
    Current: print(f"❌ Error checking database: {e}")
    Fixed:   print(f"[ERROR] Error checking database: {e}")


File: X:\Programs\agile-backlog-automation\tools\check_config.py
================================================================
  Line 11: 🔍
    Current: print("🔍 Checking Configuration")
    Fixed:   print("[SEARCH] Checking Configuration")

  Line 24: 📋
    Current: print(f"📋 Epic Limits:")
    Fixed:   print(f"[CONFIG] Epic Limits:")

  Line 34: ✅
    Current: print(f"✅ This appears to be a production configuration (unlimited epics)")
    Fixed:   print(f"[SUCCESS] This appears to be a production configuration (unlimited epics)")

  Line 37: 🔧
    Current: print(f"\n🔧 Other Settings:")
    Fixed:   print(f"\n[TOOL] Other Settings:")

  Line 42: ❌
    Current: print(f"❌ Error loading config: {e}")
    Fixed:   print(f"[ERROR] Error loading config: {e}")


File: X:\Programs\agile-backlog-automation\tools\check_datavis_test_cases.py
============================================================================
  Line 33: 🔍
    Current: print("🔍 Checking for test cases in DataVis area path within Backlog Automation project...")
    Fixed:   print("[SEARCH] Checking for test cases in DataVis area path within Backlog Automation project...")

  Line 43: 📋
    Current: print(f"📋 WIQL Query: {query}")
    Fixed:   print(f"[CONFIG] WIQL Query: {query}")

  Line 52: ✅
    Current: print(f"✅ Found {len(work_items)} test cases in DataVis area path")
    Fixed:   print(f"[SUCCESS] Found {len(work_items)} test cases in DataVis area path")

  Line 56: 📋
    Current: print("📋 TEST CASES IN DATAVIS AREA PATH:")
    Fixed:   print("[CONFIG] TEST CASES IN DATAVIS AREA PATH:")

  Line 95: 📊
    Current: print(f"\n📊 SUMMARY BY STATE:")
    Fixed:   print(f"\n[STATS] SUMMARY BY STATE:")

  Line 102: ✅
    Current: print("✅ No test cases found in DataVis area path")
    Fixed:   print("[SUCCESS] No test cases found in DataVis area path")

  Line 106: ❌
    Current: print(f"❌ Error: {e}")
    Fixed:   print(f"[ERROR] Error: {e}")


File: X:\Programs\agile-backlog-automation\tools\check_routes.py
================================================================
  Line 13: 🔍
    Current: print("🔍 Checking API Server Routes")
    Fixed:   print("[SEARCH] Checking API Server Routes")

  Line 21: ✅
    Current: print("\n✅ Route check complete")
    Fixed:   print("\n[SUCCESS] Route check complete")

  Line 24: ❌
    Current: print(f"❌ Error checking routes: {e}")
    Fixed:   print(f"[ERROR] Error checking routes: {e}")


File: X:\Programs\agile-backlog-automation\tools\check_section_headers.py
=========================================================================
  Line 68: ❌
    Current: print(f"❌ Error querying work items: {e}")
    Fixed:   print(f"[ERROR] Error querying work items: {e}")

  Line 79: 🔄
    Current: print("🔄 Fetching work item details...")
    Fixed:   print("[RETRY] Fetching work item details...")

  Line 102: ❌
    Current: print(f"❌ Error fetching work items batch {batch_number}: {e}")
    Fixed:   print(f"[ERROR] Error fetching work items batch {batch_number}: {e}")

  Line 105: 📊
    Current: print(f"📊 Total work items fetched: {len(all_work_items)}")
    Fixed:   print(f"[STATS] Total work items fetched: {len(all_work_items)}")

  Line 167: 🔍
    Current: print("🔍 ALL SECTION HEADERS FOUND IN WORK ITEMS:")
    Fixed:   print("[SEARCH] ALL SECTION HEADERS FOUND IN WORK ITEMS:")

  Line 180: ❌
    Current: print(f"❌ Error during section header check: {e}")
    Fixed:   print(f"[ERROR] Error during section header check: {e}")


File: X:\Programs\agile-backlog-automation\tools\check_task_count.py
====================================================================
  Line 13: 🔍
    Current: print("🔍 Checking database...")
    Fixed:   print("[SEARCH] Checking database...")

  Line 16: ❌
    Current: print("   ❌ Database file not found")
    Fixed:   print("   [ERROR] Database file not found")

  Line 26: 📋
    Current: print(f"   📋 Available tables: {[table[0] for table in tables]}")
    Fixed:   print(f"   [CONFIG] Available tables: {[table[0] for table in tables]}")

  Line 35: 📊
    Current: print(f"   📊 Table '{table_name}' has {len(rows)} recent entries")
    Fixed:   print(f"   [STATS] Table '{table_name}' has {len(rows)} recent entries")

  Line 44: ❌
    Current: print(f"   ❌ Database error: {e}")
    Fixed:   print(f"   [ERROR] Database error: {e}")

  Line 48: 📋
    Current: print("\n📋 Checking recent logs...")
    Fixed:   print("\n[CONFIG] Checking recent logs...")

  Line 79: 📊
    Current: print(f"      📊 Found stats: {line.strip()}")
    Fixed:   print(f"      [STATS] Found stats: {line.strip()}")

  Line 82: ❌
    Current: print(f"   ❌ Error reading {log_file}: {e}")
    Fixed:   print(f"   [ERROR] Error reading {log_file}: {e}")

  Line 110: ❌
    Current: print(f"      ❌ Error reading file: {e}")
    Fixed:   print(f"      [ERROR] Error reading file: {e}")

  Line 114: 🔍
    Current: print("🔍 Checking Task Count from Recent Process")
    Fixed:   print("[SEARCH] Checking Task Count from Recent Process")


File: X:\Programs\agile-backlog-automation\tools\check_workflow_data.py
=======================================================================
  Line 17: 🔍
    Current: print("🔍 Checking Current Workflow Data")
    Fixed:   print("[SEARCH] Checking Current Workflow Data")

  Line 46: ❌
    Current: print(f"   ❌ Error loading file: {e}")
    Fixed:   print(f"   [ERROR] Error loading file: {e}")

  Line 48: ❌
    Current: print("   ❌ No output files found")
    Fixed:   print("   [ERROR] No output files found")

  Line 50: ❌
    Current: print("   ❌ Output directory not found")
    Fixed:   print("   [ERROR] Output directory not found")

  Line 59: 📊
    Current: print(f"\n📊 Workflow Data Analysis: {filename}")
    Fixed:   print(f"\n[STATS] Workflow Data Analysis: {filename}")

  Line 64: ❌
    Current: print("   ❌ Invalid workflow data format")
    Fixed:   print("   [ERROR] Invalid workflow data format")

  Line 71: ✅
    Current: print(f"   ✅ {section}: Found")
    Fixed:   print(f"   [SUCCESS] {section}: Found")

  Line 73: ❌
    Current: print(f"   ❌ {section}: Missing")
    Fixed:   print(f"   [ERROR] {section}: Missing")

  Line 147: 📋
    Current: print(f"\n📋 Sample Tasks (showing first 5):")
    Fixed:   print(f"\n[CONFIG] Sample Tasks (showing first 5):")

  Line 174: 🔍
    Current: print(f"\n🔍 Checking Current Job Status")
    Fixed:   print(f"\n[SEARCH] Checking Current Job Status")

  Line 207: ❌
    Current: print(f"   ❌ Error reading logs: {e}")
    Fixed:   print(f"   [ERROR] Error reading logs: {e}")

  Line 209: ❌
    Current: print("   ❌ Log file not found")
    Fixed:   print("   [ERROR] Log file not found")


File: X:\Programs\agile-backlog-automation\tools\comprehensive_model_comparison.py
==================================================================================
  Line 50: ❌
    Current: print(f"❌ {model_name} failed: {e}")
    Fixed:   print(f"[ERROR] {model_name} failed: {e}")

  Line 55: 📋
    Current: print(f"📋 Testing {model_name} backlog quality...")
    Fixed:   print(f"[CONFIG] Testing {model_name} backlog quality...")

  Line 88: ❌
    Current: print(f"❌ {model_name} backlog test failed: {e}")
    Fixed:   print(f"[ERROR] {model_name} backlog test failed: {e}")

  Line 93: 📊
    Current: print("\n📊 Performance Comparison Results:")
    Fixed:   print("\n[STATS] Performance Comparison Results:")

  Line 100: 📊
    Current: print(f"   📊 Tokens: {result['tokens']}")
    Fixed:   print(f"   [STATS] Tokens: {result['tokens']}")

  Line 102: 💰
    Current: print(f"   💰 Cost: ${result['cost']:.4f}")
    Fixed:   print(f"   [COST] Cost: ${result['cost']:.4f}")

  Line 122: 📋
    Current: print("\n📋 Quality Comparison Results:")
    Fixed:   print("\n[CONFIG] Quality Comparison Results:")

  Line 129: 📊
    Current: print(f"   📊 Epics generated: {result['epic_count']}")
    Fixed:   print(f"   [STATS] Epics generated: {result['epic_count']}")

  Line 132: 📋
    Current: print(f"   📋 Epic {i}: {epic.get('title', 'Unknown')}")
    Fixed:   print(f"   [CONFIG] Epic {i}: {epic.get('title', 'Unknown')}")

  Line 167: 📋
    Current: print("\n📋 Testing Quality...")
    Fixed:   print("\n[CONFIG] Testing Quality...")

  Line 209: ✅
    Current: print("✅ Comprehensive comparison completed!")
    Fixed:   print("[SUCCESS] Comprehensive comparison completed!")


File: X:\Programs\agile-backlog-automation\tools\create_github_issues.py
========================================================================
  Line 29: ✅
    Current: print("✅ Environment variables loaded")
    Fixed:   print("[SUCCESS] Environment variables loaded")

  Line 54: ✅
    Current: print(f"✅ Token validated successfully for user: {user_data.get('login', 'Unknown')}")
    Fixed:   print(f"[SUCCESS] Token validated successfully for user: {user_data.get('login', 'Unknown')}")

  Line 57: ❌
    Current: print("❌ Token is invalid or expired")
    Fixed:   print("[ERROR] Token is invalid or expired")

  Line 60: ❌
    Current: print(f"❌ Token validation failed: {response.status_code} - {response.text}")
    Fixed:   print(f"[ERROR] Token validation failed: {response.status_code} - {response.text}")

  Line 63: ❌
    Current: print(f"❌ Error validating token: {e}")
    Fixed:   print(f"[ERROR] Error validating token: {e}")

  Line 75: ✅
    Current: print(f"✅ Repository access confirmed: {repo_data.get('full_name', 'Unknown')}")
    Fixed:   print(f"[SUCCESS] Repository access confirmed: {repo_data.get('full_name', 'Unknown')}")

  Line 78: ❌
    Current: print(f"❌ Repository not found: {self.owner}/{self.repo}")
    Fixed:   print(f"[ERROR] Repository not found: {self.owner}/{self.repo}")

  Line 81: ❌
    Current: print(f"❌ No access to repository: {self.owner}/{self.repo}")
    Fixed:   print(f"[ERROR] No access to repository: {self.owner}/{self.repo}")

  Line 84: ❌
    Current: print(f"❌ Repository access test failed: {response.status_code} - {response.text}")
    Fixed:   print(f"[ERROR] Repository access test failed: {response.status_code} - {response.text}")

  Line 87: ❌
    Current: print(f"❌ Error testing repository access: {e}")
    Fixed:   print(f"[ERROR] Error testing repository access: {e}")

  Line 107: ✅
    Current: print(f"✅ Created issue #{issue['number']}: {title}")
    Fixed:   print(f"[SUCCESS] Created issue #{issue['number']}: {title}")

  Line 110: ❌
    Current: print(f"❌ Failed to create issue '{title}': {response.status_code} - {response.text}")
    Fixed:   print(f"[ERROR] Failed to create issue '{title}': {response.status_code} - {response.text}")

  Line 116: 🔍
    Current: print("🔍 Validating GitHub token and repository access...")
    Fixed:   print("[SEARCH] Validating GitHub token and repository access...")

  Line 118: ❌
    Current: print("❌ Token validation failed. Please check your token.")
    Fixed:   print("[ERROR] Token validation failed. Please check your token.")

  Line 122: ❌
    Current: print("❌ Repository access failed. Please check repository name and permissions.")
    Fixed:   print("[ERROR] Repository access failed. Please check repository name and permissions.")

  Line 147: ✅
    Current: print(f"✅ Successfully created {len(created_issues)} issues")
    Fixed:   print(f"[SUCCESS] Successfully created {len(created_issues)} issues")

  Line 155: 🚨
    Current: "body": """## 🚨 CRITICAL: Navigation Failure After Backlog Generation
    Fixed:   "body": """## [ALERT] CRITICAL: Navigation Failure After Backlog Generation

  Line 205: 🚨
    Current: "body": """## 🚨 CRITICAL: My Projects Screen Missing Progress and Logs
    Fixed:   "body": """## [ALERT] CRITICAL: My Projects Screen Missing Progress and Logs

  Line 257: 🚨
    Current: "body": """## 🚨 Critical Issue: Navigation Route Inconsistency
    Fixed:   "body": """## [ALERT] Critical Issue: Navigation Route Inconsistency

  Line 450: ✅❌
    Current: Unicode characters like ✅, ❌, ⚠️ are replaced with text equivalents like [SUCCESS], [FAILED], [WARNING].
    Fixed:   Unicode characters like [SUCCESS], [ERROR], ⚠️ are replaced with text equivalents like [SUCCESS], [FAILED], [WARNING].

  Line 663: 🚨
    Current: "body": """## 🚨 Critical Issue: Exposed API Endpoints
    Fixed:   "body": """## [ALERT] Critical Issue: Exposed API Endpoints

  Line 727: 🚨
    Current: "body": """## 🚨 Critical Issue: No Automated Tests
    Fixed:   "body": """## [ALERT] Critical Issue: No Automated Tests

  Line 866: ❌
    Current: print("❌ Error: GITHUB_TOKEN environment variable not set")
    Fixed:   print("[ERROR] Error: GITHUB_TOKEN environment variable not set")

  Line 881: ❌
    Current: print("❌ Error: Invalid token format")
    Fixed:   print("[ERROR] Error: Invalid token format")

  Line 894: ❌
    Current: print("❌ Error: GitHub username/organization is required")
    Fixed:   print("[ERROR] Error: GitHub username/organization is required")

  Line 899: ❌
    Current: print("❌ Error: Repository name is required")
    Fixed:   print("[ERROR] Error: Repository name is required")

  Line 903: 📋
    Current: print(f"\n📋 About to create 18 issues in {owner}/{repo}")
    Fixed:   print(f"\n[CONFIG] About to create 18 issues in {owner}/{repo}")

  Line 908: ❌
    Current: print("❌ Cancelled")
    Fixed:   print("[ERROR] Cancelled")

  Line 924: ❌
    Current: print("❌ No issues were created. Please check your token and repository access.")
    Fixed:   print("[ERROR] No issues were created. Please check your token and repository access.")


File: X:\Programs\agile-backlog-automation\tools\debug_ollama_path.py
=====================================================================
  Line 12: 🔍
    Current: print("🔍 Debugging Ollama Path")
    Fixed:   print("[SEARCH] Debugging Ollama Path")

  Line 31: ✅❌
    Current: print(f"   {expanded_path}: {'✅' if exists else '❌'}")
    Fixed:   print(f"   {expanded_path}: {'[SUCCESS]' if exists else '[ERROR]'}")

  Line 81: ✅
    Current: print("   ✅ Ollama service appears to be running on port 11434")
    Fixed:   print("   [SUCCESS] Ollama service appears to be running on port 11434")

  Line 83: ❌
    Current: print("   ❌ Ollama service not found on port 11434")
    Fixed:   print("   [ERROR] Ollama service not found on port 11434")


File: X:\Programs\agile-backlog-automation\tools\debug_parallel_processing.py
=============================================================================
  Line 19: 🔍
    Current: print("🔍 Debugging Parallel Processing Configuration")
    Fixed:   print("[SEARCH] Debugging Parallel Processing Configuration")

  Line 30: 📋
    Current: print("📋 Parallel Processing Configuration:")
    Fixed:   print("[CONFIG] Parallel Processing Configuration:")

  Line 53: 🔍
    Current: print("\n🔍 Task Generation Parallel Processing Conditions")
    Fixed:   print("\n[SEARCH] Task Generation Parallel Processing Conditions")

  Line 82: 📊
    Current: print(f"\n📊 Scenario: {scenario['name']}")
    Fixed:   print(f"\n[STATS] Scenario: {scenario['name']}")

  Line 104: ✅
    Current: print(f"   ✅ Parallel processing would be used")
    Fixed:   print(f"   [SUCCESS] Parallel processing would be used")

  Line 106: ❌
    Current: print(f"   ❌ Sequential processing would be used")
    Fixed:   print(f"   [ERROR] Sequential processing would be used")

  Line 121: 📋
    Current: print("\n📋 Log Analysis for Task Generation")
    Fixed:   print("\n[CONFIG] Log Analysis for Task Generation")

  Line 171: 🔧
    Current: print("\n🔧 Suggested Fixes for Parallel Processing")
    Fixed:   print("\n[TOOL] Suggested Fixes for Parallel Processing")

  Line 213: ✅
    Current: print("\n✅ Debug analysis complete!")
    Fixed:   print("\n[SUCCESS] Debug analysis complete!")

  Line 216: ❌
    Current: print(f"\n❌ Error during debug: {e}")
    Fixed:   print(f"\n[ERROR] Error during debug: {e}")


File: X:\Programs\agile-backlog-automation\tools\debug_test_suite_structure.py
==============================================================================
  Line 37: 🔍
    Current: print(f"🔍 Debugging test suite {test_suite_id}")
    Fixed:   print(f"[SEARCH] Debugging test suite {test_suite_id}")

  Line 47: 📋
    Current: print("📋 Test Suite Work Item Structure:")
    Fixed:   print("[CONFIG] Test Suite Work Item Structure:")

  Line 79: 📋
    Current: print(f"  📋 Extracted Plan ID: {plan_id}")
    Fixed:   print(f"  [CONFIG] Extracted Plan ID: {plan_id}")

  Line 82: 📋
    Current: print(f"\n📋 All Fields:")
    Fixed:   print(f"\n[CONFIG] All Fields:")

  Line 90: ❌
    Current: print(f"❌ Error getting test suite details: {response.status_code}")
    Fixed:   print(f"[ERROR] Error getting test suite details: {response.status_code}")

  Line 94: ❌
    Current: print(f"❌ Error: {e}")
    Fixed:   print(f"[ERROR] Error: {e}")


File: X:\Programs\agile-backlog-automation\tools\detect_unicode_issues.py
=========================================================================
  Line 27: ❌
    Current: '❌': '[ERROR]',
    Fixed:   '[ERROR]': '[ERROR]',

  Line 28: ✅
    Current: '✅': '[SUCCESS]',
    Fixed:   '[SUCCESS]': '[SUCCESS]',

  Line 30: 🔍
    Current: '🔍': '[SEARCH]',
    Fixed:   '[SEARCH]': '[SEARCH]',

  Line 31: 🤖
    Current: '🤖': '[AI]',
    Fixed:   '[AI]': '[AI]',

  Line 32: 📋
    Current: '📋': '[CONFIG]',
    Fixed:   '[CONFIG]': '[CONFIG]',

  Line 33: 📦
    Current: '📦': '[PACKAGE]',
    Fixed:   '[PACKAGE]': '[PACKAGE]',

  Line 34: 💰
    Current: '💰': '[COST]',
    Fixed:   '[COST]': '[COST]',

  Line 35: 📤
    Current: '📤': '[REQUEST]',
    Fixed:   '[REQUEST]': '[REQUEST]',

  Line 36: 📊
    Current: '📊': '[STATS]',
    Fixed:   '[STATS]': '[STATS]',

  Line 37: 🔄
    Current: '🔄': '[RETRY]',
    Fixed:   '[RETRY]': '[RETRY]',

  Line 38: 📥
    Current: '📥': '[DOWNLOAD]',
    Fixed:   '[DOWNLOAD]': '[DOWNLOAD]',

  Line 40: 🚨
    Current: '🚨': '[ALERT]',
    Fixed:   '[ALERT]': '[ALERT]',

  Line 41: 💨
    Current: '💨': '[FAST]',
    Fixed:   '[FAST]': '[FAST]',

  Line 42: 🔧
    Current: '🔧': '[TOOL]',
    Fixed:   '[TOOL]': '[TOOL]',


File: X:\Programs\agile-backlog-automation\tools\find_test_plans.py
===================================================================
  Line 40: 🔍
    Current: print("🔍 Finding test plans...")
    Fixed:   print("[SEARCH] Finding test plans...")

  Line 52: ✅
    Current: print(f"✅ Found {len(test_plan_ids)} test plans")
    Fixed:   print(f"[SUCCESS] Found {len(test_plan_ids)} test plans")

  Line 56: 📋
    Current: print(f"\n📋 Test Plan {plan_id}:")
    Fixed:   print(f"\n[CONFIG] Test Plan {plan_id}:")

  Line 82: ❌
    Current: print(f"  ❌ Error getting suites: {suites_response.status_code}")
    Fixed:   print(f"  [ERROR] Error getting suites: {suites_response.status_code}")

  Line 85: ❌
    Current: print(f"  ❌ Error getting plan details: {plan_response.status_code}")
    Fixed:   print(f"  [ERROR] Error getting plan details: {plan_response.status_code}")

  Line 90: ❌
    Current: print(f"❌ Error: {e}")
    Fixed:   print(f"[ERROR] Error: {e}")


File: X:\Programs\agile-backlog-automation\tools\fix_duplicate_code.py
======================================================================
  Line 38: ✅
    Current: print(f"✅ Removed {end_line - start_line} lines of duplicate code")
    Fixed:   print(f"[SUCCESS] Removed {end_line - start_line} lines of duplicate code")

  Line 48: ✅
    Current: print("✅ Duplicate code removal completed successfully")
    Fixed:   print("[SUCCESS] Duplicate code removal completed successfully")

  Line 50: ❌
    Current: print("❌ Failed to remove duplicate code")
    Fixed:   print("[ERROR] Failed to remove duplicate code")

  Line 52: ❌
    Current: print(f"❌ Error: {e}")
    Fixed:   print(f"[ERROR] Error: {e}")


File: X:\Programs\agile-backlog-automation\tools\fix_job_tracking.py
====================================================================
  Line 18: 🔧
    Current: print(f"🔧 Fixing job tracking for: {job_id}")
    Fixed:   print(f"[TOOL] Fixing job tracking for: {job_id}")

  Line 42: ✅
    Current: print(f"✅ Successfully added job {job_id} to active jobs")
    Fixed:   print(f"[SUCCESS] Successfully added job {job_id} to active jobs")

  Line 45: ❌
    Current: print(f"❌ Failed to add job: {response.status_code} - {response.text}")
    Fixed:   print(f"[ERROR] Failed to add job: {response.status_code} - {response.text}")

  Line 49: ❌
    Current: print("❌ Cannot connect to API server. Make sure it's running on port 8000")
    Fixed:   print("[ERROR] Cannot connect to API server. Make sure it's running on port 8000")

  Line 52: ❌
    Current: print(f"❌ Error adding job: {e}")
    Fixed:   print(f"[ERROR] Error adding job: {e}")

  Line 62: ✅
    Current: print(f"✅ Job {job_id} is now tracked:")
    Fixed:   print(f"[SUCCESS] Job {job_id} is now tracked:")

  Line 68: ❌
    Current: print(f"❌ Job {job_id} still not found: {response.status_code}")
    Fixed:   print(f"[ERROR] Job {job_id} still not found: {response.status_code}")

  Line 72: ❌
    Current: print(f"❌ Error checking job status: {e}")
    Fixed:   print(f"[ERROR] Error checking job status: {e}")

  Line 79: 🔧
    Current: print("🔧 Job Tracking Fix Tool")
    Fixed:   print("[TOOL] Job Tracking Fix Tool")

  Line 83: 🔍
    Current: print("🔍 Checking current job status...")
    Fixed:   print("[SEARCH] Checking current job status...")

  Line 85: ✅
    Current: print("✅ Job is already tracked - no fix needed")
    Fixed:   print("[SUCCESS] Job is already tracked - no fix needed")

  Line 89: 🔧
    Current: print("\n🔧 Attempting to fix job tracking...")
    Fixed:   print("\n[TOOL] Attempting to fix job tracking...")

  Line 91: 🔍
    Current: print("\n🔍 Verifying fix...")
    Fixed:   print("\n[SEARCH] Verifying fix...")

  Line 99: ❌
    Current: print("\n❌ Fix applied but job still not tracked")
    Fixed:   print("\n[ERROR] Fix applied but job still not tracked")

  Line 102: ❌
    Current: print("\n❌ Failed to apply fix")
    Fixed:   print("\n[ERROR] Failed to apply fix")


File: X:\Programs\agile-backlog-automation\tools\fix_work_item_descriptions.py
==============================================================================
  Line 98: 📋
    Current: print("📋 Fetching work item details...")
    Fixed:   print("[CONFIG] Fetching work item details...")

  Line 116: 📥
    Current: print(f"📥 Fetched {len(batch_items)} items (batch {i//batch_size + 1})")
    Fixed:   print(f"[DOWNLOAD] Fetched {len(batch_items)} items (batch {i//batch_size + 1})")

  Line 119: ❌
    Current: print(f"❌ Failed to fetch batch starting at {i}: {e}")
    Fixed:   print(f"[ERROR] Failed to fetch batch starting at {i}: {e}")

  Line 121: 📊
    Current: print(f"📊 Total work items fetched: {len(work_items)}")
    Fixed:   print(f"[STATS] Total work items fetched: {len(work_items)}")

  Line 221: ❌
    Current: print(f"❌ Failed to update work item {work_item_id}: {e}")
    Fixed:   print(f"[ERROR] Failed to update work item {work_item_id}: {e}")

  Line 257: 🔍
    Current: print(f"\n🔍 Found issue in {work_item_type} #{work_item_id}: {title[:50]}...")
    Fixed:   print(f"\n[SEARCH] Found issue in {work_item_type} #{work_item_id}: {title[:50]}...")

  Line 266: ✅
    Current: print(f"   ✅ Fixed:    {fixed_preview}...")
    Fixed:   print(f"   [SUCCESS] Fixed:    {fixed_preview}...")

  Line 269: 🔍
    Current: print(f"   🔍 DRY RUN: Would update work item {work_item_id}")
    Fixed:   print(f"   [SEARCH] DRY RUN: Would update work item {work_item_id}")

  Line 272: 🔄
    Current: print(f"   🔄 Updating work item {work_item_id}...")
    Fixed:   print(f"   [RETRY] Updating work item {work_item_id}...")

  Line 274: ✅
    Current: print(f"   ✅ Successfully updated work item {work_item_id}")
    Fixed:   print(f"   [SUCCESS] Successfully updated work item {work_item_id}")

  Line 277: ❌
    Current: print(f"   ❌ Failed to update work item {work_item_id}")
    Fixed:   print(f"   [ERROR] Failed to update work item {work_item_id}")

  Line 282: 📊
    Current: print("📊 SUMMARY:")
    Fixed:   print("[STATS] SUMMARY:")

  Line 314: ❌
    Current: print("❌ Operation cancelled")
    Fixed:   print("[ERROR] Operation cancelled")

  Line 320: ❌
    Current: print(f"❌ Configuration error: {e}")
    Fixed:   print(f"[ERROR] Configuration error: {e}")

  Line 323: ❌
    Current: print("\n❌ Operation cancelled by user")
    Fixed:   print("\n[ERROR] Operation cancelled by user")

  Line 326: ❌
    Current: print(f"❌ Unexpected error: {e}")
    Fixed:   print(f"[ERROR] Unexpected error: {e}")


File: X:\Programs\agile-backlog-automation\tools\list_test_plans.py
===================================================================
  Line 33: 🔍
    Current: print("🔍 Listing all test plans in Backlog Automation project...")
    Fixed:   print("[SEARCH] Listing all test plans in Backlog Automation project...")

  Line 43: 📋
    Current: print(f"📋 WIQL Query: {query}")
    Fixed:   print(f"[CONFIG] WIQL Query: {query}")

  Line 53: ✅
    Current: print(f"✅ Found {len(test_plan_ids)} test plans")
    Fixed:   print(f"[SUCCESS] Found {len(test_plan_ids)} test plans")

  Line 57: 📋
    Current: print("📋 TEST PLANS IN BACKLOG AUTOMATION PROJECT:")
    Fixed:   print("[CONFIG] TEST PLANS IN BACKLOG AUTOMATION PROJECT:")

  Line 92: 📊
    Current: print(f"\n📊 SUMMARY BY STATE:")
    Fixed:   print(f"\n[STATS] SUMMARY BY STATE:")

  Line 99: ✅
    Current: print("✅ No test plans found")
    Fixed:   print("[SUCCESS] No test plans found")

  Line 103: ❌
    Current: print(f"❌ Error: {e}")
    Fixed:   print(f"[ERROR] Error: {e}")


File: X:\Programs\agile-backlog-automation\tools\migrate_db.py
==============================================================
  Line 57: ❌
    Current: print(f"❌ Database migration failed: {e}")
    Fixed:   print(f"[ERROR] Database migration failed: {e}")


File: X:\Programs\agile-backlog-automation\tools\migrate_db_add_creator.py
==========================================================================
  Line 19: ✅
    Current: print("✅ New database created with creator column.")
    Fixed:   print("[SUCCESS] New database created with creator column.")

  Line 34: ✅
    Current: print("✅ Creator column already exists. No migration needed.")
    Fixed:   print("[SUCCESS] Creator column already exists. No migration needed.")

  Line 37: 🔧
    Current: print("🔧 Adding creator column to backlog_jobs table...")
    Fixed:   print("[TOOL] Adding creator column to backlog_jobs table...")

  Line 55: ✅
    Current: print("✅ Migration completed successfully!")
    Fixed:   print("[SUCCESS] Migration completed successfully!")

  Line 63: ✅
    Current: print("✅ Verification: creator column is now present in the table.")
    Fixed:   print("[SUCCESS] Verification: creator column is now present in the table.")

  Line 65: ❌
    Current: print("❌ Verification failed: creator column not found.")
    Fixed:   print("[ERROR] Verification failed: creator column not found.")

  Line 68: ❌
    Current: print(f"❌ Database migration failed: {e}")
    Fixed:   print(f"[ERROR] Database migration failed: {e}")


File: X:\Programs\agile-backlog-automation\tools\monitor_job.py
===============================================================
  Line 20: 🔍
    Current: print(f"🔍 Monitoring Job: {job_id}")
    Fixed:   print(f"[SEARCH] Monitoring Job: {job_id}")

  Line 45: 📊
    Current: print(f"📊 Progress: {progress}%")
    Fixed:   print(f"[STATS] Progress: {progress}%")

  Line 46: 🤖
    Current: print(f"🤖 Agent: {current_agent}")
    Fixed:   print(f"[AI] Agent: {current_agent}")

  Line 48: 🔄
    Current: print(f"🔄 Status: {status}")
    Fixed:   print(f"[RETRY] Status: {status}")

  Line 51: ❌
    Current: print(f"❌ ERROR: {error}")
    Fixed:   print(f"[ERROR] ERROR: {error}")

  Line 64: 📊
    Current: print(f"📊 Final Progress: {progress}%")
    Fixed:   print(f"[STATS] Final Progress: {progress}%")

  Line 68: ❌
    Current: print(f"❌ ERROR: {error}")
    Fixed:   print(f"[ERROR] ERROR: {error}")

  Line 71: ✅
    Current: print("✅ SUCCESS!")
    Fixed:   print("[SUCCESS] SUCCESS!")

  Line 75: ❌
    Current: print(f"❌ API Error: {response.status_code}")
    Fixed:   print(f"[ERROR] API Error: {response.status_code}")

  Line 78: ❌
    Current: print(f"❌ Monitoring Error: {e}")
    Fixed:   print(f"[ERROR] Monitoring Error: {e}")


File: X:\Programs\agile-backlog-automation\tools\move_test_cases.py
===================================================================
  Line 89: ❌
    Current: print(f"❌ Error querying test cases: {e}")
    Fixed:   print(f"[ERROR] Error querying test cases: {e}")


File: X:\Programs\agile-backlog-automation\tools\optimize_ollama_gpu.py
=======================================================================
  Line 34: 🔧
    Current: print("🔧 Applying optimized GPU configuration:")
    Fixed:   print("[TOOL] Applying optimized GPU configuration:")

  Line 52: 🔄
    Current: print("🔄 Testing optimized configuration...")
    Fixed:   print("[RETRY] Testing optimized configuration...")

  Line 71: ✅
    Current: print("✅ Optimized configuration working!")
    Fixed:   print("[SUCCESS] Optimized configuration working!")

  Line 81: ✅
    Current: print("✅ GOOD: Response time under 2 minutes")
    Fixed:   print("[SUCCESS] GOOD: Response time under 2 minutes")

  Line 86: ❌
    Current: print(f"❌ Error: HTTP {response.status_code}")
    Fixed:   print(f"[ERROR] Error: HTTP {response.status_code}")

  Line 90: ❌
    Current: print("❌ Request timed out - configuration may need adjustment")
    Fixed:   print("[ERROR] Request timed out - configuration may need adjustment")

  Line 92: ❌
    Current: print(f"❌ Error: {e}")
    Fixed:   print(f"[ERROR] Error: {e}")

  Line 95: 📋
    Current: print("📋 Optimization Recommendations:")
    Fixed:   print("[CONFIG] Optimization Recommendations:")


File: X:\Programs\agile-backlog-automation\tools\optimize_ollama_gpu_v2.py
==========================================================================
  Line 32: 🔄
    Current: print(f"🔄 Testing {config['name']} configuration:")
    Fixed:   print(f"[RETRY] Testing {config['name']} configuration:")

  Line 70: ✅
    Current: print(f"  ✅ Success: {duration:.2f} seconds")
    Fixed:   print(f"  [SUCCESS] Success: {duration:.2f} seconds")

  Line 77: ❌
    Current: print(f"  ❌ Error: HTTP {response.status_code}")
    Fixed:   print(f"  [ERROR] Error: HTTP {response.status_code}")

  Line 84: ❌
    Current: print(f"  ❌ Error: {e}")
    Fixed:   print(f"  [ERROR] Error: {e}")

  Line 99: ❌
    Current: print("❌ No working configuration found")
    Fixed:   print("[ERROR] No working configuration found")

  Line 139: 🔄
    Current: print("🔄 Testing llama3.1:34b as alternative...")
    Fixed:   print("[RETRY] Testing llama3.1:34b as alternative...")

  Line 174: ✅
    Current: print(f"✅ 34B Model: {duration:.2f} seconds")
    Fixed:   print(f"[SUCCESS] 34B Model: {duration:.2f} seconds")

  Line 185: ❌
    Current: print(f"❌ 34B Error: HTTP {response.status_code}")
    Fixed:   print(f"[ERROR] 34B Error: HTTP {response.status_code}")

  Line 188: ❌
    Current: print(f"❌ 34B Error: {e}")
    Fixed:   print(f"[ERROR] 34B Error: {e}")


File: X:\Programs\agile-backlog-automation\tools\performance_comparison.py
==========================================================================
  Line 34: ✅
    Current: print(f"✅ {model_name} Results:")
    Fixed:   print(f"[SUCCESS] {model_name} Results:")

  Line 36: 📊
    Current: print(f"   📊 Tokens: {result['tokens_used']}")
    Fixed:   print(f"   [STATS] Tokens: {result['tokens_used']}")

  Line 38: 💰
    Current: print(f"   💰 Cost: ${client.estimate_cost(result['tokens_used'])['total_cost']:.4f}")
    Fixed:   print(f"   [COST] Cost: ${client.estimate_cost(result['tokens_used'])['total_cost']:.4f}")

  Line 51: ❌
    Current: print(f"❌ {model_name} failed: {e}")
    Fixed:   print(f"[ERROR] {model_name} failed: {e}")

  Line 78: 📊
    Current: print("📊 Performance Comparison:")
    Fixed:   print("[STATS] Performance Comparison:")

  Line 90: 💰
    Current: print(f"💰 Cost difference: {cost_ratio:.1f}x cheaper")
    Fixed:   print(f"[COST] Cost difference: {cost_ratio:.1f}x cheaper")

  Line 98: ✅
    Current: print("✅ Performance comparison completed!")
    Fixed:   print("[SUCCESS] Performance comparison completed!")


File: X:\Programs\agile-backlog-automation\tools\prompt_ab_tester.py
====================================================================
  Line 205: 📊
    Current: print("\n📊 A/B TEST RESULTS")
    Fixed:   print("\n[STATS] A/B TEST RESULTS")


File: X:\Programs\agile-backlog-automation\tools\quick_comparison.py
====================================================================
  Line 42: ❌
    Current: print(f"❌ {model_name} failed: {e}")
    Fixed:   print(f"[ERROR] {model_name} failed: {e}")

  Line 58: 📊
    Current: print("\n📊 COMPARISON RESULTS:")
    Fixed:   print("\n[STATS] COMPARISON RESULTS:")

  Line 65: 💰
    Current: print(f"   💰 Cost: ${result_8b['cost']:.4f}")
    Fixed:   print(f"   [COST] Cost: ${result_8b['cost']:.4f}")

  Line 71: 💰
    Current: print(f"   💰 Cost: ${result_70b['cost']:.4f}")
    Fixed:   print(f"   [COST] Cost: ${result_70b['cost']:.4f}")

  Line 81: 💰
    Current: print(f"   💰 8B is {cost_ratio:.1f}x cheaper than 70B")
    Fixed:   print(f"   [COST] 8B is {cost_ratio:.1f}x cheaper than 70B")

  Line 91: 💰
    Current: print(f"   💰 Use 8B for cost optimization (much cheaper)")
    Fixed:   print(f"   [COST] Use 8B for cost optimization (much cheaper)")

  Line 93: 💰
    Current: print(f"   💰 Cost difference is minimal")
    Fixed:   print(f"   [COST] Cost difference is minimal")

  Line 100: ✅
    Current: print("✅ Only 8B model is working")
    Fixed:   print("[SUCCESS] Only 8B model is working")

  Line 103: 💰
    Current: print(f"   💰 Cost: ${result_8b['cost']:.4f}")
    Fixed:   print(f"   [COST] Cost: ${result_8b['cost']:.4f}")

  Line 106: ✅
    Current: print("✅ Only 70B model is working")
    Fixed:   print("[SUCCESS] Only 70B model is working")

  Line 109: 💰
    Current: print(f"   💰 Cost: ${result_70b['cost']:.4f}")
    Fixed:   print(f"   [COST] Cost: ${result_70b['cost']:.4f}")

  Line 112: ❌
    Current: print("❌ Both models failed")
    Fixed:   print("[ERROR] Both models failed")

  Line 115: ✅
    Current: print("✅ Quick comparison completed!")
    Fixed:   print("[SUCCESS] Quick comparison completed!")


File: X:\Programs\agile-backlog-automation\tools\recommend_model_config.py
==========================================================================
  Line 30: 🔄
    Current: print(f"🔄 Testing {model['name']} ({model['description']})...")
    Fixed:   print(f"[RETRY] Testing {model['name']} ({model['description']})...")

  Line 66: ✅
    Current: quality = "✅ Valid JSON"
    Fixed:   quality = "[SUCCESS] Valid JSON"

  Line 77: ✅
    Current: print(f"  ✅ {duration:.2f} seconds - {quality}")
    Fixed:   print(f"  [SUCCESS] {duration:.2f} seconds - {quality}")

  Line 80: ❌
    Current: print(f"  ❌ Error: HTTP {response.status_code}")
    Fixed:   print(f"  [ERROR] Error: HTTP {response.status_code}")

  Line 85: ❌
    Current: print(f"  ❌ Error: {e}")
    Fixed:   print(f"  [ERROR] Error: {e}")

  Line 93: 📊
    Current: print("📊 Performance Results:")
    Fixed:   print("[STATS] Performance Results:")

  Line 111: 🔄
    Current: print(f"🔄 FALLBACK MODEL: {second_model['model']}")
    Fixed:   print(f"[RETRY] FALLBACK MODEL: {second_model['model']}")

  Line 115: 🔧
    Current: print("🔧 Configuration Update:")
    Fixed:   print("[TOOL] Configuration Update:")


File: X:\Programs\agile-backlog-automation\tools\reorganize_test_cases_and_plans.py
===================================================================================
  Line 79: 🔧
    Current: log(f"🔧 Initialized Test Case Reorganizer")
    Fixed:   log(f"[TOOL] Initialized Test Case Reorganizer")

  Line 118: ❌
    Current: log(f"❌ Error querying {work_item_type}: {e}")
    Fixed:   log(f"[ERROR] Error querying {work_item_type}: {e}")

  Line 247: ✅
    Current: log(f"✅ Created test plan: {plan_name} (ID: {plan['id']})")
    Fixed:   log(f"[SUCCESS] Created test plan: {plan_name} (ID: {plan['id']})")

  Line 251: ❌
    Current: log(f"❌ Error creating test plan {plan_name}: {e}")
    Fixed:   log(f"[ERROR] Error creating test plan {plan_name}: {e}")

  Line 273: ✅
    Current: log(f"✅ Created test suite: {suite_name} (ID: {suite['id']})")
    Fixed:   log(f"[SUCCESS] Created test suite: {suite_name} (ID: {suite['id']})")

  Line 277: ❌
    Current: log(f"❌ Error creating test suite {suite_name}: {e}")
    Fixed:   log(f"[ERROR] Error creating test suite {suite_name}: {e}")

  Line 296: ✅
    Current: log(f"✅ Added test case {test_case_id} to suite {suite_id}")
    Fixed:   log(f"[SUCCESS] Added test case {test_case_id} to suite {suite_id}")

  Line 300: ❌
    Current: log(f"❌ Error adding test case {test_case_id} to suite {suite_id}: {e}")
    Fixed:   log(f"[ERROR] Error adding test case {test_case_id} to suite {suite_id}: {e}")

  Line 351: 📊
    Current: log(f"\n📊 Analysis Results:")
    Fixed:   log(f"\n[STATS] Analysis Results:")

  Line 358: 🔧
    Current: log(f"\n🔧 Creating test plans and suites...")
    Fixed:   log(f"\n[TOOL] Creating test plans and suites...")

  Line 412: ✅
    Current: log(f"\n✅ Reorganization {'simulation' if dry_run else 'completed'} successfully!")
    Fixed:   log(f"\n[SUCCESS] Reorganization {'simulation' if dry_run else 'completed'} successfully!")

  Line 415: ❌
    Current: log(f"❌ Error during reorganization: {e}")
    Fixed:   log(f"[ERROR] Error during reorganization: {e}")

  Line 445: ❌
    Current: log(f"❌ Fatal error: {e}")
    Fixed:   log(f"[ERROR] Fatal error: {e}")


File: X:\Programs\agile-backlog-automation\tools\restart_with_job_fix.py
========================================================================
  Line 18: 🔄
    Current: print("🔄 Killing existing Python processes...")
    Fixed:   print("[RETRY] Killing existing Python processes...")

  Line 22: ✅
    Current: print("✅ Killed existing processes")
    Fixed:   print("[SUCCESS] Killed existing processes")

  Line 42: ✅
    Current: print("✅ API server started successfully")
    Fixed:   print("[SUCCESS] API server started successfully")

  Line 45: ❌
    Current: print(f"❌ Server started but health check failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Server started but health check failed: {response.status_code}")

  Line 48: ❌
    Current: print("❌ Server not responding to health check")
    Fixed:   print("[ERROR] Server not responding to health check")

  Line 52: ❌
    Current: print(f"❌ Failed to start server: {e}")
    Fixed:   print(f"[ERROR] Failed to start server: {e}")

  Line 57: 🔧
    Current: print(f"🔧 Adding job {job_id} to tracking...")
    Fixed:   print(f"[TOOL] Adding job {job_id} to tracking...")

  Line 80: ✅
    Current: print(f"✅ Successfully added job {job_id}")
    Fixed:   print(f"[SUCCESS] Successfully added job {job_id}")

  Line 83: ❌
    Current: print(f"❌ Failed to add job: {response.status_code} - {response.text}")
    Fixed:   print(f"[ERROR] Failed to add job: {response.status_code} - {response.text}")

  Line 87: ❌
    Current: print(f"❌ Error adding job: {e}")
    Fixed:   print(f"[ERROR] Error adding job: {e}")

  Line 97: ✅
    Current: print(f"✅ Job {job_id} is tracked:")
    Fixed:   print(f"[SUCCESS] Job {job_id} is tracked:")

  Line 103: ❌
    Current: print(f"❌ Job not found: {response.status_code}")
    Fixed:   print(f"[ERROR] Job not found: {response.status_code}")

  Line 107: ❌
    Current: print(f"❌ Error verifying job: {e}")
    Fixed:   print(f"[ERROR] Error verifying job: {e}")

  Line 114: 🔧
    Current: print("🔧 API Server Restart with Job Fix")
    Fixed:   print("[TOOL] API Server Restart with Job Fix")

  Line 123: ❌
    Current: print("❌ Failed to start server")
    Fixed:   print("[ERROR] Failed to start server")

  Line 128: ❌
    Current: print("❌ Failed to add job to tracking")
    Fixed:   print("[ERROR] Failed to add job to tracking")

  Line 133: ❌
    Current: print("❌ Job not properly tracked")
    Fixed:   print("[ERROR] Job not properly tracked")


File: X:\Programs\agile-backlog-automation\tools\retry_failed_uploads.py
========================================================================
  Line 147: ✅
    Current: print(f"\n✅ Successfully recovered {results['success']} items!")
    Fixed:   print(f"\n[SUCCESS] Successfully recovered {results['success']} items!")

  Line 150: ❌
    Current: print(f"\n❌ {results['still_failed']} items still failed after retry")
    Fixed:   print(f"\n[ERROR] {results['still_failed']} items still failed after retry")

  Line 216: ✅
    Current: print(f"✅ Cleaned up {successful_count} successful items.")
    Fixed:   print(f"[SUCCESS] Cleaned up {successful_count} successful items.")


File: X:\Programs\agile-backlog-automation\tools\run_backlog_sweeper.py
=======================================================================
  Line 21: 🔍
    Current: print("🔍 Starting Backlog Sweeper for Backlog Automation Project")
    Fixed:   print("[SEARCH] Starting Backlog Sweeper for Backlog Automation Project")

  Line 37: ❌
    Current: print("❌ Error: AZURE_DEVOPS_PAT environment variable not set")
    Fixed:   print("[ERROR] Error: AZURE_DEVOPS_PAT environment variable not set")

  Line 40: 📋
    Current: print(f"📋 Configuration:")
    Fixed:   print(f"[CONFIG] Configuration:")

  Line 48: 🔧
    Current: print("🔧 Initializing Azure DevOps integrator...")
    Fixed:   print("[TOOL] Initializing Azure DevOps integrator...")

  Line 58: ❌
    Current: print("❌ Error: Azure DevOps integrator not enabled")
    Fixed:   print("[ERROR] Error: Azure DevOps integrator not enabled")

  Line 61: ✅
    Current: print("✅ Azure DevOps integrator initialized successfully")
    Fixed:   print("[SUCCESS] Azure DevOps integrator initialized successfully")

  Line 65: 🔧
    Current: print("🔧 Initializing Backlog Sweeper Agent...")
    Fixed:   print("[TOOL] Initializing Backlog Sweeper Agent...")

  Line 67: ✅
    Current: print("✅ Backlog Sweeper Agent initialized successfully")
    Fixed:   print("[SUCCESS] Backlog Sweeper Agent initialized successfully")

  Line 80: ✅
    Current: print(f"✅ Backlog sweep completed in {duration:.2f} seconds")
    Fixed:   print(f"[SUCCESS] Backlog sweep completed in {duration:.2f} seconds")

  Line 84: 📊
    Current: print("📊 Sweep Results:")
    Fixed:   print("[STATS] Sweep Results:")

  Line 95: 🚨
    Current: print(f"🚨 High Priority Issues: {high_priority_count}")
    Fixed:   print(f"[ALERT] High Priority Issues: {high_priority_count}")

  Line 103: 🤖
    Current: print("🤖 Issues by Suggested Agent:")
    Fixed:   print("[AI] Issues by Suggested Agent:")

  Line 131: 🚨
    Current: print("🚨 CRITICAL ISSUES DETECTED:")
    Fixed:   print("[ALERT] CRITICAL ISSUES DETECTED:")

  Line 151: ✅
    Current: print("✅ No issues found - backlog is in good health!")
    Fixed:   print("[SUCCESS] No issues found - backlog is in good health!")

  Line 155: 🚨
    Current: print("🚨 Critical issues found - immediate attention required!")
    Fixed:   print("[ALERT] Critical issues found - immediate attention required!")

  Line 160: ❌
    Current: print(f"❌ Error running backlog sweeper: {e}")
    Fixed:   print(f"[ERROR] Error running backlog sweeper: {e}")


File: X:\Programs\agile-backlog-automation\tools\run_pipeline.py
================================================================
  Line 51: 🔧
    Current: print(f"🔧 Applied custom context: {list(custom_context.keys())}")
    Fixed:   print(f"[TOOL] Applied custom context: {list(custom_context.keys())}")

  Line 74: 🔍
    Current: print(f"🔍 Decomposing epic: {epic.get('title', 'Untitled Epic')}")
    Fixed:   print(f"[SEARCH] Decomposing epic: {epic.get('title', 'Untitled Epic')}")

  Line 85: 📋
    Current: print(f"📋 Decomposing feature into user stories: {feature.get('title', 'Untitled Feature')}")
    Fixed:   print(f"[CONFIG] Decomposing feature into user stories: {feature.get('title', 'Untitled Feature')}")


File: X:\Programs\agile-backlog-automation\tools\simple_azure_test.py
=====================================================================
  Line 43: 🔍
    Current: print(f"🔍 Azure DevOps Configuration Analysis:")
    Fixed:   print(f"[SEARCH] Azure DevOps Configuration Analysis:")

  Line 64: ❌
    Current: print(f"❌ Azure integration enabled but missing required fields")
    Fixed:   print(f"[ERROR] Azure integration enabled but missing required fields")

  Line 70: ✅
    Current: print(f"✅ Auto-enabling Azure integration (all required fields present)")
    Fixed:   print(f"[SUCCESS] Auto-enabling Azure integration (all required fields present)")

  Line 73: ❌
    Current: print(f"❌ Cannot auto-enable Azure integration (missing required fields)")
    Fixed:   print(f"[ERROR] Cannot auto-enable Azure integration (missing required fields)")

  Line 82: 🔧
    Current: print("\n🔧 Testing Environment Variables")
    Fixed:   print("\n[TOOL] Testing Environment Variables")

  Line 89: ✅❌
    Current: print(f"  AZURE_DEVOPS_PAT: {'✅ Set' if pat else '❌ Not set'}")
    Fixed:   print(f"  AZURE_DEVOPS_PAT: {'[SUCCESS] Set' if pat else '[ERROR] Not set'}")

  Line 90: ✅❌
    Current: print(f"  AZURE_DEVOPS_ORG: {'✅ Set' if org else '❌ Not set'}")
    Fixed:   print(f"  AZURE_DEVOPS_ORG: {'[SUCCESS] Set' if org else '[ERROR] Not set'}")

  Line 91: ✅❌
    Current: print(f"  AZURE_DEVOPS_PROJECT: {'✅ Set' if project else '❌ Not set'}")
    Fixed:   print(f"  AZURE_DEVOPS_PROJECT: {'[SUCCESS] Set' if project else '[ERROR] Not set'}")

  Line 98: 🔧
    Current: print("\n🔧 Testing Supervisor Initialization")
    Fixed:   print("\n[TOOL] Testing Supervisor Initialization")

  Line 114: ✅
    Current: print("✅ WorkflowSupervisor initialized successfully")
    Fixed:   print("[SUCCESS] WorkflowSupervisor initialized successfully")

  Line 118: ✅
    Current: print("✅ Azure DevOps integration should work")
    Fixed:   print("[SUCCESS] Azure DevOps integration should work")

  Line 121: ❌
    Current: print("❌ Azure DevOps integration not available")
    Fixed:   print("[ERROR] Azure DevOps integration not available")

  Line 125: ❌
    Current: print(f"❌ Failed to initialize WorkflowSupervisor: {e}")
    Fixed:   print(f"[ERROR] Failed to initialize WorkflowSupervisor: {e}")

  Line 141: 📊
    Current: print("📊 Test Results Summary:")
    Fixed:   print("[STATS] Test Results Summary:")

  Line 142: ✅❌
    Current: print(f"   Configuration Detection: {'✅ PASS' if config_ok else '❌ FAIL'}")
    Fixed:   print(f"   Configuration Detection: {'[SUCCESS] PASS' if config_ok else '[ERROR] FAIL'}")

  Line 143: ✅❌
    Current: print(f"   Environment Variables: {'✅ PASS' if env_ok else '❌ FAIL'}")
    Fixed:   print(f"   Environment Variables: {'[SUCCESS] PASS' if env_ok else '[ERROR] FAIL'}")

  Line 144: ✅❌
    Current: print(f"   Supervisor Initialization: {'✅ PASS' if supervisor_ok else '❌ FAIL'}")
    Fixed:   print(f"   Supervisor Initialization: {'[SUCCESS] PASS' if supervisor_ok else '[ERROR] FAIL'}")


File: X:\Programs\agile-backlog-automation\tools\simple_comparison.py
=====================================================================
  Line 41: ❌
    Current: print(f"❌ {model_name}: {e}")
    Fixed:   print(f"[ERROR] {model_name}: {e}")

  Line 57: 📊
    Current: print("\n📊 RESULTS:")
    Fixed:   print("\n[STATS] RESULTS:")


File: X:\Programs\agile-backlog-automation\tools\test_70b_model.py
==================================================================
  Line 32: ✅
    Current: print("✅ Generation successful!")
    Fixed:   print("[SUCCESS] Generation successful!")

  Line 35: 📊
    Current: print(f"📊 Tokens: {result['tokens_used']}")
    Fixed:   print(f"[STATS] Tokens: {result['tokens_used']}")

  Line 39: 💰
    Current: print(f"💰 Cost: ${cost['total_cost']:.4f}")
    Fixed:   print(f"[COST] Cost: ${cost['total_cost']:.4f}")

  Line 44: ❌
    Current: print(f"❌ Test failed: {e}")
    Fixed:   print(f"[ERROR] Test failed: {e}")

  Line 49: 🤖
    Current: print("\n🤖 Testing Agent Integration")
    Fixed:   print("\n[AI] Testing Agent Integration")

  Line 63: ✅
    Current: print(f"✅ Agent initialized with provider: {agent.llm_provider}")
    Fixed:   print(f"[SUCCESS] Agent initialized with provider: {agent.llm_provider}")

  Line 77: ✅
    Current: print("✅ Agent generation successful!")
    Fixed:   print("[SUCCESS] Agent generation successful!")

  Line 83: ❌
    Current: print(f"❌ Agent integration failed: {e}")
    Fixed:   print(f"[ERROR] Agent integration failed: {e}")

  Line 98: ✅
    Current: print("✅ All tests passed! 8B model is working perfectly!")
    Fixed:   print("[SUCCESS] All tests passed! 8B model is working perfectly!")

  Line 100: ❌
    Current: print("❌ Some tests failed. Check the error messages above.")
    Fixed:   print("[ERROR] Some tests failed. Check the error messages above.")


File: X:\Programs\agile-backlog-automation\tools\test_ado_config.py
===================================================================
  Line 15: 🔍
    Current: print("🔍 Testing Azure DevOps Configuration")
    Fixed:   print("[SEARCH] Testing Azure DevOps Configuration")

  Line 24: ✅❌
    Current: print(f"🔗 AZURE_DEVOPS_ORG: {'✅ Set' if ado_org else '❌ Not set'}")
    Fixed:   print(f"🔗 AZURE_DEVOPS_ORG: {'[SUCCESS] Set' if ado_org else '[ERROR] Not set'}")

  Line 25: 📋✅❌
    Current: print(f"📋 AZURE_DEVOPS_PROJECT: {'✅ Set' if ado_project else '❌ Not set'}")
    Fixed:   print(f"[CONFIG] AZURE_DEVOPS_PROJECT: {'[SUCCESS] Set' if ado_project else '[ERROR] Not set'}")

  Line 26: ✅❌
    Current: print(f"🔑 AZURE_DEVOPS_PAT: {'✅ Set' if ado_pat else '❌ Not set'}")
    Fixed:   print(f"🔑 AZURE_DEVOPS_PAT: {'[SUCCESS] Set' if ado_pat else '[ERROR] Not set'}")

  Line 29: ❌
    Current: print("\n❌ Azure DevOps not fully configured")
    Fixed:   print("\n[ERROR] Azure DevOps not fully configured")

  Line 35: ✅
    Current: print("✅ Config loaded successfully")
    Fixed:   print("[SUCCESS] Config loaded successfully")

  Line 47: ✅
    Current: print(f"✅ ADO Integrator initialized")
    Fixed:   print(f"[SUCCESS] ADO Integrator initialized")

  Line 53: ✅
    Current: print("✅ Test Management client available")
    Fixed:   print("[SUCCESS] Test Management client available")

  Line 59: ✅
    Current: print(f"✅ ADO API connectivity working - found {len(existing_plans.get('value', []))} existing test plans")
    Fixed:   print(f"[SUCCESS] ADO API connectivity working - found {len(existing_plans.get('value', []))} existing test plans")

  Line 62: ❌
    Current: print(f"❌ ADO API connectivity failed: {e}")
    Fixed:   print(f"[ERROR] ADO API connectivity failed: {e}")

  Line 65: ❌
    Current: print("❌ Test Management client not available")
    Fixed:   print("[ERROR] Test Management client not available")

  Line 69: ❌
    Current: print(f"❌ Configuration test failed: {e}")
    Fixed:   print(f"[ERROR] Configuration test failed: {e}")

  Line 78: ✅
    Current: print("✅ End-to-end testing should create visible test artifacts in ADO")
    Fixed:   print("[SUCCESS] End-to-end testing should create visible test artifacts in ADO")

  Line 81: ❌
    Current: print("❌ End-to-end testing will use mock mode only")
    Fixed:   print("[ERROR] End-to-end testing will use mock mode only")


File: X:\Programs\agile-backlog-automation\tools\test_ado_connection.py
=======================================================================
  Line 13: ❌
    Current: print("❌ Missing environment variables")
    Fixed:   print("[ERROR] Missing environment variables")

  Line 20: 🔍
    Current: print("🔍 Testing project access...")
    Fixed:   print("[SEARCH] Testing project access...")

  Line 32: 🔍
    Current: print("\n🔍 Checking for test cases...")
    Fixed:   print("\n[SEARCH] Checking for test cases...")

  Line 53: 🔍
    Current: print("\n🔍 Checking for test plans...")
    Fixed:   print("\n[SEARCH] Checking for test plans...")


File: X:\Programs\agile-backlog-automation\tools\test_ado_connectivity.py
=========================================================================
  Line 15: 🔍
    Current: print("🔍 Testing Azure DevOps API Connectivity")
    Fixed:   print("[SEARCH] Testing Azure DevOps API Connectivity")

  Line 24: ✅❌
    Current: print(f"🔗 AZURE_DEVOPS_ORG: {'✅ Set' if ado_org else '❌ Not set'}")
    Fixed:   print(f"🔗 AZURE_DEVOPS_ORG: {'[SUCCESS] Set' if ado_org else '[ERROR] Not set'}")

  Line 25: 📋✅❌
    Current: print(f"📋 AZURE_DEVOPS_PROJECT: {'✅ Set' if ado_project else '❌ Not set'}")
    Fixed:   print(f"[CONFIG] AZURE_DEVOPS_PROJECT: {'[SUCCESS] Set' if ado_project else '[ERROR] Not set'}")

  Line 26: ✅❌
    Current: print(f"🔑 AZURE_DEVOPS_PAT: {'✅ Set' if ado_pat else '❌ Not set'}")
    Fixed:   print(f"🔑 AZURE_DEVOPS_PAT: {'[SUCCESS] Set' if ado_pat else '[ERROR] Not set'}")

  Line 29: ❌
    Current: print("\n❌ Azure DevOps not fully configured")
    Fixed:   print("\n[ERROR] Azure DevOps not fully configured")

  Line 42: ✅
    Current: print(f"✅ API connectivity successful!")
    Fixed:   print(f"[SUCCESS] API connectivity successful!")

  Line 52: ✅
    Current: print("✅ Work Items API accessible")
    Fixed:   print("[SUCCESS] Work Items API accessible")

  Line 62: ✅
    Current: print(f"✅ Test Management API accessible - {len(test_plans.get('value', []))} test plans found")
    Fixed:   print(f"[SUCCESS] Test Management API accessible - {len(test_plans.get('value', []))} test plans found")

  Line 69: ❌
    Current: print(f"❌ API connectivity failed: {response.status_code}")
    Fixed:   print(f"[ERROR] API connectivity failed: {response.status_code}")

  Line 74: ❌
    Current: print(f"❌ Connectivity test failed: {e}")
    Fixed:   print(f"[ERROR] Connectivity test failed: {e}")

  Line 83: ✅
    Current: print("✅ Basic integration is possible")
    Fixed:   print("[SUCCESS] Basic integration is possible")

  Line 87: ❌
    Current: print("❌ Check your credentials and project settings")
    Fixed:   print("[ERROR] Check your credentials and project settings")


File: X:\Programs\agile-backlog-automation\tools\test_ado_permissions.py
========================================================================
  Line 15: 🔍
    Current: print("🔍 Testing various Azure DevOps API endpoints...")
    Fixed:   print("[SEARCH] Testing various Azure DevOps API endpoints...")

  Line 21: ❌
    Current: print("❌ Integration not enabled")
    Fixed:   print("[ERROR] Integration not enabled")

  Line 87: ✅
    Current: print(f"   ✅ SUCCESS ({response.status_code})")
    Fixed:   print(f"   [SUCCESS] SUCCESS ({response.status_code})")

  Line 101: ❌
    Current: print(f"   ❌ FAILED ({response.status_code})")
    Fixed:   print(f"   [ERROR] FAILED ({response.status_code})")

  Line 110: ❌
    Current: print(f"   ❌ ERROR: {e}")
    Fixed:   print(f"   [ERROR] ERROR: {e}")

  Line 144: ✅
    Current: print(f"✅ Found {len(work_items)} User Stories")
    Fixed:   print(f"[SUCCESS] Found {len(work_items)} User Stories")

  Line 154: ✅
    Current: print(f"✅ Retrieved details for {len(details.get('value', []))} work items")
    Fixed:   print(f"[SUCCESS] Retrieved details for {len(details.get('value', []))} work items")

  Line 169: ❌
    Current: print(f"❌ Failed to get work item details: {details_response.status_code}")
    Fixed:   print(f"[ERROR] Failed to get work item details: {details_response.status_code}")

  Line 171: ❌
    Current: print(f"❌ WIQL query failed: {response.status_code}")
    Fixed:   print(f"[ERROR] WIQL query failed: {response.status_code}")

  Line 175: ❌
    Current: print(f"❌ Query test failed: {e}")
    Fixed:   print(f"[ERROR] Query test failed: {e}")


File: X:\Programs\agile-backlog-automation\tools\test_all_agents_timeout.py
===========================================================================
  Line 75: ✅
    Current: print(f"✅ Epic generation: {len(epics)} epics generated")
    Fixed:   print(f"[SUCCESS] Epic generation: {len(epics)} epics generated")

  Line 82: ✅
    Current: print(f"✅ Feature decomposition: {len(features)} features generated")
    Fixed:   print(f"[SUCCESS] Feature decomposition: {len(features)} features generated")

  Line 89: ✅
    Current: print(f"✅ User story decomposition: {len(user_stories)} stories generated")
    Fixed:   print(f"[SUCCESS] User story decomposition: {len(user_stories)} stories generated")

  Line 96: ✅
    Current: print(f"✅ Task generation: {len(tasks)} tasks generated")
    Fixed:   print(f"[SUCCESS] Task generation: {len(tasks)} tasks generated")

  Line 101: ❌
    Current: print(f"❌ Test failed with exception: {e}")
    Fixed:   print(f"[ERROR] Test failed with exception: {e}")


File: X:\Programs\agile-backlog-automation\tools\test_api_parameter.py
======================================================================
  Line 51: ✅
    Current: print("✅ API correctly received includeTestArtifacts=False")
    Fixed:   print("[SUCCESS] API correctly received includeTestArtifacts=False")

  Line 54: ❌
    Current: print(f"❌ API received incorrect value: {include_test}")
    Fixed:   print(f"[ERROR] API received incorrect value: {include_test}")

  Line 57: ❌
    Current: print(f"❌ API request failed: {result}")
    Fixed:   print(f"[ERROR] API request failed: {result}")

  Line 61: ❌
    Current: print(f"❌ Error: {str(e)}")
    Fixed:   print(f"[ERROR] Error: {str(e)}")

  Line 66: ✅
    Current: print("\n✅ API parameter test PASSED")
    Fixed:   print("\n[SUCCESS] API parameter test PASSED")

  Line 68: ❌
    Current: print("\n❌ API parameter test FAILED")
    Fixed:   print("\n[ERROR] API parameter test FAILED")


File: X:\Programs\agile-backlog-automation\tools\test_api_timeout.py
====================================================================
  Line 18: ✅
    Current: print(f"✅ Test endpoint response: {response.status_code}")
    Fixed:   print(f"[SUCCESS] Test endpoint response: {response.status_code}")

  Line 21: ❌
    Current: print(f"❌ Test endpoint failed: {e}")
    Fixed:   print(f"[ERROR] Test endpoint failed: {e}")

  Line 53: ✅
    Current: print(f"✅ Project creation response: {response.status_code}")
    Fixed:   print(f"[SUCCESS] Project creation response: {response.status_code}")

  Line 71: ✅
    Current: print(f"✅ Backlog generation response: {response.status_code}")
    Fixed:   print(f"[SUCCESS] Backlog generation response: {response.status_code}")

  Line 77: ❌
    Current: print(f"❌ FAILED: Unexpected status code: {response.status_code}")
    Fixed:   print(f"[ERROR] FAILED: Unexpected status code: {response.status_code}")

  Line 80: ❌
    Current: print("❌ TIMEOUT: Backlog generation request timed out after 60 seconds")
    Fixed:   print("[ERROR] TIMEOUT: Backlog generation request timed out after 60 seconds")

  Line 82: ❌
    Current: print(f"❌ ERROR: Backlog generation failed: {e}")
    Fixed:   print(f"[ERROR] ERROR: Backlog generation failed: {e}")

  Line 84: ❌
    Current: print("❌ FAILED: Could not extract project ID from response")
    Fixed:   print("[ERROR] FAILED: Could not extract project ID from response")

  Line 87: ❌
    Current: print("❌ TIMEOUT: Project creation request timed out")
    Fixed:   print("[ERROR] TIMEOUT: Project creation request timed out")

  Line 89: ❌
    Current: print(f"❌ ERROR: Project creation failed: {e}")
    Fixed:   print(f"[ERROR] ERROR: Project creation failed: {e}")

  Line 92: 🔧
    Current: print("🔧 API Timeout Test Script")
    Fixed:   print("[TOOL] API Timeout Test Script")


File: X:\Programs\agile-backlog-automation\tools\test_azure_integration_fix.py
==============================================================================
  Line 45: ✅
    Current: print("✅ Successfully imported unified API server")
    Fixed:   print("[SUCCESS] Successfully imported unified API server")

  Line 56: ✅
    Current: print(f"✅ Project creation response: {project_result}")
    Fixed:   print(f"[SUCCESS] Project creation response: {project_result}")

  Line 58: ✅
    Current: print(f"✅ Project created with ID: {project_id}")
    Fixed:   print(f"[SUCCESS] Project created with ID: {project_id}")

  Line 61: ❌
    Current: print("❌ No project ID returned, cannot proceed")
    Fixed:   print("[ERROR] No project ID returned, cannot proceed")

  Line 71: ✅
    Current: print(f"✅ Backlog generation started with job ID: {job_id}")
    Fixed:   print(f"[SUCCESS] Backlog generation started with job ID: {job_id}")

  Line 74: 📊
    Current: print(f"\n📊 Monitoring job {job_id}...")
    Fixed:   print(f"\n[STATS] Monitoring job {job_id}...")

  Line 90: ✅
    Current: print("✅ Job completed successfully!")
    Fixed:   print("[SUCCESS] Job completed successfully!")

  Line 94: ❌
    Current: print(f"❌ Job failed: {error}")
    Fixed:   print(f"[ERROR] Job failed: {error}")

  Line 104: ❌
    Current: print(f"❌ Failed to start backlog generation: {response.status_code}")
    Fixed:   print(f"[ERROR] Failed to start backlog generation: {response.status_code}")

  Line 108: ❌
    Current: print(f"❌ Failed to create project: {response.status_code}")
    Fixed:   print(f"[ERROR] Failed to create project: {response.status_code}")

  Line 112: ❌
    Current: print(f"❌ Error during test: {e}")
    Fixed:   print(f"[ERROR] Error during test: {e}")


File: X:\Programs\agile-backlog-automation\tools\test_backend_fix.py
====================================================================
  Line 16: ✅
    Current: print("✅ Backend health check passed")
    Fixed:   print("[SUCCESS] Backend health check passed")

  Line 19: ❌
    Current: print(f"❌ Backend health check failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Backend health check failed: {response.status_code}")

  Line 22: ❌
    Current: print(f"❌ Backend health check failed: {e}")
    Fixed:   print(f"[ERROR] Backend health check failed: {e}")

  Line 58: ✅
    Current: print(f"✅ Project created successfully: {project_id}")
    Fixed:   print(f"[SUCCESS] Project created successfully: {project_id}")

  Line 61: ❌
    Current: print(f"❌ Project creation failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Project creation failed: {response.status_code}")

  Line 65: ❌
    Current: print(f"❌ Project creation failed: {e}")
    Fixed:   print(f"[ERROR] Project creation failed: {e}")

  Line 82: ✅
    Current: print(f"✅ Backlog generation started: {job_id}")
    Fixed:   print(f"[SUCCESS] Backlog generation started: {job_id}")

  Line 101: 📊
    Current: print(f"📊 Status: {status}, Progress: {progress}%, Action: {current_action}")
    Fixed:   print(f"[STATS] Status: {status}, Progress: {progress}%, Action: {current_action}")

  Line 104: ✅
    Current: print("✅ Backlog generation completed successfully!")
    Fixed:   print("[SUCCESS] Backlog generation completed successfully!")

  Line 108: ❌
    Current: print(f"❌ Backlog generation failed: {error}")
    Fixed:   print(f"[ERROR] Backlog generation failed: {error}")

  Line 121: ❌
    Current: print(f"❌ Backlog generation start failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Backlog generation start failed: {response.status_code}")

  Line 125: ❌
    Current: print(f"❌ Backlog generation test failed: {e}")
    Fixed:   print(f"[ERROR] Backlog generation test failed: {e}")

  Line 135: ❌
    Current: print("❌ Backend is not running or not healthy")
    Fixed:   print("[ERROR] Backend is not running or not healthy")

  Line 141: ❌
    Current: print("❌ Project creation failed")
    Fixed:   print("[ERROR] Project creation failed")

  Line 152: ❌
    Current: print("❌ Some tests failed. Backend may still have issues.")
    Fixed:   print("[ERROR] Some tests failed. Backend may still have issues.")


File: X:\Programs\agile-backlog-automation\tools\test_backlog_with_8b.py
========================================================================
  Line 42: 📋
    Current: print("📋 Product Vision:")
    Fixed:   print("[CONFIG] Product Vision:")

  Line 47: 🤖
    Current: print("🤖 Initializing agents...")
    Fixed:   print("[AI] Initializing agents...")

  Line 51: ✅
    Current: print(f"✅ Epic Agent: {epic_agent.llm_provider}")
    Fixed:   print(f"[SUCCESS] Epic Agent: {epic_agent.llm_provider}")

  Line 52: ✅
    Current: print(f"✅ Feature Agent: {feature_agent.llm_provider}")
    Fixed:   print(f"[SUCCESS] Feature Agent: {feature_agent.llm_provider}")

  Line 71: ✅
    Current: print(f"✅ Generated {len(epics)} epics in {epic_time.total_seconds():.2f}s")
    Fixed:   print(f"[SUCCESS] Generated {len(epics)} epics in {epic_time.total_seconds():.2f}s")

  Line 76: 📋
    Current: print(f"📋 Epic {i}: {epic.get('title', 'Unknown')}")
    Fixed:   print(f"[CONFIG] Epic {i}: {epic.get('title', 'Unknown')}")

  Line 89: ✅
    Current: print(f"✅ Generated {len(features)} features in {feature_time.total_seconds():.2f}s")
    Fixed:   print(f"[SUCCESS] Generated {len(features)} features in {feature_time.total_seconds():.2f}s")

  Line 94: 🔧
    Current: print(f"🔧 Feature {i}: {feature.get('title', 'Unknown')}")
    Fixed:   print(f"[TOOL] Feature {i}: {feature.get('title', 'Unknown')}")

  Line 102: 📊
    Current: print(f"📊 Generated {len(epics)} epics and {len(features) if epics else 0} features")
    Fixed:   print(f"[STATS] Generated {len(epics)} epics and {len(features) if epics else 0} features")

  Line 103: ✅
    Current: print("✅ 8B model is working perfectly for backlog generation!")
    Fixed:   print("[SUCCESS] 8B model is working perfectly for backlog generation!")

  Line 108: ❌
    Current: print(f"❌ Backlog generation failed: {e}")
    Fixed:   print(f"[ERROR] Backlog generation failed: {e}")


File: X:\Programs\agile-backlog-automation\tools\test_bulk_deletion_small.py
============================================================================
  Line 41: 🔧
    Current: print(f"🔧 Initialized Test Bulk Deleter (Backlog Automation Project)")
    Fixed:   print(f"[TOOL] Initialized Test Bulk Deleter (Backlog Automation Project)")

  Line 47: 🔍
    Current: print("🔍 Querying test suites via WIQL from Backlog Automation project...")
    Fixed:   print("[SEARCH] Querying test suites via WIQL from Backlog Automation project...")

  Line 54: 📋
    Current: print(f"📋 WIQL Query: {query}")
    Fixed:   print(f"[CONFIG] WIQL Query: {query}")

  Line 69: ✅
    Current: print(f"✅ Found {len(test_suite_ids)} test suites")
    Fixed:   print(f"[SUCCESS] Found {len(test_suite_ids)} test suites")

  Line 73: ❌
    Current: print(f"❌ Error querying test suites: {e}")
    Fixed:   print(f"[ERROR] Error querying test suites: {e}")

  Line 88: ✅
    Current: print(f"  ✅ Successfully deleted test suite {test_suite_id} directly from Backlog Automation project")
    Fixed:   print(f"  [SUCCESS] Successfully deleted test suite {test_suite_id} directly from Backlog Automation project")

  Line 94: ❌
    Current: print(f"  ❌ Error deleting test suite {test_suite_id} directly: {response.status_code}")
    Fixed:   print(f"  [ERROR] Error deleting test suite {test_suite_id} directly: {response.status_code}")

  Line 99: ❌
    Current: print(f"  ❌ Error deleting test suite {test_suite_id}: {e}")
    Fixed:   print(f"  [ERROR] Error deleting test suite {test_suite_id}: {e}")

  Line 115: 📋
    Current: print(f"\n📋 Processing {i}/{len(test_suite_ids)}: Test Suite {test_suite_id}")
    Fixed:   print(f"\n[CONFIG] Processing {i}/{len(test_suite_ids)}: Test Suite {test_suite_id}")

  Line 127: ❌
    Current: print(f"  ❌ Exception: {e}")
    Fixed:   print(f"  [ERROR] Exception: {e}")

  Line 131: 📊
    Current: print("📊 BULK DELETION SUMMARY (Backlog Automation Project)")
    Fixed:   print("[STATS] BULK DELETION SUMMARY (Backlog Automation Project)")

  Line 138: ❌
    Current: print(f"\n❌ Errors encountered:")
    Fixed:   print(f"\n[ERROR] Errors encountered:")

  Line 162: ✅
    Current: print("✅ No test suites found to delete")
    Fixed:   print("[SUCCESS] No test suites found to delete")

  Line 165: 📋
    Current: print(f"📋 Testing with first {len(test_suite_ids)} test suites")
    Fixed:   print(f"[CONFIG] Testing with first {len(test_suite_ids)} test suites")

  Line 169: 🔍
    Current: print(f"\n🔍 TEST SUITE IDs FOR DELETION:")
    Fixed:   print(f"\n[SEARCH] TEST SUITE IDs FOR DELETION:")

  Line 178: ❌
    Current: print("❌ Deletion cancelled")
    Fixed:   print("[ERROR] Deletion cancelled")

  Line 188: ❌
    Current: print(f"❌ Error: {e}")
    Fixed:   print(f"[ERROR] Error: {e}")


File: X:\Programs\agile-backlog-automation\tools\test_config_loader.py
======================================================================
  Line 10: 🔧
    Current: print("🔧 Environment Variables:")
    Fixed:   print("[TOOL] Environment Variables:")


File: X:\Programs\agile-backlog-automation\tools\test_database_commit_fix.py
============================================================================
  Line 39: 📋
    Current: print("📋 Test Product Vision:")
    Fixed:   print("[CONFIG] Test Product Vision:")

  Line 44: 🔍
    Current: print("🔍 Checking database before test...")
    Fixed:   print("[SEARCH] Checking database before test...")

  Line 65: ✅
    Current: print(f"✅ Workflow completed in {execution_time:.2f} seconds")
    Fixed:   print(f"[SUCCESS] Workflow completed in {execution_time:.2f} seconds")

  Line 68: 🔍
    Current: print("🔍 Checking database after test...")
    Fixed:   print("[SEARCH] Checking database after test...")

  Line 91: ✅
    Current: print("✅ SUCCESS: Database commit working correctly!")
    Fixed:   print("[SUCCESS] SUCCESS: Database commit working correctly!")

  Line 98: ❌
    Current: print("❌ FAILURE: No new jobs added to database")
    Fixed:   print("[ERROR] FAILURE: No new jobs added to database")

  Line 104: ✅
    Current: print(f"✅ Workflow generated {epic_count} epics")
    Fixed:   print(f"[SUCCESS] Workflow generated {epic_count} epics")

  Line 111: ❌
    Current: print(f"❌ Test failed with error: {e}")
    Fixed:   print(f"[ERROR] Test failed with error: {e}")

  Line 130: ✅
    Current: print("✅ send_completion_notification method exists")
    Fixed:   print("[SUCCESS] send_completion_notification method exists")

  Line 132: ❌
    Current: print("❌ send_completion_notification method missing")
    Fixed:   print("[ERROR] send_completion_notification method missing")

  Line 139: ✅
    Current: print("✅ send_email_notification method correctly removed")
    Fixed:   print("[SUCCESS] send_email_notification method correctly removed")

  Line 144: ❌
    Current: print(f"❌ Notification test failed: {e}")
    Fixed:   print(f"[ERROR] Notification test failed: {e}")

  Line 159: 📊
    Current: print("\n📊 Test Summary")
    Fixed:   print("\n[STATS] Test Summary")

  Line 161: ✅❌
    Current: print(f"Notification Methods: {'✅ PASS' if notification_test else '❌ FAIL'}")
    Fixed:   print(f"Notification Methods: {'[SUCCESS] PASS' if notification_test else '[ERROR] FAIL'}")

  Line 162: ✅❌
    Current: print(f"Database Commit: {'✅ PASS' if database_test else '❌ FAIL'}")
    Fixed:   print(f"Database Commit: {'[SUCCESS] PASS' if database_test else '[ERROR] FAIL'}")

  Line 168: ❌
    Current: print("\n❌ Some tests failed. Please check the issues above.")
    Fixed:   print("\n[ERROR] Some tests failed. Please check the issues above.")


File: X:\Programs\agile-backlog-automation\tools\test_developer_parallel.py
===========================================================================
  Line 116: 🔍
    Current: print("\n🔍 Testing Developer Agent Direct Execution")
    Fixed:   print("\n[SEARCH] Testing Developer Agent Direct Execution")

  Line 127: 📋
    Current: print(f"📋 Testing with {len(user_stories)} user stories:")
    Fixed:   print(f"[CONFIG] Testing with {len(user_stories)} user stories:")

  Line 148: ✅
    Current: print(f"\n✅ Task generation completed in {duration:.2f} seconds")
    Fixed:   print(f"\n[SUCCESS] Task generation completed in {duration:.2f} seconds")

  Line 154: 📊
    Current: print(f"📊 Generated {total_tasks} tasks across {len(stories_with_tasks)} user stories")
    Fixed:   print(f"[STATS] Generated {total_tasks} tasks across {len(stories_with_tasks)} user stories")

  Line 169: ❌
    Current: print("❌ Unexpected result format")
    Fixed:   print("[ERROR] Unexpected result format")

  Line 173: ❌
    Current: print(f"❌ Error during task generation: {e}")
    Fixed:   print(f"[ERROR] Error during task generation: {e}")

  Line 181: 🔍
    Current: print("\n🔍 Testing Supervisor Workflow (Developer Stage)")
    Fixed:   print("\n[SEARCH] Testing Supervisor Workflow (Developer Stage)")

  Line 194: 📋
    Current: print(f"📋 Supervisor Configuration:")
    Fixed:   print(f"[CONFIG] Supervisor Configuration:")

  Line 213: ✅
    Current: print(f"\n✅ Developer agent stage completed in {duration:.2f} seconds")
    Fixed:   print(f"\n[SUCCESS] Developer agent stage completed in {duration:.2f} seconds")

  Line 225: 📊
    Current: print(f"\n📊 Total tasks generated: {total_tasks}")
    Fixed:   print(f"\n[STATS] Total tasks generated: {total_tasks}")

  Line 228: ✅
    Current: print("✅ Tasks were successfully generated")
    Fixed:   print("[SUCCESS] Tasks were successfully generated")

  Line 231: ❌
    Current: print("❌ No tasks were generated")
    Fixed:   print("[ERROR] No tasks were generated")

  Line 235: ❌
    Current: print(f"❌ Error during supervisor execution: {e}")
    Fixed:   print(f"[ERROR] Error during supervisor execution: {e}")

  Line 243: 📊
    Current: print("\n📊 System Resource Monitoring")
    Fixed:   print("\n[STATS] System Resource Monitoring")

  Line 272: 📋
    Current: print("\n📋 Log Analysis")
    Fixed:   print("\n[CONFIG] Log Analysis")

  Line 337: ✅
    Current: print(f"✅ {test_name} PASSED")
    Fixed:   print(f"[SUCCESS] {test_name} PASSED")

  Line 339: ❌
    Current: print(f"❌ {test_name} FAILED")
    Fixed:   print(f"[ERROR] {test_name} FAILED")

  Line 341: ❌
    Current: print(f"❌ {test_name} ERROR: {e}")
    Fixed:   print(f"[ERROR] {test_name} ERROR: {e}")

  Line 351: 📊
    Current: print(f"📊 Test Results: {passed}/{total} tests passed")
    Fixed:   print(f"[STATS] Test Results: {passed}/{total} tests passed")


File: X:\Programs\agile-backlog-automation\tools\test_epic_cross_domain.py
==========================================================================
  Line 72: ❌
    Current: print(f"❌ {response}")
    Fixed:   print(f"[ERROR] {response}")

  Line 79: ❌
    Current: print("❌ Response is not a JSON array")
    Fixed:   print("[ERROR] Response is not a JSON array")

  Line 82: ❌
    Current: print(f"❌ JSON parsing failed: {e}")
    Fixed:   print(f"[ERROR] JSON parsing failed: {e}")


File: X:\Programs\agile-backlog-automation\tools\test_epic_quality.py
=====================================================================
  Line 114: ❌
    Current: print(f"❌ {response}")
    Fixed:   print(f"[ERROR] {response}")

  Line 126: ❌
    Current: print("❌ Response is not a JSON array")
    Fixed:   print("[ERROR] Response is not a JSON array")

  Line 129: ❌
    Current: print(f"❌ JSON parsing failed: {e}")
    Fixed:   print(f"[ERROR] JSON parsing failed: {e}")

  Line 140: ❌
    Current: print("❌ Could not extract valid JSON")
    Fixed:   print("[ERROR] Could not extract valid JSON")

  Line 143: ❌
    Current: print("❌ No JSON array found in response")
    Fixed:   print("[ERROR] No JSON array found in response")

  Line 205: ✅
    Current: print("\n✅ SUCCESS: All epics are properly focused on warehouse asset surveillance!")
    Fixed:   print("\n[SUCCESS] SUCCESS: All epics are properly focused on warehouse asset surveillance!")

  Line 209: ❌
    Current: print("\n❌ FAILURE: Epics are not focused on warehouse asset surveillance!")
    Fixed:   print("\n[ERROR] FAILURE: Epics are not focused on warehouse asset surveillance!")

  Line 229: ❌
    Current: print(f"\n❌ ERROR during epic generation: {e}")
    Fixed:   print(f"\n[ERROR] ERROR during epic generation: {e}")


File: X:\Programs\agile-backlog-automation\tools\test_execution_time_tracking.py
================================================================================
  Line 55: ✅
    Current: print("   ✅ Execution time calculation working correctly")
    Fixed:   print("   [SUCCESS] Execution time calculation working correctly")

  Line 57: ❌
    Current: print("   ❌ Execution time calculation failed")
    Fixed:   print("   [ERROR] Execution time calculation failed")

  Line 105: ✅
    Current: print("   ✅ API server is running")
    Fixed:   print("   [SUCCESS] API server is running")

  Line 116: ✅
    Current: print("✅ Execution Time Tracking Test Completed")
    Fixed:   print("[SUCCESS] Execution Time Tracking Test Completed")

  Line 163: ✅
    Current: print("✅ Parallel Processing Metrics Test Completed")
    Fixed:   print("[SUCCESS] Parallel Processing Metrics Test Completed")

  Line 189: ✅
    Current: print("   ✅ Duration tracking accurate")
    Fixed:   print("   [SUCCESS] Duration tracking accurate")

  Line 206: ✅
    Current: print("   ✅ Supervisor timing working")
    Fixed:   print("   [SUCCESS] Supervisor timing working")

  Line 208: ❌
    Current: print("   ❌ Supervisor timing failed")
    Fixed:   print("   [ERROR] Supervisor timing failed")

  Line 211: ✅
    Current: print("✅ Execution Time Accuracy Test Completed")
    Fixed:   print("[SUCCESS] Execution Time Accuracy Test Completed")

  Line 225: 📊
    Current: print("📊 Test Summary")
    Fixed:   print("[STATS] Test Summary")

  Line 229: ✅
    Current: print("✅ Execution time tracking is working correctly")
    Fixed:   print("[SUCCESS] Execution time tracking is working correctly")

  Line 230: ✅
    Current: print("✅ Parallel processing metrics are available")
    Fixed:   print("[SUCCESS] Parallel processing metrics are available")

  Line 231: ✅
    Current: print("✅ System ready for performance measurement")
    Fixed:   print("[SUCCESS] System ready for performance measurement")

  Line 233: ❌
    Current: print("❌ Execution time tracking has issues")
    Fixed:   print("[ERROR] Execution time tracking has issues")


File: X:\Programs\agile-backlog-automation\tools\test_grok_connection.py
========================================================================
  Line 45: ✅
    Current: print("\n✅ Grok API connection successful!")
    Fixed:   print("\n[SUCCESS] Grok API connection successful!")

  Line 59: ✅
    Current: print("\n✅ Complex prompt test successful!")
    Fixed:   print("\n[SUCCESS] Complex prompt test successful!")

  Line 65: ❌
    Current: print(f"\n❌ Grok API test failed: {e}")
    Fixed:   print(f"\n[ERROR] Grok API test failed: {e}")


File: X:\Programs\agile-backlog-automation\tools\test_grok_simple.py
====================================================================
  Line 36: ✅
    Current: print("✅ Grok API connection successful!")
    Fixed:   print("[SUCCESS] Grok API connection successful!")

  Line 42: ❌
    Current: print(f"❌ Grok API test failed: {e}")
    Fixed:   print(f"[ERROR] Grok API test failed: {e}")


File: X:\Programs\agile-backlog-automation\tools\test_include_test_artifacts.py
===============================================================================
  Line 47: ❌
    Current: print(f"❌ Failed to start generation: {result}")
    Fixed:   print(f"[ERROR] Failed to start generation: {result}")

  Line 51: ✅
    Current: print(f"✅ Job started: {job_id}")
    Fixed:   print(f"[SUCCESS] Job started: {job_id}")

  Line 69: ❌
    Current: print(f"❌ ERROR: QA stage executed when includeTestArtifacts=False!")
    Fixed:   print(f"[ERROR] ERROR: QA stage executed when includeTestArtifacts=False!")

  Line 75: ✅
    Current: print(f"✅ Completed in {int(time.time() - start_time)} seconds")
    Fixed:   print(f"[SUCCESS] Completed in {int(time.time() - start_time)} seconds")

  Line 78: ❌
    Current: print(f"❌ Failed: {status_data.get('error', 'Unknown error')}")
    Fixed:   print(f"[ERROR] Failed: {status_data.get('error', 'Unknown error')}")

  Line 84: ❌
    Current: print(f"❌ Error: {str(e)}")
    Fixed:   print(f"[ERROR] Error: {str(e)}")

  Line 120: ❌
    Current: print(f"❌ Failed to start generation: {result}")
    Fixed:   print(f"[ERROR] Failed to start generation: {result}")

  Line 124: ✅
    Current: print(f"✅ Job started: {job_id}")
    Fixed:   print(f"[SUCCESS] Job started: {job_id}")

  Line 145: ✅
    Current: print(f"   ✅ QA stage detected (expected)")
    Fixed:   print(f"   [SUCCESS] QA stage detected (expected)")

  Line 151: ❌
    Current: print(f"❌ ERROR: QA stage NOT executed when includeTestArtifacts=True!")
    Fixed:   print(f"[ERROR] ERROR: QA stage NOT executed when includeTestArtifacts=True!")

  Line 153: ✅
    Current: print(f"✅ Completed in {int(time.time() - start_time)} seconds")
    Fixed:   print(f"[SUCCESS] Completed in {int(time.time() - start_time)} seconds")

  Line 156: ❌
    Current: print(f"❌ Failed: {status_data.get('error', 'Unknown error')}")
    Fixed:   print(f"[ERROR] Failed: {status_data.get('error', 'Unknown error')}")

  Line 162: ❌
    Current: print(f"❌ Error: {str(e)}")
    Fixed:   print(f"[ERROR] Error: {str(e)}")

  Line 181: ✅❌
    Current: print(f"  Without test artifacts: {'✅ PASSED' if test1_result else '❌ FAILED'}")
    Fixed:   print(f"  Without test artifacts: {'[SUCCESS] PASSED' if test1_result else '[ERROR] FAILED'}")

  Line 182: ✅❌
    Current: print(f"  With test artifacts: {'✅ PASSED' if test2_result else '❌ FAILED'}")
    Fixed:   print(f"  With test artifacts: {'[SUCCESS] PASSED' if test2_result else '[ERROR] FAILED'}")

  Line 185: ✅
    Current: print("\n✅ All tests passed! The includeTestArtifacts feature is working correctly.")
    Fixed:   print("\n[SUCCESS] All tests passed! The includeTestArtifacts feature is working correctly.")

  Line 188: ❌
    Current: print("\n❌ Some tests failed. Please check the implementation.")
    Fixed:   print("\n[ERROR] Some tests failed. Please check the implementation.")


File: X:\Programs\agile-backlog-automation\tools\test_issue_4_navigation_fix.py
===============================================================================
  Line 19: 🔍
    Current: print("🔍 Testing Issue #4 Navigation Fix")
    Fixed:   print("[SEARCH] Testing Issue #4 Navigation Fix")

  Line 49: ❌
    Current: print(f"❌ Project creation failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Project creation failed: {response.status_code}")

  Line 54: ✅
    Current: print(f"✅ Project created: {project_id}")
    Fixed:   print(f"[SUCCESS] Project created: {project_id}")

  Line 60: ❌
    Current: print(f"❌ Backlog generation failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Backlog generation failed: {response.status_code}")

  Line 65: ✅
    Current: print(f"✅ Backlog generation started: {job_id}")
    Fixed:   print(f"[SUCCESS] Backlog generation started: {job_id}")

  Line 73: ❌
    Current: print(f"❌ Job status check failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Job status check failed: {response.status_code}")

  Line 79: ✅
    Current: print(f"✅ Job status: {job_status['status']}")
    Fixed:   print(f"[SUCCESS] Job status: {job_status['status']}")

  Line 80: ✅
    Current: print(f"✅ Progress: {job_status['progress']}%")
    Fixed:   print(f"[SUCCESS] Progress: {job_status['progress']}%")

  Line 81: ✅
    Current: print(f"✅ Current action: {job_status['currentAction']}")
    Fixed:   print(f"[SUCCESS] Current action: {job_status['currentAction']}")

  Line 84: ✅
    Current: print("✅ Project creation API working")
    Fixed:   print("[SUCCESS] Project creation API working")

  Line 85: ✅
    Current: print("✅ Backlog generation API working")
    Fixed:   print("[SUCCESS] Backlog generation API working")

  Line 86: ✅
    Current: print("✅ Job status tracking working")
    Fixed:   print("[SUCCESS] Job status tracking working")

  Line 87: ✅
    Current: print("✅ Job info stored in localStorage (ready for My Projects screen)")
    Fixed:   print("[SUCCESS] Job info stored in localStorage (ready for My Projects screen)")

  Line 88: ✅
    Current: print("✅ Navigation should happen immediately after job creation")
    Fixed:   print("[SUCCESS] Navigation should happen immediately after job creation")

  Line 93: ❌
    Current: print(f"❌ Test failed with error: {e}")
    Fixed:   print(f"[ERROR] Test failed with error: {e}")

  Line 98: 🔍
    Current: print("\n🔍 Testing My Projects Screen Data Access")
    Fixed:   print("\n[SEARCH] Testing My Projects Screen Data Access")

  Line 103: 📋
    Current: print("📋 Checking all jobs endpoint...")
    Fixed:   print("[CONFIG] Checking all jobs endpoint...")

  Line 109: ✅
    Current: print(f"✅ Found {len(jobs)} active jobs")
    Fixed:   print(f"[SUCCESS] Found {len(jobs)} active jobs")

  Line 123: ✅
    Current: print(f"✅ Found {len(projects)} projects")
    Fixed:   print(f"[SUCCESS] Found {len(projects)} projects")

  Line 133: ❌
    Current: print(f"❌ My Projects screen test failed: {e}")
    Fixed:   print(f"[ERROR] My Projects screen test failed: {e}")

  Line 141: 🔍
    Current: print("🔍 Checking if server is running...")
    Fixed:   print("[SEARCH] Checking if server is running...")

  Line 145: ❌
    Current: print("❌ Server is not responding properly")
    Fixed:   print("[ERROR] Server is not responding properly")

  Line 150: ❌
    Current: print("❌ Cannot connect to server")
    Fixed:   print("[ERROR] Cannot connect to server")

  Line 155: ✅
    Current: print("✅ Server is running")
    Fixed:   print("[SUCCESS] Server is running")

  Line 171: ❌
    Current: print(f"❌ {test_name} test failed")
    Fixed:   print(f"[ERROR] {test_name} test failed")

  Line 173: ❌
    Current: print(f"❌ {test_name} test error: {e}")
    Fixed:   print(f"[ERROR] {test_name} test error: {e}")

  Line 176: 📊
    Current: print(f"📊 Test Results: {passed}/{total} tests passed")
    Fixed:   print(f"[STATS] Test Results: {passed}/{total} tests passed")

  Line 180: 📋
    Current: print("\n📋 Summary of Changes:")
    Fixed:   print("\n[CONFIG] Summary of Changes:")

  Line 181: ✅
    Current: print("✅ Removed progress bar from SimpleProjectWizard")
    Fixed:   print("[SUCCESS] Removed progress bar from SimpleProjectWizard")

  Line 182: ✅
    Current: print("✅ Immediate navigation to /projects after job creation")
    Fixed:   print("[SUCCESS] Immediate navigation to /projects after job creation")

  Line 183: ✅
    Current: print("✅ Job data stored in localStorage for My Projects screen")
    Fixed:   print("[SUCCESS] Job data stored in localStorage for My Projects screen")

  Line 184: ✅
    Current: print("✅ Progress tracking and logs now visible on My Projects screen")
    Fixed:   print("[SUCCESS] Progress tracking and logs now visible on My Projects screen")


File: X:\Programs\agile-backlog-automation\tools\test_issue_6_backlog_filtering.py
==================================================================================
  Line 19: 🔍
    Current: print("🔍 Testing Backlog Filtering")
    Fixed:   print("[SEARCH] Testing Backlog Filtering")

  Line 26: 📋
    Current: print("📋 Test 1: Getting jobs with default filtering...")
    Fixed:   print("[CONFIG] Test 1: Getting jobs with default filtering...")

  Line 36: ✅
    Current: print(f"✅ Found {len(jobs)} jobs with default filtering")
    Fixed:   print(f"[SUCCESS] Found {len(jobs)} jobs with default filtering")

  Line 46: ✅
    Current: print("✅ No test-generated jobs found (filtering working)")
    Fixed:   print("[SUCCESS] No test-generated jobs found (filtering working)")

  Line 55: ✅
    Current: print("✅ No failed jobs found (filtering working)")
    Fixed:   print("[SUCCESS] No failed jobs found (filtering working)")

  Line 58: ❌
    Current: print(f"❌ Failed to get jobs: {response.status_code}")
    Fixed:   print(f"[ERROR] Failed to get jobs: {response.status_code}")

  Line 62: 📋
    Current: print("\n📋 Test 2: Getting jobs without filtering...")
    Fixed:   print("\n[CONFIG] Test 2: Getting jobs without filtering...")

  Line 72: ✅
    Current: print(f"✅ Found {len(all_jobs)} total jobs without filtering")
    Fixed:   print(f"[SUCCESS] Found {len(all_jobs)} total jobs without filtering")

  Line 76: ✅
    Current: print(f"✅ Filtering removed {len(all_jobs) - len(jobs)} jobs")
    Fixed:   print(f"[SUCCESS] Filtering removed {len(all_jobs) - len(jobs)} jobs")

  Line 81: ❌
    Current: print(f"❌ Failed to get all jobs: {response.status_code}")
    Fixed:   print(f"[ERROR] Failed to get all jobs: {response.status_code}")

  Line 87: ❌
    Current: print(f"❌ Test failed with error: {e}")
    Fixed:   print(f"[ERROR] Test failed with error: {e}")

  Line 92: 🔍
    Current: print("\n🔍 Testing Backlog Deletion")
    Fixed:   print("\n[SEARCH] Testing Backlog Deletion")

  Line 107: ❌
    Current: print(f"❌ Failed to get jobs: {response.status_code}")
    Fixed:   print(f"[ERROR] Failed to get jobs: {response.status_code}")

  Line 127: ✅
    Current: print(f"✅ Job deleted successfully: {result['message']}")
    Fixed:   print(f"[SUCCESS] Job deleted successfully: {result['message']}")

  Line 142: ✅
    Current: print("✅ Job successfully removed from filtered list")
    Fixed:   print("[SUCCESS] Job successfully removed from filtered list")

  Line 147: ❌
    Current: print(f"❌ Failed to verify deletion: {verify_response.status_code}")
    Fixed:   print(f"[ERROR] Failed to verify deletion: {verify_response.status_code}")

  Line 151: ❌
    Current: print(f"❌ Failed to delete job: {delete_response.status_code}")
    Fixed:   print(f"[ERROR] Failed to delete job: {delete_response.status_code}")

  Line 157: ❌
    Current: print(f"❌ Deletion test failed with error: {e}")
    Fixed:   print(f"[ERROR] Deletion test failed with error: {e}")

  Line 162: 🔍
    Current: print("\n🔍 Testing Database Schema")
    Fixed:   print("\n[SEARCH] Testing Database Schema")

  Line 180: 📊
    Current: print("📊 Checking job schema...")
    Fixed:   print("[STATS] Checking job schema...")

  Line 191: ❌
    Current: print(f"❌ Missing fields: {missing_fields}")
    Fixed:   print(f"[ERROR] Missing fields: {missing_fields}")

  Line 194: ✅
    Current: print("✅ All required fields present in schema")
    Fixed:   print("[SUCCESS] All required fields present in schema")

  Line 202: ❌
    Current: print(f"❌ Failed to get jobs for schema test: {response.status_code}")
    Fixed:   print(f"[ERROR] Failed to get jobs for schema test: {response.status_code}")

  Line 206: ❌
    Current: print(f"❌ Schema test failed with error: {e}")
    Fixed:   print(f"[ERROR] Schema test failed with error: {e}")

  Line 217: 🔍
    Current: print("🔍 Checking if server is running...")
    Fixed:   print("[SEARCH] Checking if server is running...")

  Line 221: ❌
    Current: print("❌ Server is not responding properly")
    Fixed:   print("[ERROR] Server is not responding properly")

  Line 226: ❌
    Current: print("❌ Cannot connect to server")
    Fixed:   print("[ERROR] Cannot connect to server")

  Line 231: ✅
    Current: print("✅ Server is running")
    Fixed:   print("[SUCCESS] Server is running")

  Line 248: ❌
    Current: print(f"❌ {test_name} test failed")
    Fixed:   print(f"[ERROR] {test_name} test failed")

  Line 250: ❌
    Current: print(f"❌ {test_name} test error: {e}")
    Fixed:   print(f"[ERROR] {test_name} test error: {e}")

  Line 253: 📊
    Current: print(f"📊 Test Results: {passed}/{total} tests passed")
    Fixed:   print(f"[STATS] Test Results: {passed}/{total} tests passed")

  Line 257: 📋
    Current: print("\n📋 Summary of Changes:")
    Fixed:   print("\n[CONFIG] Summary of Changes:")

  Line 258: ✅
    Current: print("✅ Database schema updated with status and is_deleted fields")
    Fixed:   print("[SUCCESS] Database schema updated with status and is_deleted fields")

  Line 259: ✅
    Current: print("✅ Test-generated backlogs automatically filtered out")
    Fixed:   print("[SUCCESS] Test-generated backlogs automatically filtered out")

  Line 260: ✅
    Current: print("✅ Failed backlogs automatically filtered out")
    Fixed:   print("[SUCCESS] Failed backlogs automatically filtered out")

  Line 261: ✅
    Current: print("✅ Soft delete functionality implemented")
    Fixed:   print("[SUCCESS] Soft delete functionality implemented")

  Line 262: ✅
    Current: print("✅ Frontend updated with delete buttons")
    Fixed:   print("[SUCCESS] Frontend updated with delete buttons")

  Line 263: ✅
    Current: print("✅ Filtering options available in API")
    Fixed:   print("[SUCCESS] Filtering options available in API")


File: X:\Programs\agile-backlog-automation\tools\test_llm_config_database.py
============================================================================
  Line 95: ✅
    Current: print("\n✅ LLM Configuration Database Test Complete!")
    Fixed:   print("\n[SUCCESS] LLM Configuration Database Test Complete!")

  Line 177: ✅
    Current: print("\n✅ LLM Configuration API Test Complete!")
    Fixed:   print("\n[SUCCESS] LLM Configuration API Test Complete!")


File: X:\Programs\agile-backlog-automation\tools\test_llm_config_integration.py
===============================================================================
  Line 29: ✅
    Current: print(f"   ✅ Active config: {config['name']} ({config['provider']})")
    Fixed:   print(f"   [SUCCESS] Active config: {config['name']} ({config['provider']})")

  Line 34: ❌
    Current: print(f"   ❌ Error: {e}")
    Fixed:   print(f"   [ERROR] Error: {e}")

  Line 40: ✅
    Current: print(f"   ✅ Provider: {provider_config['provider']}")
    Fixed:   print(f"   [SUCCESS] Provider: {provider_config['provider']}")

  Line 48: ❌
    Current: print(f"   ❌ Error: {e}")
    Fixed:   print(f"   [ERROR] Error: {e}")

  Line 54: ✅
    Current: print(f"   ✅ Environment variables:")
    Fixed:   print(f"   [SUCCESS] Environment variables:")

  Line 61: ❌
    Current: print(f"   ❌ Error: {e}")
    Fixed:   print(f"   [ERROR] Error: {e}")

  Line 65: 🤖
    Current: print("\n🤖 Testing Agent Integration")
    Fixed:   print("\n[AI] Testing Agent Integration")

  Line 75: ✅
    Current: print(f"   ✅ Agent created: {agent.name}")
    Fixed:   print(f"   [SUCCESS] Agent created: {agent.name}")

  Line 83: ✅❌
    Current: print(f"   Ollama Provider: {'✅ Available' if hasattr(agent, 'ollama_provider') else '❌ Not available'}")
    Fixed:   print(f"   Ollama Provider: {'[SUCCESS] Available' if hasattr(agent, 'ollama_provider') else '[ERROR] Not available'}")

  Line 86: ✅❌
    Current: print(f"   API Key: {'✅ Set' if agent.api_key else '❌ Not set'}")
    Fixed:   print(f"   API Key: {'[SUCCESS] Set' if agent.api_key else '[ERROR] Not set'}")

  Line 92: ✅
    Current: print(f"   ✅ Prompt generated: {len(prompt)} characters")
    Fixed:   print(f"   [SUCCESS] Prompt generated: {len(prompt)} characters")

  Line 99: ❌
    Current: print(f"   ❌ Agent integration failed: {e}")
    Fixed:   print(f"   [ERROR] Agent integration failed: {e}")

  Line 104: 🔄
    Current: print("\n🔄 Testing Configuration Switching")
    Fixed:   print("\n[RETRY] Testing Configuration Switching")

  Line 121: ❌
    Current: print(f"   ❌ Error: {e}")
    Fixed:   print(f"   [ERROR] Error: {e}")

  Line 136: ❌
    Current: print(f"   ❌ Error: {e}")
    Fixed:   print(f"   [ERROR] Error: {e}")

  Line 154: ✅
    Current: print(f"   ✅ Successfully switched to {target_config['name']}")
    Fixed:   print(f"   [SUCCESS] Successfully switched to {target_config['name']}")

  Line 163: ✅
    Current: print(f"   ✅ Switched back to {original_config}")
    Fixed:   print(f"   [SUCCESS] Switched back to {original_config}")

  Line 165: ❌
    Current: print(f"   ❌ Failed to switch configuration")
    Fixed:   print(f"   [ERROR] Failed to switch configuration")

  Line 171: ❌
    Current: print(f"   ❌ Error: {e}")
    Fixed:   print(f"   [ERROR] Error: {e}")


File: X:\Programs\agile-backlog-automation\tools\test_lm_studio_epic.py
=======================================================================
  Line 203: 🔄
    Current: print("🔄 Sending request to LM Studio...")
    Fixed:   print("[RETRY] Sending request to LM Studio...")

  Line 217: ✅
    Current: print("✅ Success! Response received:")
    Fixed:   print("[SUCCESS] Success! Response received:")

  Line 225: 📊
    Current: print(f"📊 Generated {len(epics)} epics")
    Fixed:   print(f"[STATS] Generated {len(epics)} epics")

  Line 233: ❌
    Current: print(f"❌ Error: HTTP {response.status_code}")
    Fixed:   print(f"[ERROR] Error: HTTP {response.status_code}")

  Line 237: ❌
    Current: print("❌ Request timed out after 5 minutes")
    Fixed:   print("[ERROR] Request timed out after 5 minutes")

  Line 239: ❌
    Current: print("❌ Connection error. Make sure LM Studio server is running on port 1234")
    Fixed:   print("[ERROR] Connection error. Make sure LM Studio server is running on port 1234")

  Line 241: ❌
    Current: print(f"❌ Unexpected error: {e}")
    Fixed:   print(f"[ERROR] Unexpected error: {e}")


File: X:\Programs\agile-backlog-automation\tools\test_lm_studio_feature.py
==========================================================================
  Line 138: 🔄
    Current: print("🔄 Sending request to LM Studio...")
    Fixed:   print("[RETRY] Sending request to LM Studio...")

  Line 152: ✅
    Current: print("✅ Success! Response received:")
    Fixed:   print("[SUCCESS] Success! Response received:")

  Line 160: 📊
    Current: print(f"📊 Generated {len(features)} features")
    Fixed:   print(f"[STATS] Generated {len(features)} features")

  Line 168: ❌
    Current: print(f"❌ Error: HTTP {response.status_code}")
    Fixed:   print(f"[ERROR] Error: HTTP {response.status_code}")

  Line 172: ❌
    Current: print("❌ Request timed out after 5 minutes")
    Fixed:   print("[ERROR] Request timed out after 5 minutes")

  Line 174: ❌
    Current: print("❌ Connection error. Make sure LM Studio server is running on port 1234")
    Fixed:   print("[ERROR] Connection error. Make sure LM Studio server is running on port 1234")

  Line 176: ❌
    Current: print(f"❌ Unexpected error: {e}")
    Fixed:   print(f"[ERROR] Unexpected error: {e}")


File: X:\Programs\agile-backlog-automation\tools\test_lm_studio_performance.py
==============================================================================
  Line 66: ✅
    Current: print(f"✅ Success!")
    Fixed:   print(f"[SUCCESS] Success!")

  Line 68: 📊
    Current: print(f"📊 Tokens generated: {tokens_used}")
    Fixed:   print(f"[STATS] Tokens generated: {tokens_used}")

  Line 72: ❌
    Current: print(f"❌ Error: HTTP {response.status_code}")
    Fixed:   print(f"[ERROR] Error: HTTP {response.status_code}")

  Line 76: ❌
    Current: print(f"❌ Error: {e}")
    Fixed:   print(f"[ERROR] Error: {e}")


File: X:\Programs\agile-backlog-automation\tools\test_lm_studio_simple.py
=========================================================================
  Line 42: 🔄
    Current: print("🔄 Sending simple request to LM Studio...")
    Fixed:   print("[RETRY] Sending simple request to LM Studio...")

  Line 56: ✅
    Current: print("✅ Success! Response received:")
    Fixed:   print("[SUCCESS] Success! Response received:")

  Line 62: ❌
    Current: print(f"❌ Error: HTTP {response.status_code}")
    Fixed:   print(f"[ERROR] Error: HTTP {response.status_code}")

  Line 66: ❌
    Current: print("❌ Request timed out after 2 minutes")
    Fixed:   print("[ERROR] Request timed out after 2 minutes")

  Line 68: ❌
    Current: print("❌ Connection error. Make sure LM Studio server is running on port 1234")
    Fixed:   print("[ERROR] Connection error. Make sure LM Studio server is running on port 1234")

  Line 70: ❌
    Current: print(f"❌ Unexpected error: {e}")
    Fixed:   print(f"[ERROR] Unexpected error: {e}")


File: X:\Programs\agile-backlog-automation\tools\test_ollama_api.py
===================================================================
  Line 21: ✅
    Current: print("✅ Endpoint working!")
    Fixed:   print("[SUCCESS] Endpoint working!")

  Line 22: 📊
    Current: print(f"📊 Response: {json.dumps(data, indent=2)}")
    Fixed:   print(f"[STATS] Response: {json.dumps(data, indent=2)}")

  Line 32: ❌
    Current: print(f"❌ Endpoint failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Endpoint failed: {response.status_code}")

  Line 36: ❌
    Current: print("❌ Could not connect to server. Make sure the API server is running.")
    Fixed:   print("[ERROR] Could not connect to server. Make sure the API server is running.")

  Line 38: ❌
    Current: print(f"❌ Error: {e}")
    Fixed:   print(f"[ERROR] Error: {e}")

  Line 51: ✅
    Current: print("✅ Config endpoint working!")
    Fixed:   print("[SUCCESS] Config endpoint working!")

  Line 52: 📊
    Current: print(f"📊 Current LLM Provider: {data.get('llmProvider', 'Not set')}")
    Fixed:   print(f"[STATS] Current LLM Provider: {data.get('llmProvider', 'Not set')}")

  Line 53: 📊
    Current: print(f"📊 Ollama Model: {data.get('ollamaModel', 'Not set')}")
    Fixed:   print(f"[STATS] Ollama Model: {data.get('ollamaModel', 'Not set')}")

  Line 54: 📊
    Current: print(f"📊 Ollama URL: {data.get('ollamaUrl', 'Not set')}")
    Fixed:   print(f"[STATS] Ollama URL: {data.get('ollamaUrl', 'Not set')}")

  Line 55: 📊
    Current: print(f"📊 Ollama Preset: {data.get('ollamaPreset', 'Not set')}")
    Fixed:   print(f"[STATS] Ollama Preset: {data.get('ollamaPreset', 'Not set')}")

  Line 58: ❌
    Current: print(f"❌ Config endpoint failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Config endpoint failed: {response.status_code}")

  Line 62: ❌
    Current: print("❌ Could not connect to server. Make sure the API server is running.")
    Fixed:   print("[ERROR] Could not connect to server. Make sure the API server is running.")

  Line 64: ❌
    Current: print(f"❌ Error: {e}")
    Fixed:   print(f"[ERROR] Error: {e}")

  Line 88: ✅
    Current: print("✅ Config saved successfully!")
    Fixed:   print("[SUCCESS] Config saved successfully!")

  Line 89: 📊
    Current: print(f"📊 Response: {json.dumps(data, indent=2)}")
    Fixed:   print(f"[STATS] Response: {json.dumps(data, indent=2)}")

  Line 92: ❌
    Current: print(f"❌ Save config failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Save config failed: {response.status_code}")

  Line 96: ❌
    Current: print("❌ Could not connect to server. Make sure the API server is running.")
    Fixed:   print("[ERROR] Could not connect to server. Make sure the API server is running.")

  Line 98: ❌
    Current: print(f"❌ Error: {e}")
    Fixed:   print(f"[ERROR] Error: {e}")

  Line 114: ✅
    Current: print("✅ Test completed!")
    Fixed:   print("[SUCCESS] Test completed!")


File: X:\Programs\agile-backlog-automation\tools\test_ollama_integration.py
===========================================================================
  Line 22: 🔍
    Current: print("🔍 Testing Ollama connection...")
    Fixed:   print("[SEARCH] Testing Ollama connection...")

  Line 27: ✅
    Current: print(f"✅ Connected to Ollama server")
    Fixed:   print(f"[SUCCESS] Connected to Ollama server")

  Line 28: 📦
    Current: print(f"📦 Available models: {[m['name'] for m in models]}")
    Fixed:   print(f"[PACKAGE] Available models: {[m['name'] for m in models]}")

  Line 31: ❌
    Current: print(f"❌ Failed to connect to Ollama: {e}")
    Fixed:   print(f"[ERROR] Failed to connect to Ollama: {e}")

  Line 57: ✅
    Current: print(f"✅ {preset} preset working")
    Fixed:   print(f"[SUCCESS] {preset} preset working")

  Line 61: ❌
    Current: print(f"❌ {preset} preset failed: {e}")
    Fixed:   print(f"[ERROR] {preset} preset failed: {e}")

  Line 65: 🤖
    Current: print("\n🤖 Testing agent integration...")
    Fixed:   print("\n[AI] Testing agent integration...")

  Line 79: ✅
    Current: print(f"✅ Agent initialized with provider: {agent.llm_provider}")
    Fixed:   print(f"[SUCCESS] Agent initialized with provider: {agent.llm_provider}")

  Line 85: ✅
    Current: print(f"✅ Agent generation successful")
    Fixed:   print(f"[SUCCESS] Agent generation successful")

  Line 89: ❌
    Current: print(f"❌ Agent integration failed: {e}")
    Fixed:   print(f"[ERROR] Agent integration failed: {e}")

  Line 93: 💰
    Current: print("\n💰 Testing cost estimation...")
    Fixed:   print("\n[COST] Testing cost estimation...")

  Line 103: 📊
    Current: print(f"📊 {tokens} tokens: ${cost['total_cost']:.4f}")
    Fixed:   print(f"[STATS] {tokens} tokens: ${cost['total_cost']:.4f}")

  Line 108: ❌
    Current: print(f"❌ Cost estimation failed: {e}")
    Fixed:   print(f"[ERROR] Cost estimation failed: {e}")

  Line 112: 📥
    Current: print("\n📥 Testing model download...")
    Fixed:   print("\n[DOWNLOAD] Testing model download...")

  Line 119: 📥
    Current: print(f"📥 Attempting to pull {model_name}...")
    Fixed:   print(f"[DOWNLOAD] Attempting to pull {model_name}...")

  Line 123: ✅
    Current: print(f"✅ Successfully pulled {model_name}")
    Fixed:   print(f"[SUCCESS] Successfully pulled {model_name}")

  Line 125: ❌
    Current: print(f"❌ Failed to pull {model_name}")
    Fixed:   print(f"[ERROR] Failed to pull {model_name}")

  Line 128: ❌
    Current: print(f"❌ Model download test failed: {e}")
    Fixed:   print(f"[ERROR] Model download test failed: {e}")

  Line 137: ❌
    Current: print("\n❌ Cannot proceed without Ollama connection")
    Fixed:   print("\n[ERROR] Cannot proceed without Ollama connection")

  Line 153: ✅
    Current: print("✅ Ollama integration test suite completed!")
    Fixed:   print("[SUCCESS] Ollama integration test suite completed!")


File: X:\Programs\agile-backlog-automation\tools\test_parallel_processing.py
============================================================================
  Line 18: 🔍
    Current: print("🔍 Testing Parallel Configuration Loading")
    Fixed:   print("[SEARCH] Testing Parallel Configuration Loading")

  Line 25: ✅
    Current: print("✅ Server is running and can load configuration")
    Fixed:   print("[SUCCESS] Server is running and can load configuration")

  Line 28: ❌
    Current: print(f"❌ Server health check failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Server health check failed: {response.status_code}")

  Line 31: ❌
    Current: print(f"❌ Cannot connect to server: {e}")
    Fixed:   print(f"[ERROR] Cannot connect to server: {e}")

  Line 36: 🔍
    Current: print("\n🔍 Testing Parallel Processing with Small Project")
    Fixed:   print("\n[SEARCH] Testing Parallel Processing with Small Project")

  Line 59: 📋
    Current: print("📋 Creating test project...")
    Fixed:   print("[CONFIG] Creating test project...")

  Line 62: ❌
    Current: print(f"❌ Failed to create project: {response.status_code}")
    Fixed:   print(f"[ERROR] Failed to create project: {response.status_code}")

  Line 68: ❌
    Current: print("❌ No project ID returned")
    Fixed:   print("[ERROR] No project ID returned")

  Line 71: ✅
    Current: print(f"✅ Project created with ID: {project_id}")
    Fixed:   print(f"[SUCCESS] Project created with ID: {project_id}")

  Line 77: ❌
    Current: print(f"❌ Failed to start backlog generation: {response.status_code}")
    Fixed:   print(f"[ERROR] Failed to start backlog generation: {response.status_code}")

  Line 83: ❌
    Current: print("❌ No job ID returned")
    Fixed:   print("[ERROR] No job ID returned")

  Line 86: ✅
    Current: print(f"✅ Backlog generation started with job ID: {job_id}")
    Fixed:   print(f"[SUCCESS] Backlog generation started with job ID: {job_id}")

  Line 89: 📊
    Current: print("📊 Monitoring job progress...")
    Fixed:   print("[STATS] Monitoring job progress...")

  Line 104: ✅
    Current: print("✅ Backlog generation completed successfully!")
    Fixed:   print("[SUCCESS] Backlog generation completed successfully!")

  Line 108: ❌
    Current: print(f"❌ Backlog generation failed: {error}")
    Fixed:   print(f"[ERROR] Backlog generation failed: {error}")

  Line 113: ❌
    Current: print(f"❌ Failed to get job status: {response.status_code}")
    Fixed:   print(f"[ERROR] Failed to get job status: {response.status_code}")

  Line 120: ❌
    Current: print(f"❌ Test failed with error: {e}")
    Fixed:   print(f"[ERROR] Test failed with error: {e}")

  Line 125: 🔍
    Current: print("\n🔍 Testing QA Parallel Processing")
    Fixed:   print("\n[SEARCH] Testing QA Parallel Processing")

  Line 132: ❌
    Current: print(f"❌ Failed to get projects: {response.status_code}")
    Fixed:   print(f"[ERROR] Failed to get projects: {response.status_code}")

  Line 144: 📋
    Current: print(f"📋 Testing QA parallel processing with project: {project['basics']['name']}")
    Fixed:   print(f"[CONFIG] Testing QA parallel processing with project: {project['basics']['name']}")

  Line 158: ✅
    Current: print("✅ QA generation started successfully")
    Fixed:   print("[SUCCESS] QA generation started successfully")

  Line 161: ❌
    Current: print(f"❌ Failed to start QA generation: {response.status_code}")
    Fixed:   print(f"[ERROR] Failed to start QA generation: {response.status_code}")

  Line 165: ❌
    Current: print(f"❌ QA test failed with error: {e}")
    Fixed:   print(f"[ERROR] QA test failed with error: {e}")

  Line 170: 🔍
    Current: print("\n🔍 Testing Parallel Configuration Validation")
    Fixed:   print("\n[SEARCH] Testing Parallel Configuration Validation")

  Line 181: 📋
    Current: print("📋 Parallel Processing Configuration:")
    Fixed:   print("[CONFIG] Parallel Processing Configuration:")

  Line 193: ✅
    Current: print("✅ Parallel processing is enabled")
    Fixed:   print("[SUCCESS] Parallel processing is enabled")

  Line 199: ✅
    Current: print(f"✅ Max workers is reasonable: {max_workers}")
    Fixed:   print(f"[SUCCESS] Max workers is reasonable: {max_workers}")

  Line 206: ❌
    Current: print(f"❌ Configuration validation failed: {e}")
    Fixed:   print(f"[ERROR] Configuration validation failed: {e}")

  Line 217: 🔍
    Current: print("🔍 Checking if server is running...")
    Fixed:   print("[SEARCH] Checking if server is running...")

  Line 221: ❌
    Current: print("❌ Server is not responding properly")
    Fixed:   print("[ERROR] Server is not responding properly")

  Line 226: ❌
    Current: print("❌ Cannot connect to server")
    Fixed:   print("[ERROR] Cannot connect to server")

  Line 231: ✅
    Current: print("✅ Server is running")
    Fixed:   print("[SUCCESS] Server is running")

  Line 249: ❌
    Current: print(f"❌ {test_name} test failed")
    Fixed:   print(f"[ERROR] {test_name} test failed")

  Line 251: ❌
    Current: print(f"❌ {test_name} test error: {e}")
    Fixed:   print(f"[ERROR] {test_name} test error: {e}")

  Line 254: 📊
    Current: print(f"📊 Test Results: {passed}/{total} tests passed")
    Fixed:   print(f"[STATS] Test Results: {passed}/{total} tests passed")

  Line 258: 📋
    Current: print("\n📋 Summary of Parallel Processing Features:")
    Fixed:   print("\n[CONFIG] Summary of Parallel Processing Features:")

  Line 259: ✅
    Current: print("✅ Configuration loading and validation")
    Fixed:   print("[SUCCESS] Configuration loading and validation")

  Line 260: ✅
    Current: print("✅ Intra-stage parallelization for feature decomposition")
    Fixed:   print("[SUCCESS] Intra-stage parallelization for feature decomposition")

  Line 261: ✅
    Current: print("✅ Intra-stage parallelization for user story decomposition")
    Fixed:   print("[SUCCESS] Intra-stage parallelization for user story decomposition")

  Line 262: ✅
    Current: print("✅ Intra-stage parallelization for task generation")
    Fixed:   print("[SUCCESS] Intra-stage parallelization for task generation")

  Line 263: ✅
    Current: print("✅ Intra-stage parallelization for QA generation")
    Fixed:   print("[SUCCESS] Intra-stage parallelization for QA generation")

  Line 264: ✅
    Current: print("✅ QA sub-agent parallel processing (test suites and test cases)")
    Fixed:   print("[SUCCESS] QA sub-agent parallel processing (test suites and test cases)")

  Line 265: ✅
    Current: print("✅ Configurable parallel processing settings")
    Fixed:   print("[SUCCESS] Configurable parallel processing settings")

  Line 266: ✅
    Current: print("✅ Backward compatibility with sequential processing")
    Fixed:   print("[SUCCESS] Backward compatibility with sequential processing")


File: X:\Programs\agile-backlog-automation\tools\test_parallel_vs_sequential.py
===============================================================================
  Line 18: 🔄
    Current: print(f"🔄 Starting task generation for Story {story_id} at {start_time:.2f}")
    Fixed:   print(f"[RETRY] Starting task generation for Story {story_id} at {start_time:.2f}")

  Line 25: ✅
    Current: print(f"✅ Completed task generation for Story {story_id} at {end_time:.2f} (took {duration:.2f}s)")
    Fixed:   print(f"[SUCCESS] Completed task generation for Story {story_id} at {end_time:.2f} (took {duration:.2f}s)")

  Line 42: 📊
    Current: print(f"\n📊 Sequential Results:")
    Fixed:   print(f"\n[STATS] Sequential Results:")

  Line 69: 📊
    Current: print(f"\n📊 Parallel Results:")
    Fixed:   print(f"\n[STATS] Parallel Results:")

  Line 78: 📋
    Current: print("\n📋 ANALYZING YOUR ACTUAL LOGS")
    Fixed:   print("\n[CONFIG] ANALYZING YOUR ACTUAL LOGS")

  Line 91: 📊
    Current: print("📊 Your Recent Backlog Generation Stats:")
    Fixed:   print("[STATS] Your Recent Backlog Generation Stats:")

  Line 95: 🔍
    Current: print(f"\n🔍 Analysis:")
    Fixed:   print(f"\n[SEARCH] Analysis:")

  Line 96: ✅
    Current: print(f"   ✅ You had {stats['user_stories_generated']} user stories (>1)")
    Fixed:   print(f"   [SUCCESS] You had {stats['user_stories_generated']} user stories (>1)")

  Line 97: ✅
    Current: print(f"   ✅ Parallel processing WAS enabled")
    Fixed:   print(f"   [SUCCESS] Parallel processing WAS enabled")

  Line 98: ✅
    Current: print(f"   ✅ Generated {stats['tasks_generated']} tasks")
    Fixed:   print(f"   [SUCCESS] Generated {stats['tasks_generated']} tasks")

  Line 99: ✅
    Current: print(f"   ✅ Total execution time: {stats['execution_time_seconds']/60:.1f} minutes")
    Fixed:   print(f"   [SUCCESS] Total execution time: {stats['execution_time_seconds']/60:.1f} minutes")


File: X:\Programs\agile-backlog-automation\tools\test_parent_finding.py
=======================================================================
  Line 20: 🔍
    Current: print("🔍 Testing Parent Finding Logic for Orphaned Work Items")
    Fixed:   print("[SEARCH] Testing Parent Finding Logic for Orphaned Work Items")

  Line 34: 🔧
    Current: print("🔧 Initializing Azure DevOps Integrator...")
    Fixed:   print("[TOOL] Initializing Azure DevOps Integrator...")

  Line 42: ✅
    Current: print("✅ Azure DevOps Integrator initialized successfully")
    Fixed:   print("[SUCCESS] Azure DevOps Integrator initialized successfully")

  Line 45: 📋
    Current: print("\n📋 Test 1: Finding Orphaned Test Cases")
    Fixed:   print("\n[CONFIG] Test 1: Finding Orphaned Test Cases")

  Line 59: 🔍
    Current: print(f"\n🔍 Analyzing Test Case {test_case_id}: {test_case_title}")
    Fixed:   print(f"\n[SEARCH] Analyzing Test Case {test_case_id}: {test_case_title}")

  Line 67: ✅
    Current: print(f"  ✅ Has parent: {parent_title} (ID: {parent['id']})")
    Fixed:   print(f"  [SUCCESS] Has parent: {parent_title} (ID: {parent['id']})")

  Line 69: ❌
    Current: print(f"  ❌ Orphaned - no parent found")
    Fixed:   print(f"  [ERROR] Orphaned - no parent found")

  Line 72: 🔍
    Current: print("  🔍 Finding potential parents...")
    Fixed:   print("  [SEARCH] Finding potential parents...")

  Line 92: 📋
    Current: print("\n📋 Test 4: Testing Different Search Strategies")
    Fixed:   print("\n[CONFIG] Test 4: Testing Different Search Strategies")

  Line 102: 🔍
    Current: print(f"\n🔍 Strategy: {strategy}")
    Fixed:   print(f"\n[SEARCH] Strategy: {strategy}")

  Line 115: 📋
    Current: print("\n📋 Test 5: Testing Parent Type Mapping")
    Fixed:   print("\n[CONFIG] Test 5: Testing Parent Type Mapping")

  Line 123: ✅
    Current: print("\n✅ Parent finding logic test completed successfully!")
    Fixed:   print("\n[SUCCESS] Parent finding logic test completed successfully!")

  Line 126: ❌
    Current: print(f"❌ Error during testing: {e}")
    Fixed:   print(f"[ERROR] Error during testing: {e}")


File: X:\Programs\agile-backlog-automation\tools\test_parent_use_cases.py
=========================================================================
  Line 22: 🔍
    Current: print("🔍 Test 1: Parent Detection for Agent Context")
    Fixed:   print("[SEARCH] Test 1: Parent Detection for Agent Context")

  Line 55: 📋
    Current: print(f"📋 Test Case: {test_case_title} (ID: {test_case_id})")
    Fixed:   print(f"[CONFIG] Test Case: {test_case_title} (ID: {test_case_id})")

  Line 68: 🤖
    Current: print("\n🤖 Agent Context Usage:")
    Fixed:   print("\n[AI] Agent Context Usage:")

  Line 74: ❌
    Current: print("❌ No parent found - agent would have limited context")
    Fixed:   print("[ERROR] No parent found - agent would have limited context")

  Line 76: ✅
    Current: print("\n✅ Parent detection for agent context test completed")
    Fixed:   print("\n[SUCCESS] Parent detection for agent context test completed")

  Line 79: ❌
    Current: print(f"❌ Error: {e}")
    Fixed:   print(f"[ERROR] Error: {e}")

  Line 84: 🔧
    Current: print("\n🔧 Test 2: Orphaned Work Item Restoration from History")
    Fixed:   print("\n[TOOL] Test 2: Orphaned Work Item Restoration from History")

  Line 112: 🔍
    Current: print("🔍 Finding truly orphaned test cases...")
    Fixed:   print("[SEARCH] Finding truly orphaned test cases...")

  Line 126: 📋
    Current: print(f"\n📋 Orphaned Test Case: {orphaned_title} (ID: {orphaned_id})")
    Fixed:   print(f"\n[CONFIG] Orphaned Test Case: {orphaned_title} (ID: {orphaned_id})")

  Line 129: 🔍
    Current: print("🔍 Searching for original parent in history...")
    Fixed:   print("[SEARCH] Searching for original parent in history...")

  Line 134: ✅
    Current: print(f"✅ Found original parent: {original_parent_title} (ID: {original_parent['id']})")
    Fixed:   print(f"[SUCCESS] Found original parent: {original_parent_title} (ID: {original_parent['id']})")

  Line 137: 🔍
    Current: print("🔍 Searching for last parent in history...")
    Fixed:   print("[SEARCH] Searching for last parent in history...")

  Line 142: ✅
    Current: print(f"✅ Found last parent: {last_parent_title} (ID: {last_parent['id']})")
    Fixed:   print(f"[SUCCESS] Found last parent: {last_parent_title} (ID: {last_parent['id']})")

  Line 146: 📊
    Current: print("📊 Original and last parent are the same")
    Fixed:   print("[STATS] Original and last parent are the same")

  Line 148: 📊
    Current: print("📊 Original and last parent are different")
    Fixed:   print("[STATS] Original and last parent are different")

  Line 159: ❌
    Current: print("❌ No parent found in history")
    Fixed:   print("[ERROR] No parent found in history")

  Line 164: ✅
    Current: print("\n✅ Orphaned work item restoration test completed")
    Fixed:   print("\n[SUCCESS] Orphaned work item restoration test completed")

  Line 167: ❌
    Current: print(f"❌ Error: {e}")
    Fixed:   print(f"[ERROR] Error: {e}")

  Line 172: 🤖
    Current: print("\n🤖 Agent Usage Demonstration")
    Fixed:   print("\n[AI] Agent Usage Demonstration")

  Line 176: 📋
    Current: 📋 Use Case 1: QA Lead Agent Generating Test Cases
    Fixed:   [CONFIG] Use Case 1: QA Lead Agent Generating Test Cases

  Line 184: 📋
    Current: 📋 Use Case 2: User Story Decomposer Agent
    Fixed:   [CONFIG] Use Case 2: User Story Decomposer Agent

  Line 192: 📋
    Current: 📋 Use Case 3: Feature Decomposer Agent
    Fixed:   [CONFIG] Use Case 3: Feature Decomposer Agent

  Line 209: ✅
    Current: print("✅ Parent detection for agent context - working")
    Fixed:   print("[SUCCESS] Parent detection for agent context - working")

  Line 210: ✅
    Current: print("✅ Orphaned work item restoration from history - implemented")
    Fixed:   print("[SUCCESS] Orphaned work item restoration from history - implemented")

  Line 211: ✅
    Current: print("✅ Both use cases are now properly separated and implemented")
    Fixed:   print("[SUCCESS] Both use cases are now properly separated and implemented")


File: X:\Programs\agile-backlog-automation\tools\test_progress_and_logs.py
==========================================================================
  Line 24: ✅
    Current: print("✅ WebSocket connected successfully!")
    Fixed:   print("[SUCCESS] WebSocket connected successfully!")

  Line 32: 📤
    Current: print("📤 Sent test message")
    Fixed:   print("[REQUEST] Sent test message")

  Line 43: 📥
    Current: print(f"📥 Received message {message_count}: {message}")
    Fixed:   print(f"[DOWNLOAD] Received message {message_count}: {message}")

  Line 47: ❌
    Current: print(f"❌ Error receiving message: {e}")
    Fixed:   print(f"[ERROR] Error receiving message: {e}")

  Line 50: 📊
    Current: print(f"📊 Received {message_count} messages in 10 seconds")
    Fixed:   print(f"[STATS] Received {message_count} messages in 10 seconds")

  Line 53: ❌
    Current: print(f"❌ WebSocket connection failed: {e}")
    Fixed:   print(f"[ERROR] WebSocket connection failed: {e}")

  Line 58: 📊
    Current: print("\n📊 Testing Progress Updates")
    Fixed:   print("\n[STATS] Testing Progress Updates")

  Line 97: ✅
    Current: print(f"✅ Project created: {project_id}")
    Fixed:   print(f"[SUCCESS] Project created: {project_id}")

  Line 109: ✅
    Current: print(f"✅ Backlog generation started: {job_id}")
    Fixed:   print(f"[SUCCESS] Backlog generation started: {job_id}")

  Line 112: 📊
    Current: print(f"📊 Monitoring progress for 30 seconds...")
    Fixed:   print(f"[STATS] Monitoring progress for 30 seconds...")

  Line 134: ❌
    Current: print(f"❌ Failed to get status: {status_response.status_code}")
    Fixed:   print(f"[ERROR] Failed to get status: {status_response.status_code}")

  Line 137: ❌
    Current: print(f"❌ Error checking status: {e}")
    Fixed:   print(f"[ERROR] Error checking status: {e}")

  Line 141: ✅
    Current: print("✅ Progress monitoring completed")
    Fixed:   print("[SUCCESS] Progress monitoring completed")

  Line 144: ❌
    Current: print(f"❌ Failed to start backlog generation: {backlog_response.status_code}")
    Fixed:   print(f"[ERROR] Failed to start backlog generation: {backlog_response.status_code}")

  Line 147: ❌
    Current: print(f"❌ Failed to create project: {response.status_code}")
    Fixed:   print(f"[ERROR] Failed to create project: {response.status_code}")

  Line 151: ❌
    Current: print(f"❌ Error during progress test: {e}")
    Fixed:   print(f"[ERROR] Error during progress test: {e}")

  Line 180: ✅
    Current: print(f"✅ {name}: OK")
    Fixed:   print(f"[SUCCESS] {name}: OK")

  Line 184: ❌
    Current: print(f"❌ {name}: {response.status_code}")
    Fixed:   print(f"[ERROR] {name}: {response.status_code}")

  Line 187: ❌
    Current: print(f"❌ {name}: Error - {e}")
    Fixed:   print(f"[ERROR] {name}: Error - {e}")

  Line 205: ✅
    Current: print("✅ All tests completed!")
    Fixed:   print("[SUCCESS] All tests completed!")


File: X:\Programs\agile-backlog-automation\tools\test_progress_fixes.py
=======================================================================
  Line 118: ✅
    Current: print(f"  ✅ Found {len(found_messages)}/{len(expected_messages)} expected progress messages")
    Fixed:   print(f"  [SUCCESS] Found {len(found_messages)}/{len(expected_messages)} expected progress messages")

  Line 121: ✅
    Current: print("  ✅ QA Progress Communication: PASSED")
    Fixed:   print("  [SUCCESS] QA Progress Communication: PASSED")

  Line 124: ❌
    Current: print("  ❌ QA Progress Communication: FAILED")
    Fixed:   print("  [ERROR] QA Progress Communication: FAILED")

  Line 129: ❌
    Current: print(f"  ❌ QA Progress Communication: ERROR - {e}")
    Fixed:   print(f"  [ERROR] QA Progress Communication: ERROR - {e}")

  Line 134: 🔄
    Current: print("\n🔄 Testing Continuous Workflow Sequence Fix")
    Fixed:   print("\n[RETRY] Testing Continuous Workflow Sequence Fix")

  Line 157: ✅
    Current: print("  ✅ Default stages include Azure integration and final validation")
    Fixed:   print("  [SUCCESS] Default stages include Azure integration and final validation")

  Line 159: ❌
    Current: print(f"  ❌ Default stages mismatch: {stages}")
    Fixed:   print(f"  [ERROR] Default stages mismatch: {stages}")

  Line 179: ❌
    Current: print(f"  ❌ Progress decreases at stage {stage_idx}: {prev_progress} -> {progress}")
    Fixed:   print(f"  [ERROR] Progress decreases at stage {stage_idx}: {prev_progress} -> {progress}")

  Line 183: ✅
    Current: print("  ✅ Progress mapping increases continuously")
    Fixed:   print("  [SUCCESS] Progress mapping increases continuously")

  Line 184: ✅
    Current: print("  ✅ Continuous Workflow Sequence: PASSED")
    Fixed:   print("  [SUCCESS] Continuous Workflow Sequence: PASSED")

  Line 189: 🔍
    Current: print("\n🔍 Testing ProgressLoggingWrapper Message Parsing")
    Fixed:   print("\n[SEARCH] Testing ProgressLoggingWrapper Message Parsing")

  Line 223: 📊
    Current: print(f"  📊 PROGRESS: {item_type} '{item_name}' {'completed' if completed else 'processing'}")
    Fixed:   print(f"  [STATS] PROGRESS: {item_type} '{item_name}' {'completed' if completed else 'processing'}")

  Line 252: ✅
    Current: print("  ✅ ProgressLoggingWrapper Message Parsing: PASSED")
    Fixed:   print("  [SUCCESS] ProgressLoggingWrapper Message Parsing: PASSED")

  Line 255: ❌
    Current: print("  ❌ ProgressLoggingWrapper Message Parsing: FAILED")
    Fixed:   print("  [ERROR] ProgressLoggingWrapper Message Parsing: FAILED")

  Line 276: 📊
    Current: print("📊 TEST RESULTS SUMMARY")
    Fixed:   print("[STATS] TEST RESULTS SUMMARY")

  Line 282: ✅
    Current: print(f"✅ Passed: {passed}/{total}")
    Fixed:   print(f"[SUCCESS] Passed: {passed}/{total}")

  Line 283: ❌
    Current: print(f"❌ Failed: {total - passed}/{total}")
    Fixed:   print(f"[ERROR] Failed: {total - passed}/{total}")

  Line 287: ✅
    Current: print("✅ Issue #7 (QA Progress Communication): FIXED")
    Fixed:   print("[SUCCESS] Issue #7 (QA Progress Communication): FIXED")

  Line 288: ✅
    Current: print("✅ Issue #8 (Progress Bar Reset): FIXED")
    Fixed:   print("[SUCCESS] Issue #8 (Progress Bar Reset): FIXED")


File: X:\Programs\agile-backlog-automation\tools\test_project_creation.py
=========================================================================
  Line 51: ✅
    Current: print(f"✅ Project creation successful!")
    Fixed:   print(f"[SUCCESS] Project creation successful!")

  Line 70: ✅
    Current: print(f"✅ Backlog generation started!")
    Fixed:   print(f"[SUCCESS] Backlog generation started!")

  Line 77: ❌
    Current: print(f"❌ Backlog generation failed: {backlog_response.text}")
    Fixed:   print(f"[ERROR] Backlog generation failed: {backlog_response.text}")

  Line 79: ❌
    Current: print("❌ No project ID found in response")
    Fixed:   print("[ERROR] No project ID found in response")

  Line 81: ❌
    Current: print(f"❌ Project creation failed: {response.text}")
    Fixed:   print(f"[ERROR] Project creation failed: {response.text}")

  Line 84: ❌
    Current: print(f"❌ Error during test: {e}")
    Fixed:   print(f"[ERROR] Error during test: {e}")


File: X:\Programs\agile-backlog-automation\tools\test_prompt_system_fixes.py
============================================================================
  Line 40: ✅❌
    Current: status = "✅ VALID" if validation['valid'] else "❌ INVALID"
    Fixed:   status = "[SUCCESS] VALID" if validation['valid'] else "[ERROR] INVALID"

  Line 58: ❌
    Current: print(f"   {template['name']}: ❌ Error - {e}")
    Fixed:   print(f"   {template['name']}: [ERROR] Error - {e}")

  Line 67: ✅
    Current: print(f"   {template['name']}: ✅ Generated with fallbacks")
    Fixed:   print(f"   {template['name']}: [SUCCESS] Generated with fallbacks")

  Line 69: ❌
    Current: print(f"   {template['name']}: ❌ Error - {e}")
    Fixed:   print(f"   {template['name']}: [ERROR] Error - {e}")

  Line 71: ✅
    Current: print("\n✅ Prompt Manager tests completed!")
    Fixed:   print("\n[SUCCESS] Prompt Manager tests completed!")

  Line 98: ✅
    Current: print(f"   ✅ Initialized successfully")
    Fixed:   print(f"   [SUCCESS] Initialized successfully")

  Line 105: ❌
    Current: print(f"   ❌ Agent Error: {e}")
    Fixed:   print(f"   [ERROR] Agent Error: {e}")

  Line 107: ❌
    Current: print(f"   ❌ Unexpected Error: {e}")
    Fixed:   print(f"   [ERROR] Unexpected Error: {e}")

  Line 128: ✅
    Current: print(f"   ✅ Prompt generated: {len(prompt)} chars")
    Fixed:   print(f"   [SUCCESS] Prompt generated: {len(prompt)} chars")

  Line 140: ❌
    Current: print(f"   ❌ Communication Error: {e}")
    Fixed:   print(f"   [ERROR] Communication Error: {e}")

  Line 152: ❌
    Current: print("   ❌ Should have failed")
    Fixed:   print("   [ERROR] Should have failed")

  Line 154: ✅
    Current: print(f"   ✅ Correctly handled: {type(e).__name__}")
    Fixed:   print(f"   [SUCCESS] Correctly handled: {type(e).__name__}")

  Line 165: ❌
    Current: print("   ❌ Should have failed")
    Fixed:   print("   [ERROR] Should have failed")

  Line 167: ✅
    Current: print(f"   ✅ Correctly handled: {type(e).__name__}")
    Fixed:   print(f"   [SUCCESS] Correctly handled: {type(e).__name__}")

  Line 176: ✅
    Current: print("   ✅ Template validation handled gracefully")
    Fixed:   print("   [SUCCESS] Template validation handled gracefully")

  Line 178: ✅
    Current: print("\n✅ Error handling tests completed!")
    Fixed:   print("\n[SUCCESS] Error handling tests completed!")

  Line 200: ✅
    Current: print(f"   ✅ Retrieved {len(content)} chars for {template['name']}")
    Fixed:   print(f"   [SUCCESS] Retrieved {len(content)} chars for {template['name']}")

  Line 202: ❌
    Current: print(f"   ❌ Failed to retrieve content for {template['name']}")
    Fixed:   print(f"   [ERROR] Failed to retrieve content for {template['name']}")

  Line 204: ✅
    Current: print("\n✅ Prompt versioning tests completed!")
    Fixed:   print("\n[SUCCESS] Prompt versioning tests completed!")

  Line 229: ✅
    Current: print("✅ All tests completed successfully!")
    Fixed:   print("[SUCCESS] All tests completed successfully!")

  Line 231: ✅
    Current: print("✅ Enhanced prompt manager with versioning")
    Fixed:   print("[SUCCESS] Enhanced prompt manager with versioning")

  Line 232: ✅
    Current: print("✅ Improved template validation")
    Fixed:   print("[SUCCESS] Improved template validation")

  Line 233: ✅
    Current: print("✅ Better context variable handling with fallbacks")
    Fixed:   print("[SUCCESS] Better context variable handling with fallbacks")

  Line 234: ✅
    Current: print("✅ Robust agent initialization")
    Fixed:   print("[SUCCESS] Robust agent initialization")

  Line 235: ✅
    Current: print("✅ Comprehensive error handling")
    Fixed:   print("[SUCCESS] Comprehensive error handling")

  Line 236: ✅
    Current: print("✅ Agent communication improvements")
    Fixed:   print("[SUCCESS] Agent communication improvements")

  Line 237: ✅
    Current: print("✅ Template metadata tracking")
    Fixed:   print("[SUCCESS] Template metadata tracking")

  Line 240: ❌
    Current: print(f"\n❌ Test suite failed: {e}")
    Fixed:   print(f"\n[ERROR] Test suite failed: {e}")


File: X:\Programs\agile-backlog-automation\tools\test_server.py
===============================================================
  Line 17: ✅
    Current: print(f"✅ Health check: {response.status_code} - {response.text}")
    Fixed:   print(f"[SUCCESS] Health check: {response.status_code} - {response.text}")

  Line 19: ❌
    Current: print(f"❌ Health check failed: {e}")
    Fixed:   print(f"[ERROR] Health check failed: {e}")

  Line 25: ✅
    Current: print(f"✅ Jobs endpoint: {response.status_code}")
    Fixed:   print(f"[SUCCESS] Jobs endpoint: {response.status_code}")

  Line 28: ❌
    Current: print(f"❌ Jobs endpoint failed: {e}")
    Fixed:   print(f"[ERROR] Jobs endpoint failed: {e}")

  Line 34: ✅
    Current: print(f"✅ Create test job: {response.status_code}")
    Fixed:   print(f"[SUCCESS] Create test job: {response.status_code}")

  Line 41: ❌
    Current: print(f"❌ Create test job failed: {e}")
    Fixed:   print(f"[ERROR] Create test job failed: {e}")


File: X:\Programs\agile-backlog-automation\tools\test_settings_api.py
=====================================================================
  Line 26: ✅
    Current: print(f"✅ Current User: {user_data['data']['display_name']} ({user_data['data']['email']})")
    Fixed:   print(f"[SUCCESS] Current User: {user_data['data']['display_name']} ({user_data['data']['email']})")

  Line 29: ❌
    Current: print(f"❌ Failed to get current user: {response.status_code}")
    Fixed:   print(f"[ERROR] Failed to get current user: {response.status_code}")

  Line 31: ❌
    Current: print(f"❌ Error getting current user: {e}")
    Fixed:   print(f"[ERROR] Error getting current user: {e}")

  Line 41: ✅
    Current: print(f"✅ Work Item Limits:")
    Fixed:   print(f"[SUCCESS] Work Item Limits:")

  Line 48: ❌
    Current: print(f"❌ Failed to get work item limits: {response.status_code}")
    Fixed:   print(f"[ERROR] Failed to get work item limits: {response.status_code}")

  Line 50: ❌
    Current: print(f"❌ Error getting work item limits: {e}")
    Fixed:   print(f"[ERROR] Error getting work item limits: {e}")

  Line 75: ✅
    Current: print(f"✅ Saved work item limits: {result['message']}")
    Fixed:   print(f"[SUCCESS] Saved work item limits: {result['message']}")

  Line 77: ❌
    Current: print(f"❌ Failed to save work item limits: {response.status_code}")
    Fixed:   print(f"[ERROR] Failed to save work item limits: {response.status_code}")

  Line 80: ❌
    Current: print(f"❌ Error saving work item limits: {e}")
    Fixed:   print(f"[ERROR] Error saving work item limits: {e}")

  Line 90: ✅
    Current: print(f"✅ Session Work Item Limits:")
    Fixed:   print(f"[SUCCESS] Session Work Item Limits:")

  Line 97: ❌
    Current: print(f"❌ Failed to get session work item limits: {response.status_code}")
    Fixed:   print(f"[ERROR] Failed to get session work item limits: {response.status_code}")

  Line 99: ❌
    Current: print(f"❌ Error getting session work item limits: {e}")
    Fixed:   print(f"[ERROR] Error getting session work item limits: {e}")

  Line 122: ✅
    Current: print(f"✅ Saved user default limits: {result['message']}")
    Fixed:   print(f"[SUCCESS] Saved user default limits: {result['message']}")

  Line 124: ❌
    Current: print(f"❌ Failed to save user default limits: {response.status_code}")
    Fixed:   print(f"[ERROR] Failed to save user default limits: {response.status_code}")

  Line 127: ❌
    Current: print(f"❌ Error saving user default limits: {e}")
    Fixed:   print(f"[ERROR] Error saving user default limits: {e}")

  Line 137: ✅
    Current: print(f"✅ All Settings:")
    Fixed:   print(f"[SUCCESS] All Settings:")

  Line 141: ❌
    Current: print(f"❌ Failed to get all settings: {response.status_code}")
    Fixed:   print(f"[ERROR] Failed to get all settings: {response.status_code}")

  Line 143: ❌
    Current: print(f"❌ Error getting all settings: {e}")
    Fixed:   print(f"[ERROR] Error getting all settings: {e}")

  Line 145: ✅
    Current: print("\n✅ All settings API tests completed!")
    Fixed:   print("\n[SUCCESS] All settings API tests completed!")


File: X:\Programs\agile-backlog-automation\tools\test_settings_database.py
==========================================================================
  Line 48: ✅
    Current: print(f"✅ Save session limits: {success}")
    Fixed:   print(f"[SUCCESS] Save session limits: {success}")

  Line 62: ✅
    Current: print(f"✅ Save user defaults: {success}")
    Fixed:   print(f"[SUCCESS] Save user defaults: {success}")

  Line 66: 📋
    Current: print(f"📋 Session limits retrieved:")
    Fixed:   print(f"[CONFIG] Session limits retrieved:")

  Line 75: 📋
    Current: print(f"📋 User defaults retrieved:")
    Fixed:   print(f"[CONFIG] User defaults retrieved:")

  Line 93: ✅
    Current: print(f"✅ Save session visual settings: {success}")
    Fixed:   print(f"[SUCCESS] Save session visual settings: {success}")

  Line 100: ✅
    Current: print(f"✅ Save user visual defaults: {success}")
    Fixed:   print(f"[SUCCESS] Save user visual defaults: {success}")

  Line 104: 📋
    Current: print(f"📋 Session visual settings: glow_intensity = {visual.glow_intensity}")
    Fixed:   print(f"[CONFIG] Session visual settings: glow_intensity = {visual.glow_intensity}")

  Line 108: 📋
    Current: print(f"📋 User visual defaults: glow_intensity = {visual.glow_intensity}")
    Fixed:   print(f"[CONFIG] User visual defaults: glow_intensity = {visual.glow_intensity}")

  Line 117: 📋
    Current: print("📋 All settings (with session):")
    Fixed:   print("[CONFIG] All settings (with session):")

  Line 122: 📋
    Current: print("📋 All settings (user defaults):")
    Fixed:   print("[CONFIG] All settings (user defaults):")

  Line 133: 📋
    Current: print(f"📋 Setting history for {user_id}:")
    Fixed:   print(f"[CONFIG] Setting history for {user_id}:")

  Line 144: ✅
    Current: print(f"✅ Delete session settings: {success}")
    Fixed:   print(f"[SUCCESS] Delete session settings: {success}")

  Line 148: 📋
    Current: print(f"📋 After deletion - Session limits (should be user defaults):")
    Fixed:   print(f"[CONFIG] After deletion - Session limits (should be user defaults):")

  Line 153: ✅
    Current: print("✅ All database settings tests completed successfully!")
    Fixed:   print("[SUCCESS] All database settings tests completed successfully!")

  Line 159: ✅
    Current: print("✅ Test data cleaned up")
    Fixed:   print("[SUCCESS] Test data cleaned up")


File: X:\Programs\agile-backlog-automation\tools\test_settings_integration.py
=============================================================================
  Line 17: 🔧
    Current: print("🔧 Testing Settings Manager Integration")
    Fixed:   print("[TOOL] Testing Settings Manager Integration")

  Line 29: 📋
    Current: print(f"📋 Current User ID: {current_user_id}")
    Fixed:   print(f"[CONFIG] Current User ID: {current_user_id}")

  Line 33: 📊
    Current: print(f"📊 Work Item Limits:")
    Fixed:   print(f"[STATS] Work Item Limits:")

  Line 42: 🔍
    Current: print(f"\n🔍 Config Limits (work_item_limits section):")
    Fixed:   print(f"\n[SEARCH] Config Limits (work_item_limits section):")

  Line 48: 🔍
    Current: print(f"\n🔍 Workflow Limits (workflow.limits section):")
    Fixed:   print(f"\n[SEARCH] Workflow Limits (workflow.limits section):")

  Line 54: ✅
    Current: print(f"\n✅ SUCCESS: Settings manager is using work_item_limits section")
    Fixed:   print(f"\n[SUCCESS] SUCCESS: Settings manager is using work_item_limits section")

  Line 56: ❌
    Current: print(f"\n❌ ERROR: Settings manager is not using work_item_limits section")
    Fixed:   print(f"\n[ERROR] ERROR: Settings manager is not using work_item_limits section")

  Line 59: ✅
    Current: print(f"✅ SUCCESS: Workflow limits are set to null (production mode)")
    Fixed:   print(f"[SUCCESS] SUCCESS: Workflow limits are set to null (production mode)")

  Line 66: ❌
    Current: print(f"❌ Error testing settings integration: {e}")
    Fixed:   print(f"[ERROR] Error testing settings integration: {e}")


File: X:\Programs\agile-backlog-automation\tools\test_single_suite_deletion.py
==============================================================================
  Line 37: 🔍
    Current: print("🔍 Step 1: Finding test plan for the suite...")
    Fixed:   print("[SEARCH] Step 1: Finding test plan for the suite...")

  Line 67: ✅
    Current: print(f"✅ Found test suite {test_suite_id} in test plan {plan_id}")
    Fixed:   print(f"[SUCCESS] Found test suite {test_suite_id} in test plan {plan_id}")

  Line 86: ✅
    Current: print(f"✅ Successfully deleted test suite {test_suite_id} via test plan {found_plan}")
    Fixed:   print(f"[SUCCESS] Successfully deleted test suite {test_suite_id} via test plan {found_plan}")

  Line 89: ❌
    Current: print(f"❌ Test plan API failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Test plan API failed: {response.status_code}")

  Line 100: ✅
    Current: print(f"✅ Successfully deleted test suite {test_suite_id} directly")
    Fixed:   print(f"[SUCCESS] Successfully deleted test suite {test_suite_id} directly")

  Line 103: ❌
    Current: print(f"❌ Direct deletion failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Direct deletion failed: {response.status_code}")

  Line 108: ❌
    Current: print(f"❌ Error: {e}")
    Fixed:   print(f"[ERROR] Error: {e}")


File: X:\Programs\agile-backlog-automation\tools\test_small_plan_deletion.py
============================================================================
  Line 40: 🔧
    Current: print(f"🔧 Initialized Test Small Plan Deleter (Backlog Automation Project)")
    Fixed:   print(f"[TOOL] Initialized Test Small Plan Deleter (Backlog Automation Project)")

  Line 46: 🔍
    Current: print("🔍 Querying test plans via WIQL from Backlog Automation project...")
    Fixed:   print("[SEARCH] Querying test plans via WIQL from Backlog Automation project...")

  Line 53: 📋
    Current: print(f"📋 WIQL Query: {query}")
    Fixed:   print(f"[CONFIG] WIQL Query: {query}")

  Line 68: ✅
    Current: print(f"✅ Found {len(test_plan_ids)} test plans")
    Fixed:   print(f"[SUCCESS] Found {len(test_plan_ids)} test plans")

  Line 72: ❌
    Current: print(f"❌ Error querying test plans: {e}")
    Fixed:   print(f"[ERROR] Error querying test plans: {e}")

  Line 87: ✅
    Current: print(f"  ✅ Successfully deleted test plan {test_plan_id} from Backlog Automation project")
    Fixed:   print(f"  [SUCCESS] Successfully deleted test plan {test_plan_id} from Backlog Automation project")

  Line 93: ❌
    Current: print(f"  ❌ Error deleting test plan {test_plan_id}: {response.status_code}")
    Fixed:   print(f"  [ERROR] Error deleting test plan {test_plan_id}: {response.status_code}")

  Line 98: ❌
    Current: print(f"  ❌ Error deleting test plan {test_plan_id}: {e}")
    Fixed:   print(f"  [ERROR] Error deleting test plan {test_plan_id}: {e}")

  Line 114: 📋
    Current: print(f"\n📋 Processing {i}/{len(test_plan_ids)}: Test Plan {test_plan_id}")
    Fixed:   print(f"\n[CONFIG] Processing {i}/{len(test_plan_ids)}: Test Plan {test_plan_id}")

  Line 126: ❌
    Current: print(f"  ❌ Exception: {e}")
    Fixed:   print(f"  [ERROR] Exception: {e}")

  Line 130: 📊
    Current: print("📊 BULK DELETION SUMMARY (Backlog Automation Project)")
    Fixed:   print("[STATS] BULK DELETION SUMMARY (Backlog Automation Project)")

  Line 137: ❌
    Current: print(f"\n❌ Errors encountered:")
    Fixed:   print(f"\n[ERROR] Errors encountered:")

  Line 161: ✅
    Current: print("✅ No test plans found to delete")
    Fixed:   print("[SUCCESS] No test plans found to delete")

  Line 164: 📋
    Current: print(f"📋 Testing with first {len(test_plan_ids)} test plans")
    Fixed:   print(f"[CONFIG] Testing with first {len(test_plan_ids)} test plans")

  Line 168: 🔍
    Current: print(f"\n🔍 TEST PLAN IDs FOR DELETION:")
    Fixed:   print(f"\n[SEARCH] TEST PLAN IDs FOR DELETION:")

  Line 177: ❌
    Current: print("❌ Deletion cancelled")
    Fixed:   print("[ERROR] Deletion cancelled")

  Line 186: ❌
    Current: print(f"❌ Error: {e}")
    Fixed:   print(f"[ERROR] Error: {e}")


File: X:\Programs\agile-backlog-automation\tools\test_sse_implementation.py
===========================================================================
  Line 25: ✅
    Current: print(f"✅ Created test job: {job_id}")
    Fixed:   print(f"[SUCCESS] Created test job: {job_id}")

  Line 27: ❌
    Current: print(f"❌ Failed to create test job: {response.status}")
    Fixed:   print(f"[ERROR] Failed to create test job: {response.status}")

  Line 37: ❌
    Current: print(f"❌ SSE connection failed: {response.status}")
    Fixed:   print(f"[ERROR] SSE connection failed: {response.status}")

  Line 40: ✅
    Current: print("✅ SSE connection established")
    Fixed:   print("[SUCCESS] SSE connection established")

  Line 50: ✅
    Current: print("✅ Connection confirmed")
    Fixed:   print("[SUCCESS] Connection confirmed")

  Line 52: 📊
    Current: print(f"📊 Progress: {data.get('progress', 0)}% - {data.get('currentAction', '')}")
    Fixed:   print(f"[STATS] Progress: {data.get('progress', 0)}% - {data.get('currentAction', '')}")

  Line 57: ❌
    Current: print(f"❌ SSE Error: {data.get('message', 'Unknown error')}")
    Fixed:   print(f"[ERROR] SSE Error: {data.get('message', 'Unknown error')}")

  Line 60: ❌
    Current: print(f"❌ Failed to parse SSE data: {e}")
    Fixed:   print(f"[ERROR] Failed to parse SSE data: {e}")

  Line 68: 🔄
    Current: print(f"\n🔄 Updating job progress to {progress}%...")
    Fixed:   print(f"\n[RETRY] Updating job progress to {progress}%...")

  Line 73: ✅
    Current: print(f"✅ Progress updated to {progress}%")
    Fixed:   print(f"[SUCCESS] Progress updated to {progress}%")

  Line 75: ❌
    Current: print(f"❌ Failed to update progress: {response.status}")
    Fixed:   print(f"[ERROR] Failed to update progress: {response.status}")

  Line 88: ❌
    Current: print(f"\n❌ SSE test failed: {e}")
    Fixed:   print(f"\n[ERROR] SSE test failed: {e}")

  Line 100: ✅
    Current: print(f"✅ Backend is healthy: {data}")
    Fixed:   print(f"[SUCCESS] Backend is healthy: {data}")

  Line 103: ❌
    Current: print(f"❌ Backend health check failed: {response.status}")
    Fixed:   print(f"[ERROR] Backend health check failed: {response.status}")

  Line 106: ❌
    Current: print(f"❌ Backend health check error: {e}")
    Fixed:   print(f"[ERROR] Backend health check error: {e}")

  Line 116: ❌
    Current: print("\n❌ Backend is not available. Please start the API server first.")
    Fixed:   print("\n[ERROR] Backend is not available. Please start the API server first.")

  Line 126: ❌
    Current: print("\n❌ Tests failed. Please check the implementation.")
    Fixed:   print("\n[ERROR] Tests failed. Please check the implementation.")


File: X:\Programs\agile-backlog-automation\tools\test_suite_via_plan.py
=======================================================================
  Line 38: 🔍
    Current: print("🔍 Step 1: Getting test plan details...")
    Fixed:   print("[SEARCH] Step 1: Getting test plan details...")

  Line 44: ✅
    Current: print(f"✅ Test Plan {plan_id}: {plan_item.get('fields', {}).get('System.Title')}")
    Fixed:   print(f"[SUCCESS] Test Plan {plan_id}: {plan_item.get('fields', {}).get('System.Title')}")

  Line 46: ❌
    Current: print(f"❌ Error getting test plan: {plan_response.status_code}")
    Fixed:   print(f"[ERROR] Error getting test plan: {plan_response.status_code}")

  Line 51: 🔍
    Current: print(f"\n🔍 Step 2: Getting test suites in plan {plan_id}...")
    Fixed:   print(f"\n[SEARCH] Step 2: Getting test suites in plan {plan_id}...")

  Line 58: ✅
    Current: print(f"✅ Found {len(suites)} test suites in plan {plan_id}")
    Fixed:   print(f"[SUCCESS] Found {len(suites)} test suites in plan {plan_id}")

  Line 65: ❌
    Current: print(f"❌ Error getting test suites: {suites_response.status_code}")
    Fixed:   print(f"[ERROR] Error getting test suites: {suites_response.status_code}")

  Line 77: ✅
    Current: print(f"✅ Successfully deleted test suite {suite_id} from plan {plan_id}")
    Fixed:   print(f"[SUCCESS] Successfully deleted test suite {suite_id} from plan {plan_id}")

  Line 80: ❌
    Current: print(f"❌ Error deleting test suite: {delete_response.status_code}")
    Fixed:   print(f"[ERROR] Error deleting test suite: {delete_response.status_code}")

  Line 85: ❌
    Current: print(f"❌ Error: {e}")
    Fixed:   print(f"[ERROR] Error: {e}")


File: X:\Programs\agile-backlog-automation\tools\test_sweeper_fix.py
====================================================================
  Line 37: ❌
    Current: print("❌ Error: AZURE_DEVOPS_PAT environment variable not set")
    Fixed:   print("[ERROR] Error: AZURE_DEVOPS_PAT environment variable not set")

  Line 53: 🔍
    Current: print("🔍 Testing validate_relationships method...")
    Fixed:   print("[SEARCH] Testing validate_relationships method...")

  Line 68: 📊
    Current: print(f"📊 Orphaned Work Items by Type:")
    Fixed:   print(f"[STATS] Orphaned Work Items by Type:")

  Line 72: 🤖
    Current: print(f"\n🤖 Orphaned Work Items by Suggested Agent:")
    Fixed:   print(f"\n[AI] Orphaned Work Items by Suggested Agent:")

  Line 80: ✅
    Current: print(f"\n✅ Fix Verification:")
    Fixed:   print(f"\n[SUCCESS] Fix Verification:")

  Line 82: ✅
    Current: print(f"   ✅ Orphaned test cases ({test_case_count}) are now assigned to QA Lead Agent")
    Fixed:   print(f"   [SUCCESS] Orphaned test cases ({test_case_count}) are now assigned to QA Lead Agent")

  Line 89: ❌
    Current: print(f"❌ Error testing sweeper fix: {e}")
    Fixed:   print(f"[ERROR] Error testing sweeper fix: {e}")


File: X:\Programs\agile-backlog-automation\tools\test_tiny_models.py
====================================================================
  Line 13: 🔄
    Current: print(f"🔄 Testing {model_name} with minimal settings...")
    Fixed:   print(f"[RETRY] Testing {model_name} with minimal settings...")

  Line 41: ✅
    Current: print(f"  ✅ {duration:.2f} seconds")
    Fixed:   print(f"  [SUCCESS] {duration:.2f} seconds")

  Line 45: ❌
    Current: print(f"  ❌ HTTP {response.status_code}: {response.text}")
    Fixed:   print(f"  [ERROR] HTTP {response.status_code}: {response.text}")

  Line 49: ❌
    Current: print(f"  ❌ Error: {e}")
    Fixed:   print(f"  [ERROR] Error: {e}")

  Line 67: 📊
    Current: print("📊 Working Models (Minimal Settings):")
    Fixed:   print("[STATS] Working Models (Minimal Settings):")

  Line 82: 🔧
    Current: print("🔧 Configuration:")
    Fixed:   print("[TOOL] Configuration:")

  Line 89: ❌
    Current: print("❌ No models work with current memory")
    Fixed:   print("[ERROR] No models work with current memory")

  Line 91: 🚨
    Current: print("🚨 Critical Memory Issues:")
    Fixed:   print("[ALERT] Critical Memory Issues:")


File: X:\Programs\agile-backlog-automation\tools\test_unicode_fixes.py
======================================================================
  Line 20: ✅❌
    Current: "title": "User Story with ✅ and ❌ symbols",
    Fixed:   "title": "User Story with [SUCCESS] and [ERROR] symbols",

  Line 23: ✅
    Current: "User can see ✅ success messages",
    Fixed:   "User can see [SUCCESS] success messages",

  Line 24: ❌
    Current: "System shows ❌ error messages",
    Fixed:   "System shows [ERROR] error messages",

  Line 25: 📊
    Current: "App displays 📊 statistics correctly"
    Fixed:   "App displays [STATS] statistics correctly"

  Line 30: 🔧
    Current: "steps": ["Step 1 with 💡 idea", "Step 2 with 🔧 tool"]
    Fixed:   "steps": ["Step 1 with 💡 idea", "Step 2 with [TOOL] tool"]

  Line 44: ✅❌
    Current: if "✅" not in json_str and "❌" not in json_str:
    Fixed:   if "[SUCCESS]" not in json_str and "[ERROR]" not in json_str:

  Line 45: ✅
    Current: print("  ✅ Database sanitization working correctly")
    Fixed:   print("  [SUCCESS] Database sanitization working correctly")

  Line 47: ❌
    Current: print("  ❌ Database sanitization failed")
    Fixed:   print("  [ERROR] Database sanitization failed")

  Line 60: ✅❌
    Current: test_message = "🎉 Success with ✅ and ❌ symbols"
    Fixed:   test_message = "🎉 Success with [SUCCESS] and [ERROR] symbols"

  Line 63: ✅❌
    Current: if "✅" not in sanitized and "❌" not in sanitized:
    Fixed:   if "[SUCCESS]" not in sanitized and "[ERROR]" not in sanitized:

  Line 64: ✅
    Current: print("  ✅ Notifier sanitization working correctly")
    Fixed:   print("  [SUCCESS] Notifier sanitization working correctly")

  Line 66: ❌
    Current: print("  ❌ Notifier sanitization failed")
    Fixed:   print("  [ERROR] Notifier sanitization failed")

  Line 79: 🔍📊
    Current: test_text = "🔍 Search with 📊 stats and 🎯 targets"
    Fixed:   test_text = "[SEARCH] Search with [STATS] stats and 🎯 targets"

  Line 82: 🔍📊
    Current: if "🔍" not in sanitized and "📊" not in sanitized:
    Fixed:   if "[SEARCH]" not in sanitized and "[STATS]" not in sanitized:

  Line 83: ✅
    Current: print("  ✅ Supervisor sanitization working correctly")
    Fixed:   print("  [SUCCESS] Supervisor sanitization working correctly")

  Line 85: ❌
    Current: print("  ❌ Supervisor sanitization failed")
    Fixed:   print("  [ERROR] Supervisor sanitization failed")

  Line 100: ✅
    Current: print(f"  ✅ Improved process management script found: {script_path}")
    Fixed:   print(f"  [SUCCESS] Improved process management script found: {script_path}")

  Line 120: ✅
    Current: print(f"  ✅ Script contains {found_improvements}/5 key improvements")
    Fixed:   print(f"  [SUCCESS] Script contains {found_improvements}/5 key improvements")

  Line 125: ❌
    Current: print(f"  ❌ Improved process management script not found")
    Fixed:   print(f"  [ERROR] Improved process management script not found")

  Line 146: 📊
    Current: print("📊 Test Results Summary")
    Fixed:   print("[STATS] Test Results Summary")

  Line 150: ✅
    Current: print("✅ Unicode fixes (Issue #9): PASSED")
    Fixed:   print("[SUCCESS] Unicode fixes (Issue #9): PASSED")

  Line 152: ❌
    Current: print("❌ Unicode fixes (Issue #9): FAILED")
    Fixed:   print("[ERROR] Unicode fixes (Issue #9): FAILED")

  Line 155: ✅
    Current: print("✅ Process management fixes (Issue #10): PASSED")
    Fixed:   print("[SUCCESS] Process management fixes (Issue #10): PASSED")

  Line 157: ❌
    Current: print("❌ Process management fixes (Issue #10): FAILED")
    Fixed:   print("[ERROR] Process management fixes (Issue #10): FAILED")


File: X:\Programs\agile-backlog-automation\tools\test_unified_server.py
=======================================================================
  Line 18: 🔍
    Current: print("🔍 Testing health check...")
    Fixed:   print("[SEARCH] Testing health check...")

  Line 23: ✅
    Current: print(f"✅ Health check passed: {data}")
    Fixed:   print(f"[SUCCESS] Health check passed: {data}")

  Line 26: ❌
    Current: print(f"❌ Health check failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Health check failed: {response.status_code}")

  Line 29: ❌
    Current: print(f"❌ Health check error: {e}")
    Fixed:   print(f"[ERROR] Health check error: {e}")

  Line 34: 🔍
    Current: print("\n🔍 Testing configuration endpoints...")
    Fixed:   print("\n[SEARCH] Testing configuration endpoints...")

  Line 40: ✅
    Current: print("✅ Get config endpoint working")
    Fixed:   print("[SUCCESS] Get config endpoint working")

  Line 42: ❌
    Current: print(f"❌ Get config failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Get config failed: {response.status_code}")

  Line 45: ❌
    Current: print(f"❌ Get config error: {e}")
    Fixed:   print(f"[ERROR] Get config error: {e}")

  Line 57: ✅
    Current: print("✅ Save config endpoint working")
    Fixed:   print("[SUCCESS] Save config endpoint working")

  Line 59: ❌
    Current: print(f"❌ Save config failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Save config failed: {response.status_code}")

  Line 62: ❌
    Current: print(f"❌ Save config error: {e}")
    Fixed:   print(f"[ERROR] Save config error: {e}")

  Line 69: 🔍
    Current: print("\n🔍 Testing project endpoints...")
    Fixed:   print("\n[SEARCH] Testing project endpoints...")

  Line 98: ✅
    Current: print(f"✅ Project created: {project_id}")
    Fixed:   print(f"[SUCCESS] Project created: {project_id}")

  Line 103: ✅
    Current: print("✅ Get project endpoint working")
    Fixed:   print("[SUCCESS] Get project endpoint working")

  Line 105: ❌
    Current: print(f"❌ Get project failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Get project failed: {response.status_code}")

  Line 111: ✅
    Current: print("✅ List projects endpoint working")
    Fixed:   print("[SUCCESS] List projects endpoint working")

  Line 113: ❌
    Current: print(f"❌ List projects failed: {response.status_code}")
    Fixed:   print(f"[ERROR] List projects failed: {response.status_code}")

  Line 118: ❌
    Current: print(f"❌ Create project failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Create project failed: {response.status_code}")

  Line 121: ❌
    Current: print(f"❌ Project endpoints error: {e}")
    Fixed:   print(f"[ERROR] Project endpoints error: {e}")

  Line 126: 🔍
    Current: print("\n🔍 Testing backlog endpoints...")
    Fixed:   print("\n[SEARCH] Testing backlog endpoints...")

  Line 134: ✅
    Current: print(f"✅ Backlog generation started: {job_id}")
    Fixed:   print(f"[SUCCESS] Backlog generation started: {job_id}")

  Line 139: ✅
    Current: print("✅ Get job status endpoint working")
    Fixed:   print("[SUCCESS] Get job status endpoint working")

  Line 141: ❌
    Current: print(f"❌ Get job status failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Get job status failed: {response.status_code}")

  Line 147: ✅
    Current: print("✅ Get all jobs endpoint working")
    Fixed:   print("[SUCCESS] Get all jobs endpoint working")

  Line 149: ❌
    Current: print(f"❌ Get all jobs failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Get all jobs failed: {response.status_code}")

  Line 154: ❌
    Current: print(f"❌ Start backlog generation failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Start backlog generation failed: {response.status_code}")

  Line 157: ❌
    Current: print(f"❌ Backlog endpoints error: {e}")
    Fixed:   print(f"[ERROR] Backlog endpoints error: {e}")

  Line 162: 🔍
    Current: print("\n🔍 Testing templates endpoint...")
    Fixed:   print("\n[SEARCH] Testing templates endpoint...")

  Line 168: ✅
    Current: print(f"✅ Templates endpoint working: {len(data['data'])} templates found")
    Fixed:   print(f"[SUCCESS] Templates endpoint working: {len(data['data'])} templates found")

  Line 171: ❌
    Current: print(f"❌ Templates failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Templates failed: {response.status_code}")

  Line 174: ❌
    Current: print(f"❌ Templates error: {e}")
    Fixed:   print(f"[ERROR] Templates error: {e}")

  Line 179: 🔍
    Current: print("\n🔍 Testing validation endpoints...")
    Fixed:   print("\n[SEARCH] Testing validation endpoints...")

  Line 185: ✅
    Current: print("✅ Azure validation endpoint working")
    Fixed:   print("[SUCCESS] Azure validation endpoint working")

  Line 187: ❌
    Current: print(f"❌ Azure validation failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Azure validation failed: {response.status_code}")

  Line 190: ❌
    Current: print(f"❌ Azure validation error: {e}")
    Fixed:   print(f"[ERROR] Azure validation error: {e}")

  Line 197: ✅
    Current: print("✅ AI validation endpoint working")
    Fixed:   print("[SUCCESS] AI validation endpoint working")

  Line 199: ❌
    Current: print(f"❌ AI validation failed: {response.status_code}")
    Fixed:   print(f"[ERROR] AI validation failed: {response.status_code}")

  Line 202: ❌
    Current: print(f"❌ AI validation error: {e}")
    Fixed:   print(f"[ERROR] AI validation error: {e}")

  Line 209: 🔍
    Current: print("\n🔍 Testing management endpoints...")
    Fixed:   print("\n[SEARCH] Testing management endpoints...")

  Line 215: ✅
    Current: print("✅ Work items endpoint working")
    Fixed:   print("[SUCCESS] Work items endpoint working")

  Line 217: ❌
    Current: print(f"❌ Work items failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Work items failed: {response.status_code}")

  Line 220: ❌
    Current: print(f"❌ Work items error: {e}")
    Fixed:   print(f"[ERROR] Work items error: {e}")

  Line 227: ✅
    Current: print("✅ Test cases endpoint working")
    Fixed:   print("[SUCCESS] Test cases endpoint working")

  Line 229: ❌
    Current: print(f"❌ Test cases failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Test cases failed: {response.status_code}")

  Line 232: ❌
    Current: print(f"❌ Test cases error: {e}")
    Fixed:   print(f"[ERROR] Test cases error: {e}")

  Line 239: ✅
    Current: print("✅ Test suites endpoint working")
    Fixed:   print("[SUCCESS] Test suites endpoint working")

  Line 241: ❌
    Current: print(f"❌ Test suites failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Test suites failed: {response.status_code}")

  Line 244: ❌
    Current: print(f"❌ Test suites error: {e}")
    Fixed:   print(f"[ERROR] Test suites error: {e}")

  Line 251: ✅
    Current: print("✅ Test plans endpoint working")
    Fixed:   print("[SUCCESS] Test plans endpoint working")

  Line 253: ❌
    Current: print(f"❌ Test plans failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Test plans failed: {response.status_code}")

  Line 256: ❌
    Current: print(f"❌ Test plans error: {e}")
    Fixed:   print(f"[ERROR] Test plans error: {e}")

  Line 263: 🔍
    Current: print("\n🔍 Testing sweeper endpoints...")
    Fixed:   print("\n[SEARCH] Testing sweeper endpoints...")

  Line 269: ✅
    Current: print("✅ Get sweeper config endpoint working")
    Fixed:   print("[SUCCESS] Get sweeper config endpoint working")

  Line 271: ❌
    Current: print(f"❌ Get sweeper config failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Get sweeper config failed: {response.status_code}")

  Line 274: ❌
    Current: print(f"❌ Get sweeper config error: {e}")
    Fixed:   print(f"[ERROR] Get sweeper config error: {e}")

  Line 287: ✅
    Current: print("✅ Save sweeper config endpoint working")
    Fixed:   print("[SUCCESS] Save sweeper config endpoint working")

  Line 289: ❌
    Current: print(f"❌ Save sweeper config failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Save sweeper config failed: {response.status_code}")

  Line 292: ❌
    Current: print(f"❌ Save sweeper config error: {e}")
    Fixed:   print(f"[ERROR] Save sweeper config error: {e}")

  Line 299: ✅
    Current: print("✅ Get sweeper status endpoint working")
    Fixed:   print("[SUCCESS] Get sweeper status endpoint working")

  Line 301: ❌
    Current: print(f"❌ Get sweeper status failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Get sweeper status failed: {response.status_code}")

  Line 304: ❌
    Current: print(f"❌ Get sweeper status error: {e}")
    Fixed:   print(f"[ERROR] Get sweeper status error: {e}")

  Line 311: 🔍
    Current: print("\n🔍 Testing utility endpoints...")
    Fixed:   print("\n[SEARCH] Testing utility endpoints...")

  Line 317: ✅
    Current: print("✅ Test logs endpoint working")
    Fixed:   print("[SUCCESS] Test logs endpoint working")

  Line 319: ❌
    Current: print(f"❌ Test logs failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Test logs failed: {response.status_code}")

  Line 322: ❌
    Current: print(f"❌ Test logs error: {e}")
    Fixed:   print(f"[ERROR] Test logs error: {e}")

  Line 329: ✅
    Current: print("✅ Start application endpoint working")
    Fixed:   print("[SUCCESS] Start application endpoint working")

  Line 331: ❌
    Current: print(f"❌ Start application failed: {response.status_code}")
    Fixed:   print(f"[ERROR] Start application failed: {response.status_code}")

  Line 334: ❌
    Current: print(f"❌ Start application error: {e}")
    Fixed:   print(f"[ERROR] Start application error: {e}")

  Line 347: 🔍
    Current: print("🔍 Checking if server is running...")
    Fixed:   print("[SEARCH] Checking if server is running...")

  Line 351: ❌
    Current: print("❌ Server is not responding properly")
    Fixed:   print("[ERROR] Server is not responding properly")

  Line 356: ❌
    Current: print("❌ Cannot connect to server")
    Fixed:   print("[ERROR] Cannot connect to server")

  Line 361: ✅
    Current: print("✅ Server is running")
    Fixed:   print("[SUCCESS] Server is running")

  Line 382: ❌
    Current: print(f"❌ {test_name} test failed")
    Fixed:   print(f"[ERROR] {test_name} test failed")

  Line 384: ❌
    Current: print(f"❌ {test_name} test error: {e}")
    Fixed:   print(f"[ERROR] {test_name} test error: {e}")

  Line 394: ❌
    Current: print("❌ Backlog endpoints test failed")
    Fixed:   print("[ERROR] Backlog endpoints test failed")

  Line 396: ❌
    Current: print("❌ Project endpoints test failed")
    Fixed:   print("[ERROR] Project endpoints test failed")

  Line 398: ❌
    Current: print(f"❌ Project/Backlog test error: {e}")
    Fixed:   print(f"[ERROR] Project/Backlog test error: {e}")

  Line 403: 📊
    Current: print(f"📊 Test Results: {passed}/{total} tests passed")
    Fixed:   print(f"[STATS] Test Results: {passed}/{total} tests passed")


File: X:\Programs\agile-backlog-automation\tools\test_user_id_resolver.py
=========================================================================
  Line 23: ✅
    Current: print(f"✅ Default User ID: {user_id}")
    Fixed:   print(f"[SUCCESS] Default User ID: {user_id}")

  Line 30: ✅
    Current: print(f"✅ User Email: {email}")
    Fixed:   print(f"[SUCCESS] User Email: {email}")

  Line 37: ✅
    Current: print(f"✅ Display Name: {display_name}")
    Fixed:   print(f"[SUCCESS] Display Name: {display_name}")

  Line 44: ✅
    Current: print(f"✅ Session ID: {session_id}")
    Fixed:   print(f"[SUCCESS] Session ID: {session_id}")

  Line 51: ✅
    Current: print(f"✅ User ID Valid: {is_valid}")
    Fixed:   print(f"[SUCCESS] User ID Valid: {is_valid}")

  Line 54: ✅
    Current: print(f"✅ Empty User ID Valid: {is_invalid}")
    Fixed:   print(f"[SUCCESS] Empty User ID Valid: {is_invalid}")

  Line 72: ✅
    Current: print("\n✅ All user ID resolver tests completed successfully!")
    Fixed:   print("\n[SUCCESS] All user ID resolver tests completed successfully!")


File: X:\Programs\agile-backlog-automation\tools\test_vision_with_ollama.py
===========================================================================
  Line 39: 📋
    Current: print(f"📋 Vision Statement:")
    Fixed:   print(f"[CONFIG] Vision Statement:")

  Line 46: ✅
    Current: print(f"✅ Configuration loaded")
    Fixed:   print(f"[SUCCESS] Configuration loaded")

  Line 47: 🔧
    Current: print(f"🔧 LLM Provider: {config.env['LLM_PROVIDER']}")
    Fixed:   print(f"[TOOL] LLM Provider: {config.env['LLM_PROVIDER']}")

  Line 48: 🤖
    Current: print(f"🤖 Model: {config.env['OLLAMA_MODEL']}")
    Fixed:   print(f"[AI] Model: {config.env['OLLAMA_MODEL']}")

  Line 61: ✅
    Current: print(f"✅ Epic generation completed in {generation_time:.2f}s")
    Fixed:   print(f"[SUCCESS] Epic generation completed in {generation_time:.2f}s")

  Line 67: 🔧
    Current: print(f"\n🔧 Testing Feature Decomposer...")
    Fixed:   print(f"\n[TOOL] Testing Feature Decomposer...")

  Line 79: ✅
    Current: print(f"✅ Feature generation completed in {generation_time:.2f}s")
    Fixed:   print(f"[SUCCESS] Feature generation completed in {generation_time:.2f}s")

  Line 96: ✅
    Current: print(f"✅ User story generation completed in {generation_time:.2f}s")
    Fixed:   print(f"[SUCCESS] User story generation completed in {generation_time:.2f}s")

  Line 102: ✅
    Current: print(f"✅ Ollama integration is working properly")
    Fixed:   print(f"[SUCCESS] Ollama integration is working properly")

  Line 106: ❌
    Current: print(f"❌ Test failed: {e}")
    Fixed:   print(f"[ERROR] Test failed: {e}")

  Line 112: 🔍
    Current: print("🔍 Testing Ollama Connection...")
    Fixed:   print("[SEARCH] Testing Ollama Connection...")

  Line 125: ✅
    Current: print(f"✅ Ollama connection successful")
    Fixed:   print(f"[SUCCESS] Ollama connection successful")

  Line 130: ❌
    Current: print(f"❌ Ollama connection failed: {e}")
    Fixed:   print(f"[ERROR] Ollama connection failed: {e}")

  Line 140: ❌
    Current: print("❌ Cannot proceed without Ollama connection")
    Fixed:   print("[ERROR] Cannot proceed without Ollama connection")

  Line 149: ✅
    Current: print(f"✅ Test suite completed!")
    Fixed:   print(f"[SUCCESS] Test suite completed!")


File: X:\Programs\agile-backlog-automation\tools\test_workflow_robustness.py
============================================================================
  Line 38: ✅
    Current: print("   ✅ API is healthy")
    Fixed:   print("   [SUCCESS] API is healthy")

  Line 40: ❌
    Current: print(f"   ❌ API returned status {response.status_code}")
    Fixed:   print(f"   [ERROR] API returned status {response.status_code}")

  Line 43: ❌
    Current: print(f"   ❌ API connection failed: {e}")
    Fixed:   print(f"   [ERROR] API connection failed: {e}")

  Line 106: ❌
    Current: print(f"   ❌ Failed to create project: {response.status_code}")
    Fixed:   print(f"   [ERROR] Failed to create project: {response.status_code}")

  Line 114: ❌
    Current: print(f"   ❌ No job/project ID in response")
    Fixed:   print(f"   [ERROR] No job/project ID in response")

  Line 116: ✅
    Current: print(f"   ✅ Project created with ID: {job_id}")
    Fixed:   print(f"   [SUCCESS] Project created with ID: {job_id}")

  Line 119: ❌
    Current: print(f"   ❌ Error creating project: {e}")
    Fixed:   print(f"   [ERROR] Error creating project: {e}")

  Line 130: ❌
    Current: print(f"   ❌ Job timed out after {TEST_TIMEOUT} seconds")
    Fixed:   print(f"   [ERROR] Job timed out after {TEST_TIMEOUT} seconds")

  Line 136: ❌
    Current: print(f"   ❌ Failed to get job status: {response.status_code}")
    Fixed:   print(f"   [ERROR] Failed to get job status: {response.status_code}")

  Line 147: ✅
    Current: print("   ✅ Job completed successfully!")
    Fixed:   print("   [SUCCESS] Job completed successfully!")

  Line 150: ❌
    Current: print("   ❌ Job failed!")
    Fixed:   print("   [ERROR] Job failed!")

  Line 157: ❌
    Current: print(f"   ❌ Error checking job status: {e}")
    Fixed:   print(f"   [ERROR] Error checking job status: {e}")

  Line 183: ❌
    Current: print("   ❌ No epics generated - workflow failed at first stage")
    Fixed:   print("   [ERROR] No epics generated - workflow failed at first stage")

  Line 187: ❌
    Current: print("   ❌ No features generated - feature decomposition failed")
    Fixed:   print("   [ERROR] No features generated - feature decomposition failed")

  Line 191: ❌
    Current: print("   ❌ No user stories generated - story decomposition failed")
    Fixed:   print("   [ERROR] No user stories generated - story decomposition failed")

  Line 195: ❌
    Current: print("   ❌ No tasks generated - developer agent failed")
    Fixed:   print("   [ERROR] No tasks generated - developer agent failed")

  Line 198: ✅
    Current: print("   ✅ All work item types generated successfully!")
    Fixed:   print("   [SUCCESS] All work item types generated successfully!")

  Line 218: ✅
    Current: print("\n   ✅ No generic content detected!")
    Fixed:   print("\n   [SUCCESS] No generic content detected!")

  Line 222: ❌
    Current: print(f"   ❌ Error checking results: {e}")
    Fixed:   print(f"   [ERROR] Error checking results: {e}")

  Line 231: ✅
    Current: print("✅ WORKFLOW ROBUSTNESS TEST PASSED")
    Fixed:   print("[SUCCESS] WORKFLOW ROBUSTNESS TEST PASSED")

  Line 234: ❌
    Current: print("❌ WORKFLOW ROBUSTNESS TEST FAILED")
    Fixed:   print("[ERROR] WORKFLOW ROBUSTNESS TEST FAILED")


File: X:\Programs\agile-backlog-automation\tools\test_working_models.py
=======================================================================
  Line 13: 🔄
    Current: print(f"🔄 Testing {model_name}...")
    Fixed:   print(f"[RETRY] Testing {model_name}...")

  Line 40: ✅
    Current: print(f"  ✅ {duration:.2f} seconds")
    Fixed:   print(f"  [SUCCESS] {duration:.2f} seconds")

  Line 44: ❌
    Current: print(f"  ❌ HTTP {response.status_code}: {response.text}")
    Fixed:   print(f"  [ERROR] HTTP {response.status_code}: {response.text}")

  Line 48: ❌
    Current: print(f"  ❌ Error: {e}")
    Fixed:   print(f"  [ERROR] Error: {e}")

  Line 65: 📊
    Current: print("📊 Working Models:")
    Fixed:   print("[STATS] Working Models:")

  Line 78: 🔄
    Current: print(f"🔄 Use {second['model']} as fallback")
    Fixed:   print(f"[RETRY] Use {second['model']} as fallback")

  Line 82: ❌
    Current: print("❌ No working models found")
    Fixed:   print("[ERROR] No working models found")


File: X:\Programs\agile-backlog-automation\tools\test_work_item_limits.py
=========================================================================
  Line 27: 📋
    Current: print("\n📋 Current Default Limits:")
    Fixed:   print("\n[CONFIG] Current Default Limits:")

  Line 34: ✅
    Current: print("\n✅ Testing Limit Validation")
    Fixed:   print("\n[SUCCESS] Testing Limit Validation")

  Line 39: ✅
    Current: print(f"✅ Valid limits: {validation.valid}")
    Fixed:   print(f"[SUCCESS] Valid limits: {validation.valid}")

  Line 56: 📋
    Current: print(f"\n📋 {preset_name.upper()} Preset")
    Fixed:   print(f"\n[CONFIG] {preset_name.upper()} Preset")

  Line 66: ✅
    Current: print(f"   ✅ Valid: {validation.valid}")
    Fixed:   print(f"   [SUCCESS] Valid: {validation.valid}")

  Line 73: ❌
    Current: print("   ❌ Preset not found")
    Fixed:   print("   [ERROR] Preset not found")

  Line 76: ❌
    Current: print("\n❌ Testing Invalid Limits")
    Fixed:   print("\n[ERROR] Testing Invalid Limits")

  Line 88: ✅
    Current: print(f"✅ Valid: {validation.valid}")
    Fixed:   print(f"[SUCCESS] Valid: {validation.valid}")

  Line 94: ✅
    Current: print("\n✅ All tests completed successfully!")
    Fixed:   print("\n[SUCCESS] All tests completed successfully!")


File: X:\Programs\agile-backlog-automation\tools\update_work_item_paths.py
==========================================================================
  Line 269: 🔄
    Current: print("\n🔄 Work Item Path Updater")
    Fixed:   print("\n[RETRY] Work Item Path Updater")

  Line 280: ❌
    Current: print("❌ Operation cancelled")
    Fixed:   print("[ERROR] Operation cancelled")

  Line 288: 📊
    Current: print("\n📊 Update Results:")
    Fixed:   print("\n[STATS] Update Results:")

  Line 291: ✅
    Current: print(f"✅ Updated: {results['updated']}")
    Fixed:   print(f"[SUCCESS] Updated: {results['updated']}")

  Line 293: ❌
    Current: print(f"❌ Failed: {results['failed']}")
    Fixed:   print(f"[ERROR] Failed: {results['failed']}")

  Line 296: 📋
    Current: print("\n📋 Detailed Results:")
    Fixed:   print("\n[CONFIG] Detailed Results:")

  Line 298: ✅❌
    Current: status_icon = {'updated': '✅', 'skipped': '⏭️', 'failed': '❌'}[detail['status']]
    Fixed:   status_icon = {'updated': '[SUCCESS]', 'skipped': '⏭️', 'failed': '[ERROR]'}[detail['status']]

  Line 316: 🔍
    Current: print("🔍 Check your Azure DevOps Backlog and Sprint views - work items should now be visible.")
    Fixed:   print("[SEARCH] Check your Azure DevOps Backlog and Sprint views - work items should now be visible.")

  Line 322: ❌
    Current: print(f"\n❌ Error: {e}")
    Fixed:   print(f"\n[ERROR] Error: {e}")


File: X:\Programs\agile-backlog-automation\utils\auto_log_dumper.py
===================================================================
  Line 49: 🔄
    Current: print(f"🔄 Auto log dumper initialized: {self.log_filename}")
    Fixed:   print(f"[RETRY] Auto log dumper initialized: {self.log_filename}")

  Line 86: ✅
    Current: print(f"✅ Auto log saved to: {self.log_filename}")
    Fixed:   print(f"[SUCCESS] Auto log saved to: {self.log_filename}")


File: X:\Programs\agile-backlog-automation\utils\llm_config_manager.py
======================================================================
  Line 50: 📋
    Current: logger.info(f"📋 Loaded active LLM config from database: {config['name']} ({config['provider']})")
    Fixed:   logger.info(f"[CONFIG] Loaded active LLM config from database: {config['name']} ({config['provider']})")

  Line 56: 📋
    Current: logger.info(f"📋 Loaded LLM config from environment: {env_config['provider']}")
    Fixed:   logger.info(f"[CONFIG] Loaded LLM config from environment: {env_config['provider']}")


File: X:\Programs\agile-backlog-automation\utils\notifier.py
============================================================
  Line 40: 📊
    Current: print(f"📊 Statistics received: {stats}")
    Fixed:   print(f"[STATS] Statistics received: {stats}")

  Line 41: 📋
    Current: print(f"📋 Workflow data keys: {list(workflow_data.keys())}")
    Fixed:   print(f"[CONFIG] Workflow data keys: {list(workflow_data.keys())}")

  Line 57: 🚨
    Current: print("🚨 DETECTED WORKFLOW FAILURE - Sending error notification instead of completion")
    Fixed:   print("[ALERT] DETECTED WORKFLOW FAILURE - Sending error notification instead of completion")

  Line 110: ✅
    Current: print("✅ Backlog job logged to database.")
    Fixed:   print("[SUCCESS] Backlog job logged to database.")

  Line 112: ❌
    Current: print(f"❌ Failed to log backlog job to database: {db_exc}")
    Fixed:   print(f"[ERROR] Failed to log backlog job to database: {db_exc}")

  Line 186: 📤
    Current: print("📤 Sending Teams notification...")
    Fixed:   print("[REQUEST] Sending Teams notification...")

  Line 190: ✅
    Current: print("✅ Teams notification sent successfully")
    Fixed:   print("[SUCCESS] Teams notification sent successfully")

  Line 192: ❌
    Current: print("❌ Teams notification failed")
    Fixed:   print("[ERROR] Teams notification failed")

  Line 194: ❌
    Current: print(f"❌ Teams notification error: {e}")
    Fixed:   print(f"[ERROR] Teams notification error: {e}")

  Line 201: ✅
    Current: print("✅ Email notification sent successfully")
    Fixed:   print("[SUCCESS] Email notification sent successfully")

  Line 203: ❌
    Current: print("❌ Email notification failed")
    Fixed:   print("[ERROR] Email notification failed")

  Line 205: ❌
    Current: print(f"❌ Email notification error: {e}")
    Fixed:   print(f"[ERROR] Email notification error: {e}")

  Line 209: 📊
    Current: print(f"📊 Notification summary: {success_count}/{len(self.channels)} channels successful")
    Fixed:   print(f"[STATS] Notification summary: {success_count}/{len(self.channels)} channels successful")

  Line 227: ❌
    Current: ❌ **Agile Backlog Automation - Quality Assessment Failed**
    Fixed:   [ERROR] **Agile Backlog Automation - Quality Assessment Failed**

  Line 248: ❌
    Current: ❌ **Agile Backlog Automation Failed**
    Fixed:   [ERROR] **Agile Backlog Automation Failed**

  Line 275: 🚨
    Current: 🚨 **Critical Backlog Issues Detected**
    Fixed:   [ALERT] **Critical Backlog Issues Detected**

  Line 309: ✅
    Current: print("✅ Teams notification sent.")
    Fixed:   print("[SUCCESS] Teams notification sent.")

  Line 312: ❌
    Current: print(f"❌ Teams error: {response.status_code} - {response.text}")
    Fixed:   print(f"[ERROR] Teams error: {response.status_code} - {response.text}")

  Line 315: ❌
    Current: print("❌ Teams notification timed out after 30 seconds")
    Fixed:   print("[ERROR] Teams notification timed out after 30 seconds")

  Line 318: ❌
    Current: print(f"❌ Teams exception: {e}")
    Fixed:   print(f"[ERROR] Teams exception: {e}")

  Line 349: 📤
    Current: print("📤 Sending email message")
    Fixed:   print("[REQUEST] Sending email message")

  Line 351: ✅
    Current: print("✅ Email notification sent successfully.")
    Fixed:   print("[SUCCESS] Email notification sent successfully.")

  Line 354: ❌
    Current: print(f"❌ SMTP error: {e}")
    Fixed:   print(f"[ERROR] SMTP error: {e}")

  Line 357: ❌
    Current: print(f"❌ Email connection error: {e}")
    Fixed:   print(f"[ERROR] Email connection error: {e}")

  Line 360: ❌
    Current: print(f"❌ Email timeout error: {e}")
    Fixed:   print(f"[ERROR] Email timeout error: {e}")

  Line 363: ❌
    Current: print(f"❌ Email exception: {e}")
    Fixed:   print(f"[ERROR] Email exception: {e}")

  Line 377: ✅
    Current: '✅': '[SUCCESS]',
    Fixed:   '[SUCCESS]': '[SUCCESS]',

  Line 378: ❌
    Current: '❌': '[FAILED]',
    Fixed:   '[ERROR]': '[FAILED]',

  Line 380: 📊
    Current: '📊': '[STATS]',
    Fixed:   '[STATS]': '[STATS]',

  Line 381: 🔍
    Current: '🔍': '[SEARCH]',
    Fixed:   '[SEARCH]': '[SEARCH]',

  Line 386: 🔧
    Current: '🔧': '[TOOL]',
    Fixed:   '[TOOL]': '[TOOL]',

  Line 387: 📋
    Current: '📋': '[CHECKLIST]',
    Fixed:   '[CONFIG]': '[CHECKLIST]',

  Line 393: 🔄
    Current: '🔄': '[REFRESH]',
    Fixed:   '[RETRY]': '[REFRESH]',

  Line 397: 🚨
    Current: '🚨': '[ALERT]',
    Fixed:   '[ALERT]': '[ALERT]',

  Line 399: 📤
    Current: '📤': '[SEND]',
    Fixed:   '[REQUEST]': '[SEND]',

  Line 400: 📥
    Current: '📥': '[RECEIVE]'
    Fixed:   '[DOWNLOAD]': '[RECEIVE]'

  Line 469: ✅
    Current: return "✅ All items uploaded successfully."
    Fixed:   return "[SUCCESS] All items uploaded successfully."

  Line 478: 📋
    Current: **📋 Next Steps:**
    Fixed:   **[CONFIG] Next Steps:**


File: X:\Programs\agile-backlog-automation\utils\qa_completeness_validator.py
=============================================================================
  Line 137: 📊
    Current: "📊 QA Test Organization Completeness Report",
    Fixed:   "[STATS] QA Test Organization Completeness Report",

  Line 141: 📋
    Current: "📋 Test Plan Coverage:",
    Fixed:   "[CONFIG] Test Plan Coverage:",

  Line 155: ❌
    Current: "❌ Missing Test Plans:",
    Fixed:   "[ERROR] Missing Test Plans:",

  Line 163: ❌
    Current: "❌ Missing Test Suites:",
    Fixed:   "[ERROR] Missing Test Suites:",

  Line 171: ❌
    Current: "❌ Unlinked Test Cases:",
    Fixed:   "[ERROR] Unlinked Test Cases:",

  Line 181: 🔧
    Current: "🔧 Recommendations:",
    Fixed:   "[TOOL] Recommendations:",


File: X:\Programs\agile-backlog-automation\utils\safe_logger.py
===============================================================
  Line 12: ❌
    Current: '❌': '[ERROR]',
    Fixed:   '[ERROR]': '[ERROR]',

  Line 13: ✅
    Current: '✅': '[SUCCESS]',
    Fixed:   '[SUCCESS]': '[SUCCESS]',

  Line 15: 🔍
    Current: '🔍': '[SEARCH]',
    Fixed:   '[SEARCH]': '[SEARCH]',

  Line 16: 🤖
    Current: '🤖': '[AI]',
    Fixed:   '[AI]': '[AI]',

  Line 17: 📋
    Current: '📋': '[CONFIG]',
    Fixed:   '[CONFIG]': '[CONFIG]',

  Line 18: 📦
    Current: '📦': '[PACKAGE]',
    Fixed:   '[PACKAGE]': '[PACKAGE]',

  Line 19: 💰
    Current: '💰': '[COST]',
    Fixed:   '[COST]': '[COST]',

  Line 20: 📤
    Current: '📤': '[REQUEST]',
    Fixed:   '[REQUEST]': '[REQUEST]',

  Line 21: 📊
    Current: '📊': '[STATS]',
    Fixed:   '[STATS]': '[STATS]',

  Line 22: 🔄
    Current: '🔄': '[RETRY]',
    Fixed:   '[RETRY]': '[RETRY]',

  Line 23: 📥
    Current: '📥': '[DOWNLOAD]',
    Fixed:   '[DOWNLOAD]': '[DOWNLOAD]',

  Line 25: 🚨
    Current: '🚨': '[ALERT]',
    Fixed:   '[ALERT]': '[ALERT]',

  Line 26: 💨
    Current: '💨': '[FAST]',
    Fixed:   '[FAST]': '[FAST]',

  Line 27: 🔧
    Current: '🔧': '[TOOL]',
    Fixed:   '[TOOL]': '[TOOL]',
