RESPONSE FORMAT: ONLY valid JSON array. NO text, NO markdown, NO explanations.

CONTEXT:
Project: ${project_name}
Domain: ${domain}
Tech Stack: ${tech_stack}
Architecture: ${architecture_pattern}
Database: ${database_type}
Cloud: ${cloud_platform}
Team: ${team_size}, ${sprint_duration} sprints

USER STORY: ${user_story_title}
Description: ${user_story_description}
Acceptance Criteria: ${user_story_acceptance_criteria}

EXAMPLE TASK (your output must match this structure exactly):
{
  "title": "Implement real-time vehicle dispatch WebSocket service",
  "description": "Create WebSocket service using Socket.IO for real-time vehicle tracking. Implement /ws/dispatch namespace with events: vehicle-assigned, location-update, eta-change. Use Redis pub/sub for horizontal scaling. Include heartbeat mechanism and reconnection logic.",
  "category": "backend",
  "time_estimate": 6,
  "story_points": 5,
  "complexity": "High",
  "dependencies": ["Redis cache setup", "Vehicle data model"],
  "acceptance_criteria": [
    "WebSocket connection established within 2 seconds",
    "Location updates streamed with <100ms latency",
    "Handles 1000+ concurrent connections"
  ],
  "technical_details": {
    "endpoints": ["/ws/dispatch"],
    "models": ["VehicleLocation", "DispatchStatus"],
    "services": ["Redis", "VehicleTrackingAPI"]
  }
}

REQUIREMENTS (3-8 tasks total):
1. Map each acceptance criterion to specific tasks
2. Maximum 8 hours per task (split larger tasks)
3. Include setup, implementation, and testing tasks
4. Reference specific endpoints, models, and services
5. Tasks must be independently deployable
6. Consider error handling and monitoring
7. Use domain-specific technical details

Generate tasks that collectively implement ALL acceptance criteria from the user story.