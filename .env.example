# Environment Configuration Template
# Copy this file to .env and update with your actual values

# =============================================================================
# PRODUCTION DEPLOYMENT SETTINGS
# =============================================================================

# Set to 'production' for production deployments
# This affects cookie security, CORS settings, and other security features
ENVIRONMENT=development

# JWT Secret Key for token signing (REQUIRED in production)
# Generate a secure random key: python -c "import secrets; print(secrets.token_urlsafe(32))"
# NEVER use the auto-generated fallback in production!
JWT_SECRET_KEY=your-super-secure-jwt-secret-key-here

# JWT Refresh Token Secret (REQUIRED in production)
# Generate separately from main JWT secret
JWT_REFRESH_SECRET_KEY=your-super-secure-refresh-secret-key-here
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# =============================================================================
# AZURE DEVOPS INTEGRATION
# =============================================================================

# Azure DevOps Organization URL
AZURE_DEVOPS_ORG=https://dev.azure.com/yourorganization

# Project name in Azure DevOps
AZURE_DEVOPS_PROJECT=YourProject

# Personal Access Token for Azure DevOps API
AZURE_DEVOPS_PAT=your-pat-here

# Default area path for work items
AREA_PATH=YourProject

# =============================================================================
# LLM PROVIDER CONFIGURATION
# =============================================================================

# Primary LLM provider: openai, grok, or ollama
LLM_PROVIDER=openai

# OpenAI Configuration
OPENAI_API_KEY=your-openai-api-key-here

# Grok (X.AI) Configuration  
GROK_API_KEY=your-grok-api-key-here

# Ollama Configuration (for local LLM)
OLLAMA_BASE_URL=http://localhost:11434
OLLAMA_MODEL=qwen2.5:32b
OLLAMA_PRESET=balanced

# =============================================================================
# NOTIFICATION SETTINGS
# =============================================================================

# Email to receive workflow completion notifications
NOTIFICATION_EMAIL=your-email@example.com

# SMTP Configuration (system-level, not exposed in UI)
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-smtp-username
SMTP_PASSWORD=your-smtp-password

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# For SQLite (default, good for small deployments):
DATABASE_URL=sqlite:///./backlog_jobs.db

# For PostgreSQL (recommended for production):
# DATABASE_URL=postgresql://username:password@localhost:5432/agilebacklog

# =============================================================================
# CORS CONFIGURATION
# =============================================================================

# List of allowed origins for CORS (update with your frontend URL)
CORS_ORIGINS=["http://localhost:3000","https://yourdomain.com"]

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

API_HOST=0.0.0.0
API_PORT=8000

# =============================================================================
# PRODUCTION SECURITY NOTES
# =============================================================================

# 1. JWT_SECRET_KEY: Must be set to a secure random value in production
# 2. JWT_REFRESH_SECRET_KEY: Must be different from JWT_SECRET_KEY
# 3. ENVIRONMENT: Set to 'production' for production deployments
# 4. Personal Access Tokens: Use fine-grained permissions
# 5. API Keys: Rotate regularly and store securely
# 6. CORS: Update CORS_ORIGINS with your actual domain
# 7. HTTPS: Always use HTTPS in production for secure cookie transmission
# 8. Database: Use PostgreSQL for production, not SQLite